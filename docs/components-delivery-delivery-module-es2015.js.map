{"version":3,"sources":["./src/app/shared/interfaces/delivery-boy.ts","./src/app/components/delivery/list-delivery-boys/list-delivery-boys.component.ts","./src/app/components/delivery/list-delivery-boys/list-delivery-boys.component.html","./src/app/components/delivery/orders-board/orders-board.component.ts","./src/app/components/delivery/orders-board/orders-board.component.html","./node_modules/@datorama/akita/__ivy_ngcc__/fesm2015/datorama-akita.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","./src/app/components/delivery/delivery-summery/delivery-summery.component.ts","./src/app/components/delivery/delivery-summery/delivery-summery.component.html","./src/app/components/delivery/view-delivery-boy/view-delivery-boy.component.ts","./src/app/components/delivery/view-delivery-boy/view-delivery-boy.component.html","./src/app/components/delivery/delivery-hour-report/delivery-hour-report.component.ts","./src/app/components/delivery/delivery-hour-report/delivery-hour-report.component.html","./src/app/components/delivery/delivery-orders/delivery-orders.component.ts","./src/app/components/delivery/delivery-orders/delivery-orders.component.html","./src/app/components/delivery/zone-orders/zone-orders.component.ts","./src/app/components/delivery/zone-orders/zone-orders.component.html","./src/app/shared/data/utils/issue.ts","./src/app/components/delivery/delivery-accounts/delivery-accounts.component.ts","./src/app/components/delivery/delivery-accounts/delivery-accounts.component.html","./src/app/shared/data/project.store.ts","./src/app/components/delivery/zone-chat/zone-chat.component.ts","./src/app/components/delivery/zone-chat/zone-chat.component.html","./src/assets/filter/filter.store.ts","./src/app/components/delivery/issue-loader/issue-loader.component.ts","./src/app/components/delivery/issue-loader/issue-loader.component.html","./src/app/components/delivery/add-delivery-boy/add-delivery-boy.component.ts","./src/app/components/delivery/add-delivery-boy/add-delivery-boy.component.html","./src/app/components/delivery/zone-hours/zone-hours.component.ts","./src/app/components/delivery/zone-hours/zone-hours.component.html","./src/app/components/delivery/orders-dashboard/orders-dashboard.component.ts","./src/app/components/delivery/orders-dashboard/orders-dashboard.component.html","./node_modules/@ngneat/content-loader/__ivy_ngcc__/fesm2015/ngneat-content-loader.js","./src/app/components/delivery/issue-card/issue-card.component.ts","./src/app/components/delivery/issue-card/issue-card.component.html","./node_modules/@ngneat/until-destroy/__ivy_ngcc__/fesm2015/ngneat-until-destroy.js","./src/app/shared/data/issue.ts","./src/app/components/delivery/delivery-routing.module.ts","./src/app/shared/service/project.service.ts","./src/app/components/delivery/issue-detail/issue-detail.component.ts","./src/app/components/delivery/issue-detail/issue-detail.component.html","./src/assets/filter/filter.query.ts","./src/app/components/delivery/delivery.module.ts","./src/app/components/delivery/issue-modal/issue-modal.component.ts","./src/app/components/delivery/issue-modal/issue-modal.component.html","./src/app/components/delivery/zone-delivery-boys-tracking/zone-delivery-boys-tracking.component.ts","./src/app/components/delivery/zone-delivery-boys-tracking/zone-delivery-boys-tracking.component.html","./src/app/shared/data/project.query.ts","./src/app/shared/service/map.directive.ts","./src/app/shared/data/issue-priority-icon.ts"],"names":[],"mappings":"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EAEE;QAAA,gHAIM;QACV,4DAAM;QACN,4DAAM;QACN,6EAAmC;;QANP,0DAAgB;QAAhB,sFAAgB;;ADU/B,oBAAoB;IADhC,0EAAY,EAAE;GACF,oBAAoB,CAsBhC;AAtBgC;6FAApB,oBAAoB;cANhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;2NAGU,SAAS;kBAAjB,mDAAK;;;;;;;;;;;;;;AEfpE;;AAEf;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,qCAAqC,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW,yCAAyC,+GAA+G;AACvN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD,IAAI;AACJ;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2EAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,0DAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS,oCAAoC,0DAAG;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB;AACrE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB;AACrE,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,SAAS,cAAc;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA,kCAAkC,+CAAE,cAAc,0CAAK;AACvD;AACA;AACA;;AAEA;AACA,WAAW,0DAAa,mBAAmB,gEAAS;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,4CAAO;AACjC;AACA,uBAAuB,kDAAa;AACpC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;;AAEA;AACA;AACA,iHAAiH;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc,8CAA8C;AAC7G,uBAAuB,WAAW,sBAAsB,aAAa;AACrE,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB,WAAW,UAAU,mBAAmB;AAC/D,KAAK;AACL,wCAAwC,oBAAoB;AAC5D;AACA;AACA,eAAe,wBAAwB,kBAAkB,oDAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc,8BAA8B;AAC7F;AACA,6CAA6C,UAAU,MAAM,KAAK,SAAS,UAAU,SAAS,UAAU,MAAM,KAAK;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB,yCAAyC,YAAY;AACrD;AACA;AACA,qCAAqC,YAAY;AACjD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,iBAAiB;AAC/E;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,yCAAyC;AACpD,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW,2FAA2F;AACzJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW,aAAa,iEAAiE;AAClI;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uDAAuD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW,qDAAqD;AACnH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO,kBAAkB,UAAU;AACxE;AACA;;AAEA;AACA;AACA,+BAA+B,MAAM;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,4CAAO;AACvC;AACA,iCAAiC,oDAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,4CAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,+CAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAG;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,wBAAwB,oDAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,WAAW,UAAU;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA,qEAAqE,WAAW,QAAQ;AACxF;AACA;AACA;AACA;AACA,8CAA8C,0DAAG,yCAAyC,2EAAoB;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe,EAAE,yBAAyB;AACvE;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,CAAC,8DAAuB,GAAG;AACnE,aAAa,+DAAwB,EAAE,cAAc;;AAErD;AACA,yBAAyB,kFAAkF;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,oDAAM;AACjF;AACA;AACA;AACA;AACA,yCAAyC,WAAW,yCAAyC,qDAAqD;AAClJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,4CAA4C;AAC5C;AACA,iCAAiC,4CAAO;AACxC,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,uBAAuB,MAAM,QAAQ;AACrC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC,yCAAyC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA,+BAA+B,iBAAiB;AAChD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAA4C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,wEAAwE,qBAAqB,gBAAgB;AAC7G,aAAa;AACb,SAAS;AACT;AACA,oEAAoE,qBAAqB,iBAAiB;AAC1G;AACA,iCAAiC,kCAAkC;AACnE;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,yDAAyD,YAAY,mBAAmB;AACxF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,GAAG,QAAQ;AAC9C;AACA,2BAA2B,QAAQ,GAAG,QAAQ,IAAI,iBAAiB;AACnE,2BAA2B,QAAQ,GAAG,QAAQ,IAAI,mBAAmB;AACrE;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,WAAW,yGAAyG,iEAAiE;AACtP,sDAAsD,8CAA8C;AACpG,oDAAoD,yCAAyC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,cAAc,mBAAmB;AAC1F;AACA;AACA,iEAAiE,WAAW,yCAAyC,8BAA8B;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,W;AACjE;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW,kBAAkB;AAC9E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW,qHAAqH;AACjL,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD,0BAA0B,aAAa,eAAe;AACtD,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW,cAAc;AAC1E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV;AACA,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV;AACA,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iCAAiC;AACjG,qDAAqD,iCAAiC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6DAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6DAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2EAAoB,wBAAwB,0DAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2DAA2D,0DAAG;AAC9D;AACA,sBAAsB,2DAA2D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB,2DAA2D,0DAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,0DAAG,0BAA0B,2EAAoB;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gEAAS;AACvD;AACA,0CAA0C,gEAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,0DAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,MAAM;AAChF;AACA,mDAAmD,6DAAM,GAAG,OAAO,8BAA8B,0DAAG;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,0DAAG,SAAS,2EAAoB,IAAI,gEAAS;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,WAAW,EAAE;AAC7C;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,sHAAsH;AACtH;AACA,KAAK;AACL;AACA;;AAEA;AACA,8BAA8B,kDAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yDAAY;AAC/C,eAAe,iDAAI;AACnB;AACA,WAAW,+CAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,6KAA6K,mBAAmB;AAC3M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,mEAAmE,+BAA+B;AAClG,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAI,KAAK,0DAAG;AAClC;AACA;AACA;AACA;AACA,aAAa,GAAG,6DAAM;AACtB;AACA;AACA,mDAAmD,yDAAyD;AAC5G,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe,GAAG,KAAK;AACzC;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAe;AACxC;AACA,0BAA0B,4CAAO;AACjC,uDAAuD,2EAAoB;AAC3E;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAG;AACzB;AACA;AACA,aAAa;AACb;AACA,4BAA4B,0DAAa;AACzC,kBAAkB,2DAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC,0BAA0B,kDAAK,kFAAkF,gEAAS,KAAK,0DAAG;AAClI,oDAAoD;AACpD;AACA;AACA;AACA,kBAAkB,2DAAI;AACtB;AACA,+BAA+B,uCAAuC;AACtE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,8BAA8B,mCAAmC;AACjE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,4DAAK;AAC/D,oDAAoD;AACpD,eAAe,0BAA0B;AACzC,wBAAwB,oDAAe;AACvC,YAAY,yDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2DAA2D;AACrG;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0BAA0B,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iDAAI,aAAa,gEAAS;AAC7C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iBAAiB,OAAO,2DAAI,KAAK,0DAAG;AACzE,2DAA2D,qBAAqB,2DAA2D;AAC3I,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wDAAU;AACV;AACA,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,qCAAqC,6GAA6G;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,qCAAqC,mCAAmC;AACxE,qFAAqF,0BAA0B,GAAG,qBAAqB,aAAa;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,mCAAmC;AAC5F;AACA;AACA,0BAA0B,0BAA0B,GAAG,qBAAqB;AAC5E;AACA;AACA,yDAAyD,mCAAmC;AAC5F;AACA;AACA;AACA;AACA;AACA,kCAAkC,gDAAgD;AAClF;AACA;AACA;AACA;AACA,uDAAuD,mEAAY;AACnE;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oDAAe;AACjD,iEAAiE,2EAAoB;AACrF,oCAAoC,oDAAe;AACnD,qEAAqE,2EAAoB;AACzF;AACA;AACA;AACA,kBAAkB,+DAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY;AACtB,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY;AACtB,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,kDAAK;AACpB;AACA,+BAA+B,+DAAQ;AACvC,SAAS;AACT;AACA;;AAEA;AACA;AACA,eAAe,kDAAK;AACpB;AACA;AACA,+BAA+B,0DAAG;AAClC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,wCAAwC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAM,iDAAiD,2DAAI;AACjF;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,MAAM;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAK,IAAI,gEAAS;AACpC;AACA;AACA,mBAAmB,kDAAK,CAAC,+CAAE,EAAE,kDAAkD;AAC/E;AACA,YAAY,6DAAM;AAClB;AACA,YAAY,0DAAG;AACf;AACA,YAAY,6DAAM;AAClB;AACA,YAAY,gEAAS;AACrB;AACA;AACA,sBAAsB,6DAAM;AAC5B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEqwD;;AAErwD,0C;;;;;;;;;;;;ACtjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuR;AAC5O;AACmD;AACN;AACwB;AACb;AAClB;AAC9B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACS;AACL;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,mDAAmD;AACpF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B,EAAE,gBAAgB;AACrF;AACA,mCAAmC,6FAA+B,EAAE,iBAAiB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iCAAiC;AACjC;AACA,+BAA+B,4CAAO;AACtC;AACA,wCAAwC,iDAAY;AACpD;AACA,sCAAsC,iDAAY;AAClD;AACA,mCAAmC,iDAAY;AAC/C;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA,2BAA2B,4CAAO;AAClC;AACA,4BAA4B,4CAAO;AACnC;AACA,yBAAyB,4CAAO;AAChC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB,GAAG,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2EAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO,GAAG,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc,MAAM,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,gBAAgB;AACnC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAAc,CAAC,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AAC7J,yBAAyB,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAChN;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,I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CvB;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,EAAE,EAAE,GAAG;AACjE,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,4BAA4B,0DAAY;AACxC;AACA,yBAAyB,0DAAY;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,0DAA0D,0DAAG;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA,YAAY,0DAAG;AACf;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,kDAAK;AAC5B,mDAAmD,gEAAS;AAC5D,iBAAiB;AACjB,aAAa,GAAG,gEAAS;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC,kFAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,eAAe;AAC/C,SAAS;AACT;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,oHAAoH;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,qBAAqB,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,sBAAsB,+DAAwB,CAAC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AAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,6EAA6E,qDAAqD,kCAAkC;AACtN;AACA,gBAAgB,OAAO,mDAAK,uCAAuC;AACnE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mFAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA;AACA;AACA,6BAA6B,yEAAW;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mFAAqB;AACvD,qCAAqC,mFAAqB;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,uFAAuF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,YAAY,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,gEAAqB,MAAM,+DAAwB,wBAAwB,+DAAwB,CAAC,uEAAuB,GAAG,+DAAwB,sBAAsB;AAC7Z,mBAAmB,+DAAwB,EAAE,qLAAqL;AAClO,QAAQ,4DAAqB;AAC7B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,8cAA8c,YAAY,yHAAyH,wCAAwC,gEAAyB;AACtqB;AACA,aAAa,0CAA0C;AACvD,aAAa,mDAAmD;AAChE,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EA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","file":"components-delivery-delivery-module-es2015.js","sourcesContent":["export class DeliveryBoy{\n    name?:string;\n    passwored?:string;\n    phone?:string;\n    email?:string;\n    country?:string;\n    state?:string;\n    town?:string;\n    role?:string;\n    currentLocation?:string;\n    location?:any;\n    status?:string;\n    address?:string;\n    close?:string;\n    timeStamp?:string;\n    idNumber?:string;\n    idPhoto1?:string;\n    idPhoto2?:string;\n    fishPhoto?:string;\n    dLPhoto?:string;\n    mLPhoto?:string;\n    vType?:string;\n    collectAmount?:number = 0;\n    com?:string = \"100\";\n   block?:boolean;\n   online?:boolean;\n   aType?:string;\n   busy:boolean;\n}","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { State } from 'src/app/shared/interfaces/state';\nimport { User } from 'src/app/shared/interfaces/user';\nimport { AuthService } from 'src/app/shared/service/auth.service';\nimport { DataService } from 'src/app/shared/service/data.service';\nimport { DeliveryService } from 'src/app/shared/service/delivery.service';\n\n@Component({\n  selector: 'app-list-delivery-boys',\n  templateUrl: './list-delivery-boys.component.html',\n  styleUrls: ['./list-delivery-boys.component.scss']\n})\nexport class ListDeliveryBoysComponent implements OnInit {\n\n \n  public closeResult: string;\n  @ViewChild(DataTableDirective, { static: false })\n  public dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  isDtInitialized:boolean = false\n  public dtTrigger: Subject<any> = new Subject();\n  public customers = [];\n  public editedClient;\n  public tempId: any;\n  public states:State[]=[];\n  public rows = [];\n  public srch = [];\n  public statusValue;\n  public pipe = new DatePipe(\"en-US\");\n  selectedTown='';\n  selectedState:any;\n  user:User;\n  allZone:boolean = false;\n  constructor(private modalService: NgbModal,private deliveryService:DeliveryService,private _domSanitizer: DomSanitizer\n    ,private router:Router,private dataService:DataService) {\n      const user = localStorage.getItem('adminUser');\n      if(user){\n        console.log(user) \n        let jsonObj: any = JSON.parse(user); // string to generic object first\n        this.user = <User>jsonObj;\n        console.log(this.user)\n        this.allZone = this.user.allZone;\n    \n        if(!this.allZone){\n      \n          this.selectedTown = this.user.town;\n          this.selectedState = this.user.state;\n         \n        }\n        }\n      this.dataService.getAllStates().subscribe(states=>{\n        this.states = states;\n      })\n   \n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n \n\n  ngOnInit() {\n    this.dtOptions = {\n      // ... skipped ...\n      pageLength: 10,\n      language : {\n        \"emptyTable\": \"ليست هناك بيانات متاحة في الجدول\",\n        \"loadingRecords\": \"جارٍ التحميل...\",\n        \"lengthMenu\": \" _MENU_ \",\n        \"zeroRecords\": \"لم يعثر على أية سجلات\",\n        \"info\": \"إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل\",\n        \"infoEmpty\": \"يعرض 0 إلى 0 من أصل 0 سجل\",\n        \"infoFiltered\": \"(منتقاة من مجموع _MAX_ مُدخل)\",\n        \"search\": \"بحث:\",\n        \"paginate\": {\n            \"first\": \"الأول\",\n            \"previous\": \"السابق\",\n            \"next\": \"التالي\",\n            \"last\": \"الأخير\"\n        },\n        \"aria\": {\n            \"sortAscending\": \": تفعيل لترتيب العمود تصاعدياً\",\n            \"sortDescending\": \": تفعيل لترتيب العمود تنازلياً\"\n        },\n        \"processing\": \"جارٍ المعالجة...\"\n    },\n      dom: \"lfrtip\",\n    };\n\n    this.getDBoys();\n  }\n  getDBoys() {\n    if(this.allZone){\n      this.deliveryService.getAllDeliveryBoys().subscribe(res=>{\n        if (this.isDtInitialized) {\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.dtTrigger.next();\n          });\n        }else{\n          this.isDtInitialized = true\n          this.dtTrigger.next();\n        }\n        \n        this.customers = res;\n        console.log(this.customers)\n      \n      });\n    }else{\n      this.deliveryService.getDeliveryBoysByZone(this.selectedState).subscribe(res=>{\n        if (this.isDtInitialized) {\n          this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.dtTrigger.next();\n          });\n        }else{\n          this.isDtInitialized = true\n          this.dtTrigger.next();\n        }\n        \n        this.customers = res;\n        console.log(this.customers)\n      \n      });\n    }\n    \n   \n  }\n  onEditClient(event){\n\n  }\n\n  onDeleteConfirm(user) {\n    if (window.confirm('Are you sure you want to delete '+user.name+' ?')) {\n    //  category.confirm.resolve(category.newData);\n      console.log(user.phone)\n     this.deliveryService.removeDB(user.phone);\n    } else {\n      user.confirm.reject();\n    }\n  }\n  \n\n    onEdit(id){\n      this.router.navigate(['/delivery/add-delivery-boy'],{ queryParams: {id: id}});\n      }\n\n    \n\n}\n\n","<!-- Container-fluid starts-->\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                \n                <div class=\"card-body\">\n                    \n                    <div id=\"batchDelete\" class=\"category-table custom-datatable\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"datatable\"\n                            class=\"table table-striped custom-table datatable\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>{{'Name'|translate}}</th>\n                                    <th>{{'Phone'|translate}}</th>\n                                    <th>{{'Email'|translate}}</th>\n                                    <th>{{'Zone'|translate}}</th>\n                                    <th class=\"text-right\">{{'Action'|translate}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let customer of customers; let i = index\">\n                                    <td>{{i+1}}</td>\n                                    <td><a routerLink = \"/delivery/view-delivery-boy\" [queryParams]=\"{id: customer?.phone}\">{{ customer?.name }}</a></td>\n                                    <td>{{customer?.phone}}</td>\n                                    <td>{{customer?.email}}</td>\n                                    <td>{{states|statePipe:customer?.state}}</td>\n                                    <td class=\"text-right\">\n                                        <div class=\"dropdown dropdown-action\">\n                                            <a class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\n                                                aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\n                                            <div class=\"dropdown-menu dropdown-menu-right\">\n                                                <a class=\"dropdown-item\"  data-toggle=\"modal\"\n                                                data-target=\"#edit_leavetype\" (click)=\"onEdit(customer.phone)\"><i class=\"fa fa-pencil m-r-5\"></i> {{'Edit'|translate}}</a>\n                                                <a class=\"dropdown-item\"\n                                                    (click)=\"onDeleteConfirm(customer)\"><i class=\"fa fa-trash-o m-r-5\"></i>\n                                                    {{'Delete'|translate}}</a>\n                                            </div>\n                                        </div>\n                                    </td>\n                                  \n                                </tr>\n                                <tr *ngIf=\"customers.length === 0\">\n                                    <td colspan=\"10\">\n                                        <h5 style=\"text-align: center;\">{{'No data found'|translate}}</h5>\n                                    </td>\n                                   \n                                </tr>\n                            </tbody>\n                        </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends-->\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { IssueStatus } from 'src/app/shared/data/issue';\nimport { ProjectQuery } from 'src/app/shared/data/project.query';\nimport { Order } from 'src/app/shared/interfaces/order';\nimport { OrderService } from 'src/app/shared/service/order.service';\nimport { ProjectService } from 'src/app/shared/service/project.service';\n\n@Component({\n  selector: 'app-orders-board',\n  templateUrl: './orders-board.component.html',\n  styleUrls: ['./orders-board.component.scss']\n})\n@UntilDestroy()\nexport class OrdersBoardComponent {\n  @Input() Allorders:Order[]=[]\n  \n  issueStatuses: IssueStatus[] = [\n    IssueStatus.NEW,\n    IssueStatus.PREPARE,\n    IssueStatus.STORED,\n    IssueStatus.DISPATCHING\n  ];\n\n  orders:Order[]=[]\n\n  constructor(public projectQuery: ProjectQuery,private orderService:OrderService) {\n\n   \n        \n \n   \n\n  }\n  \n\n}\n","<div class=\"flex col-xl-12 w-full h-full py-8 pl-8 pr-6\">\n  <div class=\"flex col-xl-12 mt-7\"\n     cdkDropListGroup>\n    <div app-zone-orders class=\"board-dnd-list\"\n         *ngFor=\"let status of issueStatuses\"\n         [status]=\"status\"\n         [orders]=\"projectQuery.issueByStatusSorted$(status,Allorders)\">\n    </div>\n</div>  \n</div>\n<svg-definitions></svg-definitions>","import { distinctUntilChanged, map, auditTime, tap, filter, switchMap, skip, delay, take, debounceTime, pairwise, finalize, first } from 'rxjs/operators';\nimport { of, EMPTY, combineLatest, Subject, ReplaySubject, BehaviorSubject, isObservable, from, merge, defer } from 'rxjs';\nimport { __rest, __decorate, __metadata } from 'tslib';\n\nimport * as ɵngcc0 from '@angular/core';\nconst currentAction = {\n    type: null,\n    entityIds: null,\n    skip: false,\n    payload: null\n};\nlet customActionActive = false;\nfunction resetCustomAction() {\n    customActionActive = false;\n}\n// public API for custom actions. Custom action always wins\nfunction logAction(type, entityIds, payload) {\n    setAction(type, entityIds, payload);\n    customActionActive = true;\n}\nfunction setAction(type, entityIds, payload) {\n    if (customActionActive === false) {\n        currentAction.type = type;\n        currentAction.entityIds = entityIds;\n        currentAction.payload = payload;\n    }\n}\nfunction setSkipAction(skip = true) {\n    currentAction.skip = skip;\n}\nfunction action(action, entityIds) {\n    return function (target, propertyKey, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            logAction(action, entityIds);\n            return originalMethod.apply(this, args);\n        };\n        return descriptor;\n    };\n}\n\n// @internal\nfunction hasEntity(entities, id) {\n    return entities.hasOwnProperty(id);\n}\n\n// @internal\nfunction isArray(value) {\n    return Array.isArray(value);\n}\n\n// @internal\nfunction hasActiveState(state) {\n    return state.hasOwnProperty('active');\n}\n// @internal\nfunction isMultiActiveState(active) {\n    return isArray(active);\n}\n// @internal\nfunction resolveActiveEntity({ active, ids, entities }) {\n    if (isMultiActiveState(active)) {\n        return getExitingActives(active, ids);\n    }\n    if (hasEntity(entities, active) === false) {\n        return null;\n    }\n    return active;\n}\n// @internal\nfunction getExitingActives(currentActivesIds, newIds) {\n    const filtered = currentActivesIds.filter(id => newIds.indexOf(id) > -1);\n    /** Return the same reference if nothing has changed */\n    if (filtered.length === currentActivesIds.length) {\n        return currentActivesIds;\n    }\n    return filtered;\n}\n\n// @internal\nfunction addEntities({ state, entities, idKey, options = {}, preAddEntity }) {\n    let newEntities = {};\n    let newIds = [];\n    let hasNewEntities = false;\n    for (const entity of entities) {\n        if (hasEntity(state.entities, entity[idKey]) === false) {\n            // evaluate the middleware first to support dynamic ids\n            const current = preAddEntity(entity);\n            const entityId = current[idKey];\n            newEntities[entityId] = current;\n            if (options.prepend)\n                newIds.unshift(entityId);\n            else\n                newIds.push(entityId);\n            hasNewEntities = true;\n        }\n    }\n    return hasNewEntities\n        ? {\n            newState: Object.assign(Object.assign({}, state), { entities: Object.assign(Object.assign({}, state.entities), newEntities), ids: options.prepend ? [...newIds, ...state.ids] : [...state.ids, ...newIds] }),\n            newIds\n        }\n        : null;\n}\n\n// @internal\nfunction isNil(v) {\n    return v === null || v === undefined;\n}\n\n// @internal\nfunction coerceArray(value) {\n    if (isNil(value)) {\n        return [];\n    }\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * Add item to a collection\n *\n * @example\n *\n *\n * store.update(state => ({\n *   comments: arrayAdd(state.comments, { id: 2 })\n * }))\n *\n */\nfunction arrayAdd(arr, newEntity, options = {}) {\n    const newEntities = coerceArray(newEntity);\n    const toArr = arr || [];\n    return options.prepend ? [...newEntities, ...toArr] : [...toArr, ...newEntities];\n}\n\nconst DEFAULT_ID_KEY = 'id';\n\n// @internal\nfunction isEmpty(arr) {\n    if (isArray(arr)) {\n        return arr.length === 0;\n    }\n    return false;\n}\n\n// @internal\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\n// @internal\nfunction find(collection, idsOrPredicate, idKey) {\n    const result = [];\n    if (isFunction(idsOrPredicate)) {\n        for (const entity of collection) {\n            if (idsOrPredicate(entity) === true) {\n                result.push(entity);\n            }\n        }\n    }\n    else {\n        const toSet = coerceArray(idsOrPredicate).reduce((acc, current) => acc.add(current), new Set());\n        for (const entity of collection) {\n            if (toSet.has(entity[idKey])) {\n                result.push(entity);\n            }\n        }\n    }\n    return result;\n}\n// @internal\nfunction distinctUntilArrayItemChanged() {\n    return distinctUntilChanged((prevCollection, currentCollection) => {\n        if (prevCollection === currentCollection) {\n            return true;\n        }\n        if (!isArray(prevCollection) || !isArray(currentCollection)) {\n            return false;\n        }\n        if (isEmpty(prevCollection) && isEmpty(currentCollection)) {\n            return true;\n        }\n        if (prevCollection.length !== currentCollection.length) {\n            return false;\n        }\n        const isOneOfItemReferenceChanged = currentCollection.some((item, i) => {\n            return prevCollection[i] !== item;\n        });\n        // return false means there is a change and we want to call next()\n        return isOneOfItemReferenceChanged === false;\n    });\n}\nfunction arrayFind(idsOrPredicate, idKey) {\n    return function (source) {\n        return source.pipe(map((collection) => {\n            // which means the user deleted the root entity or set the collection to nil\n            if (isArray(collection) === false) {\n                return collection;\n            }\n            return find(collection, idsOrPredicate, idKey || DEFAULT_ID_KEY);\n        }), distinctUntilArrayItemChanged(), map((value) => {\n            if (isArray(value) === false) {\n                return value;\n            }\n            if (isArray(idsOrPredicate) || isFunction(idsOrPredicate)) {\n                return value;\n            }\n            return value[0];\n        }));\n    };\n}\n\n// @internal\nfunction isObject(value) {\n    const type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n}\n\n// @internal\nfunction not(pred) {\n    return function (...args) {\n        return !pred(...args);\n    };\n}\n\n/**\n * Remove item from collection\n *\n * @example\n *\n *\n * store.update(state => ({\n *   names: arrayRemove(state.names, ['one', 'second'])\n * }))\n */\nfunction arrayRemove(arr, identifier, idKey = DEFAULT_ID_KEY) {\n    let identifiers;\n    let filterFn;\n    if (isFunction(identifier)) {\n        filterFn = not(identifier);\n    }\n    else {\n        identifiers = coerceArray(identifier);\n        filterFn = (current) => {\n            return identifiers.includes(isObject(current) ? current[idKey] : current) === false;\n        };\n    }\n    if (Array.isArray(arr)) {\n        return arr.filter(filterFn);\n    }\n}\n\n/**\n * Create an array value comparator for a specific key of the value.\n * @param prop The property of the value to be compared.\n */\nfunction byKey(prop) {\n    return (a, b) => a[prop] === b[prop];\n}\n/**\n * Create an array value comparator for the id field of an array value.\n */\nfunction byId() {\n    return byKey('id');\n}\n/**\n * Adds or removes a value from an array by comparing its values. If a matching value exists it is removed, otherwise\n * it is added to the array.\n *\n * @param array The array to modify.\n * @param newValue The new value to toggle.\n * @param compare A compare function to determine equality of array values. Default is an equality test by object identity.\n */\nfunction arrayToggle(array, newValue, compare = (a, b) => a === b) {\n    const index = array.findIndex((oldValue) => compare(newValue, oldValue));\n    return !!~index ? [...array.slice(0, index), ...array.slice(index + 1)] : [...array, newValue];\n}\n\n/**\n * Update item in a collection\n *\n * @example\n *\n *\n * store.update(1, entity => ({\n *   comments: arrayUpdate(entity.comments, 1, { name: 'newComment' })\n * }))\n */\nfunction arrayUpdate(arr, predicateOrIds, obj, idKey = DEFAULT_ID_KEY) {\n    let condition;\n    if (isFunction(predicateOrIds)) {\n        condition = predicateOrIds;\n    }\n    else {\n        const ids = coerceArray(predicateOrIds);\n        condition = (item) => ids.includes(isObject(item) ? item[idKey] : item) === true;\n    }\n    const updateFn = (state) => state.map((entity, index) => {\n        if (condition(entity, index) === true) {\n            return isObject(entity)\n                ? Object.assign(Object.assign({}, entity), obj) : obj;\n        }\n        return entity;\n    });\n    return updateFn(arr);\n}\n\n/**\n * Upsert item in a collection\n *\n * @example\n *\n *\n * store.update(1, entity => ({\n *   comments: arrayUpsert(entity.comments, 1, { name: 'newComment' })\n * }))\n */\nfunction arrayUpsert(arr, id, obj, idKey = DEFAULT_ID_KEY) {\n    const entityIsObject = isObject(obj);\n    const entityExists = arr.some(entity => (entityIsObject ? entity[idKey] === id : entity === id));\n    if (entityExists) {\n        return arrayUpdate(arr, id, obj, idKey);\n    }\n    else {\n        return arrayAdd(arr, entityIsObject ? Object.assign(Object.assign({}, obj), { [idKey]: id }) : obj);\n    }\n}\n\n/**\n *\n * Helper function for checking if we have data in cache\n *\n * export class ProductsService {\n *   constructor(private productsStore: ProductsStore) {}\n\n *   get(): Observable<void> {\n *     const request = this.http.get().pipe(\n *       tap(this.productsStore.set(response))\n *     );\n *\n *     return cacheable(this.productsStore, request);\n *   }\n * }\n */\nfunction cacheable(store, request$, options = { emitNext: false }) {\n    if (store._cache().value) {\n        return options.emitNext ? of(undefined) : EMPTY;\n    }\n    return request$;\n}\n\nfunction combineQueries(observables) {\n    return combineLatest(observables).pipe(auditTime(0));\n}\n\nlet CONFIG = {\n    resettable: false,\n    ttl: null,\n    producerFn: undefined\n};\nfunction akitaConfig(config) {\n    CONFIG = Object.assign(Object.assign({}, CONFIG), config);\n}\n// @internal\nfunction getAkitaConfig() {\n    return CONFIG;\n}\nfunction getGlobalProducerFn() {\n    return CONFIG.producerFn;\n}\n\n// @internal\nfunction isDefined(val) {\n    return isNil(val) === false;\n}\n\n// @internal\nconst $$deleteStore = new Subject();\n// @internal\nconst $$addStore = new ReplaySubject(50, 5000);\n// @internal\nconst $$updateStore = new Subject();\n// @internal\nfunction dispatchDeleted(storeName) {\n    $$deleteStore.next(storeName);\n}\n// @internal\nfunction dispatchAdded(storeName) {\n    $$addStore.next(storeName);\n}\n// @internal\nfunction dispatchUpdate(storeName, action) {\n    $$updateStore.next({ storeName, action });\n}\n\nconst isBrowser = typeof window !== 'undefined';\nconst isNotBrowser = !isBrowser;\n// export const isNativeScript = typeof global !== 'undefined' && (<any>global).__runtimeVersion !== 'undefined'; TODO is this used?\nconst hasLocalStorage = () => {\n    try {\n        return typeof localStorage !== 'undefined';\n    }\n    catch (_a) {\n        return false;\n    }\n};\nconst hasSessionStorage = () => {\n    try {\n        return typeof sessionStorage !== 'undefined';\n    }\n    catch (_a) {\n        return false;\n    }\n};\n\n// @internal\nconst __stores__ = {};\n// @internal\nconst __queries__ = {};\nif (isBrowser) {\n    window.$$stores = __stores__;\n    window.$$queries = __queries__;\n}\n\n// @internal\nfunction capitalize(value) {\n    return value && value.charAt(0).toUpperCase() + value.slice(1);\n}\n\nlet subs = [];\nfunction akitaDevtools(ngZoneOrOptions, options = {}) {\n    if (isNotBrowser)\n        return;\n    if (!window.__REDUX_DEVTOOLS_EXTENSION__) {\n        return;\n    }\n    subs.length &&\n        subs.forEach((s) => {\n            if (s.unsubscribe) {\n                s.unsubscribe();\n            }\n            else {\n                s && s();\n            }\n        });\n    const isAngular = ngZoneOrOptions && ngZoneOrOptions['run'];\n    if (!isAngular) {\n        ngZoneOrOptions = ngZoneOrOptions || {};\n        ngZoneOrOptions.run = (cb) => cb();\n        options = ngZoneOrOptions;\n    }\n    const defaultOptions = { name: 'Akita', shallow: true, storesWhitelist: [] };\n    const merged = Object.assign({}, defaultOptions, options);\n    const storesWhitelist = merged.storesWhitelist;\n    const devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(merged);\n    let appState = {};\n    const isAllowed = (storeName) => {\n        if (!storesWhitelist.length) {\n            return true;\n        }\n        return storesWhitelist.indexOf(storeName) > -1;\n    };\n    subs.push($$addStore.subscribe((storeName) => {\n        if (isAllowed(storeName) === false)\n            return;\n        appState = Object.assign(Object.assign({}, appState), { [storeName]: __stores__[storeName]._value() });\n        devTools.send({ type: `[${capitalize(storeName)}] - @@INIT` }, appState);\n    }));\n    subs.push($$deleteStore.subscribe((storeName) => {\n        if (isAllowed(storeName) === false)\n            return;\n        delete appState[storeName];\n        devTools.send({ type: `[${storeName}] - Delete Store` }, appState);\n    }));\n    subs.push($$updateStore.subscribe(({ storeName, action }) => {\n        if (isAllowed(storeName) === false)\n            return;\n        const { type, entityIds, skip } = action, rest = __rest(action, [\"type\", \"entityIds\", \"skip\"]);\n        const payload = rest.payload;\n        if (skip) {\n            setSkipAction(false);\n            return;\n        }\n        const store = __stores__[storeName];\n        if (!store) {\n            return;\n        }\n        if (options.shallow === false && appState[storeName]) {\n            const isEqual = JSON.stringify(store._value()) === JSON.stringify(appState[storeName]);\n            if (isEqual)\n                return;\n        }\n        appState = Object.assign(Object.assign({}, appState), { [storeName]: store._value() });\n        const normalize = capitalize(storeName);\n        let msg = isDefined(entityIds) ? `[${normalize}] - ${type} (ids: ${entityIds})` : `[${normalize}] - ${type}`;\n        if (options.logTrace) {\n            console.group(msg);\n            console.trace();\n            console.groupEnd();\n        }\n        if (options.sortAlphabetically) {\n            const sortedAppState = Object.keys(appState)\n                .sort()\n                .reduce((acc, storeName) => {\n                acc[storeName] = appState[storeName];\n                return acc;\n            }, {});\n            devTools.send(Object.assign({ type: msg }, payload), sortedAppState);\n            return;\n        }\n        devTools.send(Object.assign({ type: msg }, payload), appState);\n    }));\n    subs.push(devTools.subscribe((message) => {\n        if (message.type === 'DISPATCH') {\n            const payloadType = message.payload.type;\n            if (payloadType === 'COMMIT') {\n                devTools.init(appState);\n                return;\n            }\n            if (message.state) {\n                const rootState = JSON.parse(message.state);\n                for (let i = 0, keys = Object.keys(rootState); i < keys.length; i++) {\n                    const storeName = keys[i];\n                    if (__stores__[storeName]) {\n                        ngZoneOrOptions.run(() => {\n                            __stores__[storeName]._setState(() => rootState[storeName], false);\n                        });\n                    }\n                }\n            }\n        }\n    }));\n}\n\nvar Order;\n(function (Order) {\n    Order[\"ASC\"] = \"asc\";\n    Order[\"DESC\"] = \"desc\";\n})(Order || (Order = {}));\n// @internal\nfunction compareValues(key, order = Order.ASC) {\n    return function (a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n            return 0;\n        }\n        const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\n        const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\n        let comparison = 0;\n        if (varA > varB) {\n            comparison = 1;\n        }\n        else if (varA < varB) {\n            comparison = -1;\n        }\n        return order == Order.DESC ? comparison * -1 : comparison;\n    };\n}\n\n// @internal\nfunction entitiesToArray(state, options) {\n    let arr = [];\n    const { ids, entities } = state;\n    const { filterBy, limitTo, sortBy, sortByOrder } = options;\n    for (let i = 0; i < ids.length; i++) {\n        const entity = entities[ids[i]];\n        if (!filterBy) {\n            arr.push(entity);\n            continue;\n        }\n        const toArray = coerceArray(filterBy);\n        const allPass = toArray.every(fn => fn(entity, i));\n        if (allPass) {\n            arr.push(entity);\n        }\n    }\n    if (sortBy) {\n        let _sortBy = isFunction(sortBy) ? sortBy : compareValues(sortBy, sortByOrder);\n        arr = arr.sort((a, b) => _sortBy(a, b, state));\n    }\n    const length = Math.min(limitTo || arr.length, arr.length);\n    return length === arr.length ? arr : arr.slice(0, length);\n}\n\n// @internal\nfunction entitiesToMap(state, options) {\n    const map = {};\n    const { filterBy, limitTo } = options;\n    const { ids, entities } = state;\n    if (!filterBy && !limitTo) {\n        return entities;\n    }\n    const hasLimit = isNil(limitTo) === false;\n    if (filterBy && hasLimit) {\n        let count = 0;\n        for (let i = 0, length = ids.length; i < length; i++) {\n            if (count === limitTo)\n                break;\n            const id = ids[i];\n            const entity = entities[id];\n            const allPass = coerceArray(filterBy).every(fn => fn(entity, i));\n            if (allPass) {\n                map[id] = entity;\n                count++;\n            }\n        }\n    }\n    else {\n        const finalLength = Math.min(limitTo || ids.length, ids.length);\n        for (let i = 0; i < finalLength; i++) {\n            const id = ids[i];\n            const entity = entities[id];\n            if (!filterBy) {\n                map[id] = entity;\n                continue;\n            }\n            const allPass = coerceArray(filterBy).every(fn => fn(entity, i));\n            if (allPass) {\n                map[id] = entity;\n            }\n        }\n    }\n    return map;\n}\n\nvar EntityActions;\n(function (EntityActions) {\n    EntityActions[\"Set\"] = \"Set\";\n    EntityActions[\"Add\"] = \"Add\";\n    EntityActions[\"Update\"] = \"Update\";\n    EntityActions[\"Remove\"] = \"Remove\";\n})(EntityActions || (EntityActions = {}));\n\nclass EntityService {\n}\n\nlet __DEV__ = true;\nfunction enableAkitaProdMode() {\n    __DEV__ = false;\n    if (isBrowser) {\n        delete window.$$stores;\n        delete window.$$queries;\n    }\n}\n// @internal\nfunction isDev() {\n    return __DEV__;\n}\n\n// @internal\nfunction getActiveEntities(idOrOptions, ids, currentActive) {\n    let result;\n    if (isArray(idOrOptions)) {\n        result = idOrOptions;\n    }\n    else {\n        if (isObject(idOrOptions)) {\n            if (isNil(currentActive))\n                return;\n            idOrOptions = Object.assign({ wrap: true }, idOrOptions);\n            const currentIdIndex = ids.indexOf(currentActive);\n            if (idOrOptions.prev) {\n                const isFirst = currentIdIndex === 0;\n                if (isFirst && !idOrOptions.wrap)\n                    return;\n                result = isFirst ? ids[ids.length - 1] : ids[currentIdIndex - 1];\n            }\n            else if (idOrOptions.next) {\n                const isLast = ids.length === currentIdIndex + 1;\n                if (isLast && !idOrOptions.wrap)\n                    return;\n                result = isLast ? ids[0] : ids[currentIdIndex + 1];\n            }\n        }\n        else {\n            if (idOrOptions === currentActive)\n                return;\n            result = idOrOptions;\n        }\n    }\n    return result;\n}\n\n// @internal\nconst getInitialEntitiesState = () => ({\n    entities: {},\n    ids: [],\n    loading: true,\n    error: null\n});\n\n// @internal\nfunction isUndefined(value) {\n    return value === undefined;\n}\n\n// @internal\nfunction removeEntities({ state, ids }) {\n    if (isNil(ids))\n        return removeAllEntities(state);\n    const entities = state.entities;\n    let newEntities = {};\n    for (const id of state.ids) {\n        if (ids.includes(id) === false) {\n            newEntities[id] = entities[id];\n        }\n    }\n    const newState = Object.assign(Object.assign({}, state), { entities: newEntities, ids: state.ids.filter(current => ids.includes(current) === false) });\n    if (hasActiveState(state)) {\n        newState.active = resolveActiveEntity(newState);\n    }\n    return newState;\n}\n// @internal\nfunction removeAllEntities(state) {\n    return Object.assign(Object.assign({}, state), { entities: {}, ids: [], active: isMultiActiveState(state.active) ? [] : null });\n}\n\n// @internal\nfunction toEntitiesObject(entities, idKey, preAddEntity) {\n    const acc = {\n        entities: {},\n        ids: []\n    };\n    for (const entity of entities) {\n        // evaluate the middleware first to support dynamic ids\n        const current = preAddEntity(entity);\n        acc.entities[current[idKey]] = current;\n        acc.ids.push(current[idKey]);\n    }\n    return acc;\n}\n\n// @internal\nfunction isEntityState(state) {\n    return state.entities && state.ids;\n}\n// @internal\nfunction applyMiddleware(entities, preAddEntity) {\n    let mapped = {};\n    for (const id of Object.keys(entities)) {\n        mapped[id] = preAddEntity(entities[id]);\n    }\n    return mapped;\n}\n// @internal\nfunction setEntities({ state, entities, idKey, preAddEntity, isNativePreAdd }) {\n    let newEntities;\n    let newIds;\n    if (isArray(entities)) {\n        const resolve = toEntitiesObject(entities, idKey, preAddEntity);\n        newEntities = resolve.entities;\n        newIds = resolve.ids;\n    }\n    else if (isEntityState(entities)) {\n        newEntities = isNativePreAdd ? entities.entities : applyMiddleware(entities.entities, preAddEntity);\n        newIds = entities.ids;\n    }\n    else {\n        // it's an object\n        newEntities = isNativePreAdd ? entities : applyMiddleware(entities, preAddEntity);\n        newIds = Object.keys(newEntities).map(id => (isNaN(id) ? id : Number(id)));\n    }\n    const newState = Object.assign(Object.assign({}, state), { entities: newEntities, ids: newIds, loading: false });\n    if (hasActiveState(state)) {\n        newState.active = resolveActiveEntity(newState);\n    }\n    return newState;\n}\n\n// @internal\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    const oIsFunction = typeof o === 'function';\n    const hasOwnProp = Object.prototype.hasOwnProperty;\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (hasOwnProp.call(o, prop) &&\n            (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n            o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\n\n// @internal\nclass AkitaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n// @internal\nfunction assertStoreHasName(name, className) {\n    if (!name) {\n        console.error(`@StoreConfig({ name }) is missing in ${className}`);\n    }\n}\n\n// @internal\nfunction toBoolean(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n// @internal\nfunction isPlainObject(value) {\n    return toBoolean(value) && value.constructor.name === 'Object';\n}\n\nconst configKey = 'akitaConfig';\nfunction StoreConfig(metadata) {\n    return function (constructor) {\n        constructor[configKey] = { idKey: 'id' };\n        for (let i = 0, keys = Object.keys(metadata); i < keys.length; i++) {\n            const key = keys[i];\n            /* name is preserved read only key */\n            if (key === 'name') {\n                constructor[configKey]['storeName'] = metadata[key];\n            }\n            else {\n                constructor[configKey][key] = metadata[key];\n            }\n        }\n    };\n}\n\n// @internal\nconst transactionFinished = new Subject();\n// @internal\nconst transactionInProcess = new BehaviorSubject(false);\n// @internal\nconst transactionManager = {\n    activeTransactions: 0,\n    batchTransaction: null\n};\n// @internal\nfunction startBatch() {\n    if (!isTransactionInProcess()) {\n        transactionManager.batchTransaction = new Subject();\n    }\n    transactionManager.activeTransactions++;\n    transactionInProcess.next(true);\n}\n// @internal\nfunction endBatch() {\n    if (--transactionManager.activeTransactions === 0) {\n        transactionManager.batchTransaction.next(true);\n        transactionManager.batchTransaction.complete();\n        transactionInProcess.next(false);\n        transactionFinished.next(true);\n    }\n}\n// @internal\nfunction isTransactionInProcess() {\n    return transactionManager.activeTransactions > 0;\n}\n// @internal\nfunction commit() {\n    return transactionManager.batchTransaction ? transactionManager.batchTransaction.asObservable() : of(true);\n}\n/**\n *  A logical transaction.\n *  Use this transaction to optimize the dispatch of all the stores.\n *  The following code will update the store, BUT  emits only once\n *\n *  @example\n *  applyTransaction(() => {\n *    this.todosStore.add(new Todo(1, title));\n *    this.todosStore.add(new Todo(2, title));\n *  });\n *\n */\nfunction applyTransaction(action, thisArg = undefined) {\n    startBatch();\n    try {\n        return action.apply(thisArg);\n    }\n    finally {\n        logAction('@Transaction');\n        endBatch();\n    }\n}\n/**\n *  A logical transaction.\n *  Use this transaction to optimize the dispatch of all the stores.\n *\n *  The following code will update the store, BUT  emits only once.\n *\n *  @example\n *  @transaction\n *  addTodos() {\n *    this.todosStore.add(new Todo(1, title));\n *    this.todosStore.add(new Todo(2, title));\n *  }\n *\n *\n */\nfunction transaction() {\n    return function (target, propertyKey, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            return applyTransaction(() => {\n                return originalMethod.apply(this, args);\n            }, this);\n        };\n        return descriptor;\n    };\n}\n/**\n *\n * RxJS custom operator that wraps the callback inside transaction\n *\n * @example\n *\n * return http.get().pipe(\n *    withTransaction(response > {\n *      store.setActive(1);\n *      store.update();\n *      store.updateEntity(1, {});\n *    })\n * )\n *\n */\nfunction withTransaction(next) {\n    return function (source) {\n        return source.pipe(tap(value => applyTransaction(() => next(value))));\n    };\n}\n\n/**\n *\n * Store for managing any type of data\n *\n * @example\n *\n * export interface SessionState {\n *   token: string;\n *   userDetails: UserDetails\n * }\n *\n * export function createInitialState(): SessionState {\n *  return {\n *    token: '',\n *    userDetails: null\n *  };\n * }\n *\n * @StoreConfig({ name: 'session' })\n * export class SessionStore extends Store<SessionState> {\n *   constructor() {\n *    super(createInitialState());\n *   }\n * }\n */\nclass Store {\n    constructor(initialState, options = {}) {\n        this.options = options;\n        this.inTransaction = false;\n        this.cache = {\n            active: new BehaviorSubject(false),\n            ttl: null,\n        };\n        this.onInit(initialState);\n    }\n    /**\n     *  Set the loading state\n     *\n     *  @example\n     *\n     *  store.setLoading(true)\n     *\n     */\n    setLoading(loading = false) {\n        if (loading !== this._value().loading) {\n            isDev() && setAction('Set Loading');\n            this._setState((state) => (Object.assign(Object.assign({}, state), { loading })));\n        }\n    }\n    /**\n     *\n     * Set whether the data is cached\n     *\n     * @example\n     *\n     * store.setHasCache(true)\n     * store.setHasCache(false)\n     * store.setHasCache(true, { restartTTL: true })\n     *\n     */\n    setHasCache(hasCache, options = { restartTTL: false }) {\n        if (hasCache !== this.cache.active.value) {\n            this.cache.active.next(hasCache);\n        }\n        if (options.restartTTL) {\n            const ttlConfig = this.getCacheTTL();\n            if (ttlConfig) {\n                if (this.cache.ttl !== null) {\n                    clearTimeout(this.cache.ttl);\n                }\n                this.cache.ttl = setTimeout(() => this.setHasCache(false), ttlConfig);\n            }\n        }\n    }\n    /**\n     *\n     * Sometimes we need to access the store value from a store\n     *\n     * @example middleware\n     *\n     */\n    getValue() {\n        return this.storeValue;\n    }\n    /**\n     *  Set the error state\n     *\n     *  @example\n     *\n     *  store.setError({text: 'unable to load data' })\n     *\n     */\n    setError(error) {\n        if (error !== this._value().error) {\n            isDev() && setAction('Set Error');\n            this._setState((state) => (Object.assign(Object.assign({}, state), { error })));\n        }\n    }\n    // @internal\n    _select(project) {\n        return this.store.asObservable().pipe(map((snapshot) => project(snapshot.state)), distinctUntilChanged());\n    }\n    // @internal\n    _value() {\n        return this.storeValue;\n    }\n    // @internal\n    _cache() {\n        return this.cache.active;\n    }\n    // @internal\n    get config() {\n        return this.constructor[configKey] || {};\n    }\n    // @internal\n    get storeName() {\n        return this.config.storeName || this.options.storeName || this.options.name;\n    }\n    // @internal\n    get deepFreeze() {\n        return this.config.deepFreezeFn || this.options.deepFreezeFn || deepFreeze;\n    }\n    // @internal\n    get cacheConfig() {\n        return this.config.cache || this.options.cache;\n    }\n    get _producerFn() {\n        return this.config.producerFn || this.options.producerFn || getGlobalProducerFn();\n    }\n    // @internal\n    get resettable() {\n        return isDefined(this.config.resettable) ? this.config.resettable : this.options.resettable;\n    }\n    // @internal\n    _setState(newState, _dispatchAction = true) {\n        if (isFunction(newState)) {\n            const _newState = newState(this._value());\n            this.storeValue = __DEV__ ? this.deepFreeze(_newState) : _newState;\n        }\n        else {\n            this.storeValue = newState;\n        }\n        if (!this.store) {\n            this.store = new BehaviorSubject({ state: this.storeValue });\n            if (isDev()) {\n                this.store.subscribe(({ action }) => {\n                    if (action) {\n                        dispatchUpdate(this.storeName, action);\n                    }\n                });\n            }\n            return;\n        }\n        if (isTransactionInProcess()) {\n            this.handleTransaction();\n            return;\n        }\n        this.dispatch(this.storeValue, _dispatchAction);\n    }\n    /**\n     *\n     * Reset the current store back to the initial value\n     *\n     * @example\n     *\n     * store.reset()\n     *\n     */\n    reset() {\n        if (this.isResettable()) {\n            isDev() && setAction('Reset');\n            this._setState(() => Object.assign({}, this._initialState));\n            this.setHasCache(false);\n        }\n        else {\n            isDev() && console.warn(`You need to enable the reset functionality`);\n        }\n    }\n    update(stateOrCallback) {\n        isDev() && setAction('Update');\n        let newState;\n        const currentState = this._value();\n        if (isFunction(stateOrCallback)) {\n            newState = isFunction(this._producerFn) ? this._producerFn(currentState, stateOrCallback) : stateOrCallback(currentState);\n        }\n        else {\n            newState = stateOrCallback;\n        }\n        const withHook = this.akitaPreUpdate(currentState, Object.assign(Object.assign({}, currentState), newState));\n        const resolved = isPlainObject(currentState) ? withHook : new currentState.constructor(withHook);\n        this._setState(resolved);\n    }\n    updateStoreConfig(newOptions) {\n        this.options = Object.assign(Object.assign({}, this.options), newOptions);\n    }\n    // @internal\n    akitaPreUpdate(_, nextState) {\n        return nextState;\n    }\n    /**\n     *\n     * @deprecated\n     *\n     * This method will be removed in v7\n     *\n     * Akita isn't coupled to Angular and should not use Angular\n     * specific code\n     *\n     */\n    ngOnDestroy() {\n        this.destroy();\n    }\n    /**\n     *\n     * Destroy the store\n     *\n     * @example\n     *\n     * store.destroy()\n     *\n     */\n    destroy() {\n        const hmrEnabled = isBrowser ? window.hmrEnabled : false;\n        if (!hmrEnabled && this === __stores__[this.storeName]) {\n            delete __stores__[this.storeName];\n            dispatchDeleted(this.storeName);\n            this.setHasCache(false);\n            this.cache.active.complete();\n            this.store.complete();\n        }\n    }\n    onInit(initialState) {\n        __stores__[this.storeName] = this;\n        this._setState(() => initialState);\n        dispatchAdded(this.storeName);\n        if (this.isResettable()) {\n            this._initialState = initialState;\n        }\n        isDev() && assertStoreHasName(this.storeName, this.constructor.name);\n    }\n    dispatch(state, _dispatchAction = true) {\n        let action = undefined;\n        if (_dispatchAction) {\n            action = currentAction;\n            resetCustomAction();\n        }\n        this.store.next({ state, action });\n    }\n    watchTransaction() {\n        commit().subscribe(() => {\n            this.inTransaction = false;\n            this.dispatch(this._value());\n        });\n    }\n    isResettable() {\n        if (this.resettable === false) {\n            return false;\n        }\n        return this.resettable || getAkitaConfig().resettable;\n    }\n    handleTransaction() {\n        if (!this.inTransaction) {\n            this.watchTransaction();\n            this.inTransaction = true;\n        }\n    }\n    getCacheTTL() {\n        return (this.cacheConfig && this.cacheConfig.ttl) || getAkitaConfig().ttl;\n    }\n}\nStore.ɵfac = function Store_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nStore.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Store });\n\n// @internal\nfunction updateEntities({ state, ids, idKey, newStateOrFn, preUpdateEntity, producerFn, onEntityIdChanges }) {\n    const updatedEntities = {};\n    let isUpdatingIdKey = false;\n    let idToUpdate;\n    for (const id of ids) {\n        // if the entity doesn't exist don't do anything\n        if (hasEntity(state.entities, id) === false) {\n            continue;\n        }\n        const oldEntity = state.entities[id];\n        let newState;\n        if (isFunction(newStateOrFn)) {\n            newState = isFunction(producerFn) ? producerFn(oldEntity, newStateOrFn) : newStateOrFn(oldEntity);\n        }\n        else {\n            newState = newStateOrFn;\n        }\n        const isIdChanged = newState.hasOwnProperty(idKey) && newState[idKey] !== oldEntity[idKey];\n        let newEntity;\n        idToUpdate = id;\n        if (isIdChanged) {\n            isUpdatingIdKey = true;\n            idToUpdate = newState[idKey];\n        }\n        const merged = Object.assign(Object.assign({}, oldEntity), newState);\n        if (isPlainObject(oldEntity)) {\n            newEntity = merged;\n        }\n        else {\n            /**\n             * In case that new state is class of it's own, there's\n             * a possibility that it will be different than the old\n             * class.\n             * For example, Old state is an instance of animal class\n             * and new state is instance of person class.\n             * To avoid run over new person class with the old animal\n             * class we check if the new state is a class of it's own.\n             * If so, use it. Otherwise, use the old state class\n             */\n            if (isPlainObject(newState)) {\n                newEntity = new oldEntity.constructor(merged);\n            }\n            else {\n                newEntity = new newState.constructor(merged);\n            }\n        }\n        updatedEntities[idToUpdate] = preUpdateEntity(oldEntity, newEntity);\n    }\n    let updatedIds = state.ids;\n    let stateEntities = state.entities;\n    if (isUpdatingIdKey) {\n        const [id] = ids;\n        const _a = state.entities, _b = id, deletedEntity = _a[_b], rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n        stateEntities = rest;\n        updatedIds = state.ids.map((current) => (current === id ? idToUpdate : current));\n        onEntityIdChanges(id, idToUpdate);\n    }\n    return Object.assign(Object.assign({}, state), { entities: Object.assign(Object.assign({}, stateEntities), updatedEntities), ids: updatedIds });\n}\n\nvar _a, _b;\n/**\n *\n * Store for managing a collection of entities\n *\n * @example\n *\n * export interface WidgetsState extends EntityState<Widget> { }\n *\n * @StoreConfig({ name: 'widgets' })\n *  export class WidgetsStore extends EntityStore<WidgetsState> {\n *   constructor() {\n *     super();\n *   }\n * }\n *\n *\n */\nclass EntityStore extends Store {\n    constructor(initialState = {}, options = {}) {\n        super(Object.assign(Object.assign({}, getInitialEntitiesState()), initialState), options);\n        this.options = options;\n        this.entityActions = new Subject();\n        this.entityIdChanges = new Subject();\n    }\n    // @internal\n    get selectEntityAction$() {\n        return this.entityActions.asObservable();\n    }\n    // @internal\n    get selectEntityIdChanges$() {\n        return this.entityIdChanges.asObservable();\n    }\n    // @internal\n    get idKey() {\n        return this.config.idKey || this.options.idKey || DEFAULT_ID_KEY;\n    }\n    /**\n     *\n     * Replace current collection with provided collection\n     *\n     * @example\n     *\n     * this.store.set([Entity, Entity])\n     * this.store.set({ids: [], entities: {}})\n     * this.store.set({ 1: {}, 2: {}})\n     *\n     */\n    set(entities, options = {}) {\n        if (isNil(entities))\n            return;\n        isDev() && setAction('Set Entity');\n        const isNativePreAdd = this.akitaPreAddEntity === EntityStore.prototype.akitaPreAddEntity;\n        this.setHasCache(true, { restartTTL: true });\n        this._setState((state) => {\n            const newState = setEntities({\n                state,\n                entities,\n                idKey: this.idKey,\n                preAddEntity: this.akitaPreAddEntity,\n                isNativePreAdd,\n            });\n            if (isUndefined(options.activeId) === false) {\n                newState.active = options.activeId;\n            }\n            return newState;\n        });\n        if (this.hasInitialUIState()) {\n            this.handleUICreation();\n        }\n        this.entityActions.next({ type: EntityActions.Set, ids: this.ids });\n    }\n    /**\n     * Add entities\n     *\n     * @example\n     *\n     * this.store.add([Entity, Entity])\n     * this.store.add(Entity)\n     * this.store.add(Entity, { prepend: true })\n     *\n     * this.store.add(Entity, { loading: false })\n     */\n    add(entities, options = { loading: false }) {\n        const collection = coerceArray(entities);\n        if (isEmpty(collection))\n            return;\n        const data = addEntities({\n            state: this._value(),\n            preAddEntity: this.akitaPreAddEntity,\n            entities: collection,\n            idKey: this.idKey,\n            options,\n        });\n        if (data) {\n            isDev() && setAction('Add Entity');\n            data.newState.loading = options.loading;\n            this._setState(() => data.newState);\n            if (this.hasInitialUIState()) {\n                this.handleUICreation(true);\n            }\n            this.entityActions.next({ type: EntityActions.Add, ids: data.newIds });\n        }\n    }\n    update(idsOrFnOrState, newStateOrFn) {\n        if (isUndefined(newStateOrFn)) {\n            super.update(idsOrFnOrState);\n            return;\n        }\n        let ids = [];\n        if (isFunction(idsOrFnOrState)) {\n            // We need to filter according the predicate function\n            ids = this.ids.filter((id) => idsOrFnOrState(this.entities[id]));\n        }\n        else {\n            // If it's nil we want all of them\n            ids = isNil(idsOrFnOrState) ? this.ids : coerceArray(idsOrFnOrState);\n        }\n        if (isEmpty(ids))\n            return;\n        isDev() && setAction('Update Entity', ids);\n        let entityIdChanged;\n        this._setState((state) => updateEntities({\n            idKey: this.idKey,\n            ids,\n            preUpdateEntity: this.akitaPreUpdateEntity,\n            state,\n            newStateOrFn,\n            producerFn: this._producerFn,\n            onEntityIdChanges: (oldId, newId) => {\n                entityIdChanged = { oldId, newId };\n                this.entityIdChanges.next(Object.assign(Object.assign({}, entityIdChanged), { pending: true }));\n            },\n        }));\n        if (entityIdChanged) {\n            this.entityIdChanges.next(Object.assign(Object.assign({}, entityIdChanged), { pending: false }));\n        }\n        this.entityActions.next({ type: EntityActions.Update, ids });\n    }\n    upsert(ids, newState, onCreate, options = {}) {\n        const toArray = coerceArray(ids);\n        const predicate = (isUpdate) => (id) => hasEntity(this.entities, id) === isUpdate;\n        const baseClass = isFunction(onCreate) ? options.baseClass : onCreate ? onCreate.baseClass : undefined;\n        const isClassBased = isFunction(baseClass);\n        const updateIds = toArray.filter(predicate(true));\n        const newEntities = toArray.filter(predicate(false)).map((id) => {\n            const newStateObj = typeof newState === 'function' ? newState({}) : newState;\n            const entity = isFunction(onCreate) ? onCreate(id, newStateObj) : newStateObj;\n            const withId = Object.assign(Object.assign({}, entity), { [this.idKey]: id });\n            if (isClassBased) {\n                return new baseClass(withId);\n            }\n            return withId;\n        });\n        // it can be any of the three types\n        this.update(updateIds, newState);\n        this.add(newEntities);\n        isDev() && logAction('Upsert Entity');\n    }\n    /**\n     *\n     * Upsert entity collection (idKey must be present)\n     *\n     * @example\n     *\n     * store.upsertMany([ { id: 1 }, { id: 2 }]);\n     *\n     * store.upsertMany([ { id: 1 }, { id: 2 }], { loading: true  });\n     * store.upsertMany([ { id: 1 }, { id: 2 }], { baseClass: Todo  });\n     *\n     */\n    upsertMany(entities, options = {}) {\n        const addedIds = [];\n        const updatedIds = [];\n        const updatedEntities = {};\n        // Update the state directly to optimize performance\n        for (const entity of entities) {\n            const withPreCheckHook = this.akitaPreCheckEntity(entity);\n            const id = withPreCheckHook[this.idKey];\n            if (hasEntity(this.entities, id)) {\n                const prev = this._value().entities[id];\n                const merged = Object.assign(Object.assign({}, this._value().entities[id]), withPreCheckHook);\n                const next = options.baseClass ? new options.baseClass(merged) : merged;\n                const withHook = this.akitaPreUpdateEntity(prev, next);\n                const nextId = withHook[this.idKey];\n                updatedEntities[nextId] = withHook;\n                updatedIds.push(nextId);\n            }\n            else {\n                const newEntity = options.baseClass ? new options.baseClass(withPreCheckHook) : withPreCheckHook;\n                const withHook = this.akitaPreAddEntity(newEntity);\n                const nextId = withHook[this.idKey];\n                addedIds.push(nextId);\n                updatedEntities[nextId] = withHook;\n            }\n        }\n        isDev() && logAction('Upsert Many');\n        this._setState((state) => (Object.assign(Object.assign({}, state), { ids: addedIds.length ? [...state.ids, ...addedIds] : state.ids, entities: Object.assign(Object.assign({}, state.entities), updatedEntities), loading: !!options.loading })));\n        updatedIds.length && this.entityActions.next({ type: EntityActions.Update, ids: updatedIds });\n        addedIds.length && this.entityActions.next({ type: EntityActions.Add, ids: addedIds });\n        if (addedIds.length && this.hasUIStore()) {\n            this.handleUICreation(true);\n        }\n    }\n    /**\n     *\n     * Replace one or more entities (except the id property)\n     *\n     *\n     * @example\n     *\n     * this.store.replace(5, newEntity)\n     * this.store.replace([1,2,3], newEntity)\n     */\n    replace(ids, newState) {\n        const toArray = coerceArray(ids);\n        if (isEmpty(toArray))\n            return;\n        const replaced = {};\n        for (const id of toArray) {\n            replaced[id] = Object.assign(Object.assign({}, newState), { [this.idKey]: id });\n        }\n        isDev() && setAction('Replace Entity', ids);\n        this._setState((state) => (Object.assign(Object.assign({}, state), { entities: Object.assign(Object.assign({}, state.entities), replaced) })));\n    }\n    /**\n     *\n     * Move entity inside the collection\n     *\n     *\n     * @example\n     *\n     * this.store.move(fromIndex, toIndex)\n     */\n    move(from, to) {\n        const ids = this.ids.slice();\n        ids.splice(to < 0 ? ids.length + to : to, 0, ids.splice(from, 1)[0]);\n        isDev() && setAction('Move Entity');\n        this._setState((state) => (Object.assign(Object.assign({}, state), { \n            // Change the entities reference so that selectAll emit\n            entities: Object.assign({}, state.entities), ids })));\n    }\n    remove(idsOrFn) {\n        if (isEmpty(this.ids))\n            return;\n        const idPassed = isDefined(idsOrFn);\n        // null means remove all\n        let ids = [];\n        if (isFunction(idsOrFn)) {\n            ids = this.ids.filter((entityId) => idsOrFn(this.entities[entityId]));\n        }\n        else {\n            ids = idPassed ? coerceArray(idsOrFn) : this.ids;\n        }\n        if (isEmpty(ids))\n            return;\n        isDev() && setAction('Remove Entity', ids);\n        this._setState((state) => removeEntities({ state, ids }));\n        if (!idPassed) {\n            this.setHasCache(false);\n        }\n        this.handleUIRemove(ids);\n        this.entityActions.next({ type: EntityActions.Remove, ids });\n    }\n    /**\n     *\n     * Update the active entity\n     *\n     * @example\n     *\n     * this.store.updateActive({ completed: true })\n     * this.store.updateActive(active => {\n     *   return {\n     *     config: {\n     *      ..active.config,\n     *      date\n     *     }\n     *   }\n     * })\n     */\n    updateActive(newStateOrCallback) {\n        const ids = coerceArray(this.active);\n        isDev() && setAction('Update Active', ids);\n        this.update(ids, newStateOrCallback);\n    }\n    setActive(idOrOptions) {\n        const active = getActiveEntities(idOrOptions, this.ids, this.active);\n        if (active === undefined) {\n            return;\n        }\n        isDev() && setAction('Set Active', active);\n        this._setActive(active);\n    }\n    /**\n     * Add active entities\n     *\n     * @example\n     *\n     * store.addActive(2);\n     * store.addActive([3, 4, 5]);\n     */\n    addActive(ids) {\n        const toArray = coerceArray(ids);\n        if (isEmpty(toArray))\n            return;\n        const everyExist = toArray.every((id) => this.active.indexOf(id) > -1);\n        if (everyExist)\n            return;\n        isDev() && setAction('Add Active', ids);\n        this._setState((state) => {\n            /** Protect against case that one of the items in the array exist */\n            const uniques = Array.from(new Set([...state.active, ...toArray]));\n            return Object.assign(Object.assign({}, state), { active: uniques });\n        });\n    }\n    /**\n     * Remove active entities\n     *\n     * @example\n     *\n     * store.removeActive(2)\n     * store.removeActive([3, 4, 5])\n     */\n    removeActive(ids) {\n        const toArray = coerceArray(ids);\n        if (isEmpty(toArray))\n            return;\n        const someExist = toArray.some((id) => this.active.indexOf(id) > -1);\n        if (!someExist)\n            return;\n        isDev() && setAction('Remove Active', ids);\n        this._setState((state) => {\n            return Object.assign(Object.assign({}, state), { active: Array.isArray(state.active) ? state.active.filter((currentId) => toArray.indexOf(currentId) === -1) : null });\n        });\n    }\n    /**\n     * Toggle active entities\n     *\n     * @example\n     *\n     * store.toggle(2)\n     * store.toggle([3, 4, 5])\n     */\n    toggleActive(ids) {\n        const toArray = coerceArray(ids);\n        const filterExists = (remove) => (id) => this.active.includes(id) === remove;\n        const remove = toArray.filter(filterExists(true));\n        const add = toArray.filter(filterExists(false));\n        this.removeActive(remove);\n        this.addActive(add);\n        isDev() && logAction('Toggle Active');\n    }\n    /**\n     *\n     * Create sub UI store for managing Entity's UI state\n     *\n     * @example\n     *\n     * export type ProductUI = {\n     *   isLoading: boolean;\n     *   isOpen: boolean\n     * }\n     *\n     * interface ProductsUIState extends EntityState<ProductUI> {}\n     *\n     * export class ProductsStore EntityStore<ProductsState, Product> {\n     *   ui: EntityUIStore<ProductsUIState, ProductUI>;\n     *\n     *   constructor() {\n     *     super();\n     *     this.createUIStore();\n     *   }\n     *\n     * }\n     */\n    createUIStore(initialState = {}, storeConfig = {}) {\n        const defaults = { name: `UI/${this.storeName}`, idKey: this.idKey };\n        this.ui = new EntityUIStore(initialState, Object.assign(Object.assign({}, defaults), storeConfig));\n        return this.ui;\n    }\n    // @internal\n    destroy() {\n        super.destroy();\n        if (this.ui instanceof EntityStore) {\n            this.ui.destroy();\n        }\n        this.entityActions.complete();\n    }\n    // @internal\n    akitaPreUpdateEntity(_, nextEntity) {\n        return nextEntity;\n    }\n    // @internal\n    akitaPreAddEntity(newEntity) {\n        return newEntity;\n    }\n    // @internal\n    akitaPreCheckEntity(newEntity) {\n        return newEntity;\n    }\n    get ids() {\n        return this._value().ids;\n    }\n    get entities() {\n        return this._value().entities;\n    }\n    get active() {\n        return this._value().active;\n    }\n    _setActive(ids) {\n        this._setState((state) => {\n            return Object.assign(Object.assign({}, state), { active: ids });\n        });\n    }\n    handleUICreation(add = false) {\n        const ids = this.ids;\n        const isFunc = isFunction(this.ui._akitaCreateEntityFn);\n        let uiEntities;\n        const createFn = (id) => {\n            const current = this.entities[id];\n            const ui = isFunc ? this.ui._akitaCreateEntityFn(current) : this.ui._akitaCreateEntityFn;\n            return Object.assign({ [this.idKey]: current[this.idKey] }, ui);\n        };\n        if (add) {\n            uiEntities = this.ids.filter((id) => isUndefined(this.ui.entities[id])).map(createFn);\n        }\n        else {\n            uiEntities = ids.map(createFn);\n        }\n        add ? this.ui.add(uiEntities) : this.ui.set(uiEntities);\n    }\n    hasInitialUIState() {\n        return this.hasUIStore() && isUndefined(this.ui._akitaCreateEntityFn) === false;\n    }\n    handleUIRemove(ids) {\n        if (this.hasUIStore()) {\n            this.ui.remove(ids);\n        }\n    }\n    hasUIStore() {\n        return this.ui instanceof EntityUIStore;\n    }\n}\n__decorate([\n    transaction(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object, Object, Object, Object]),\n    __metadata(\"design:returntype\", void 0)\n], EntityStore.prototype, \"upsert\", null);\n__decorate([\n    transaction(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [typeof (_b = typeof T !== \"undefined\" && T) === \"function\" ? _b : Object]),\n    __metadata(\"design:returntype\", void 0)\n], EntityStore.prototype, \"toggleActive\", null);\n// @internal\nclass EntityUIStore extends EntityStore {\n    constructor(initialState = {}, storeConfig = {}) {\n        super(initialState, storeConfig);\n    }\n    /**\n     *\n     * Set the initial UI entity state. This function will determine the entity's\n     * initial state when we call `set()` or `add()`.\n     *\n     * @example\n     *\n     * constructor() {\n     *   super();\n     *   this.createUIStore().setInitialEntityState(entity => ({ isLoading: false, isOpen: true }));\n     *   this.createUIStore().setInitialEntityState({ isLoading: false, isOpen: true });\n     * }\n     *\n     */\n    setInitialEntityState(createFn) {\n        this._akitaCreateEntityFn = createFn;\n    }\n}\n\n/**\n * @example\n *\n * query.selectEntity(2).pipe(filterNil)\n * @deprecated Use the operator function filterNilValue()\n */\nconst filterNil = (source) => source.pipe(filter((value) => value !== null && typeof value !== 'undefined'));\n/**\n * @example\n *\n * query.selectEntity(2).pipe(filterNilValue())\n */\nfunction filterNilValue() {\n    return filter((value) => value !== null && value !== undefined);\n}\n\nconst queryConfigKey = 'akitaQueryConfig';\nfunction QueryConfig(metadata) {\n    return function (constructor) {\n        constructor[queryConfigKey] = {};\n        for (let i = 0, keys = Object.keys(metadata); i < keys.length; i++) {\n            const key = keys[i];\n            constructor[queryConfigKey][key] = metadata[key];\n        }\n    };\n}\n\n// @internal\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\nfunction compareKeys(keysOrFuncs) {\n    return function (prevState, currState) {\n        const isFns = isFunction(keysOrFuncs[0]);\n        // Return when they are NOT changed\n        return keysOrFuncs.some(keyOrFunc => {\n            if (isFns) {\n                return keyOrFunc(prevState) !== keyOrFunc(currState);\n            }\n            return prevState[keyOrFunc] !== currState[keyOrFunc];\n        }) === false;\n    };\n}\n\nclass Query {\n    constructor(store) {\n        this.store = store;\n        this.__store__ = store;\n        if (isDev()) {\n            // @internal\n            __queries__[store.storeName] = this;\n        }\n    }\n    select(project) {\n        let mapFn;\n        if (isFunction(project)) {\n            mapFn = project;\n        }\n        else if (isString(project)) {\n            mapFn = state => state[project];\n        }\n        else if (Array.isArray(project)) {\n            return this.store\n                ._select(state => state)\n                .pipe(distinctUntilChanged(compareKeys(project)), map(state => {\n                if (isFunction(project[0])) {\n                    return project.map(func => func(state));\n                }\n                return project.reduce((acc, k) => {\n                    acc[k] = state[k];\n                    return acc;\n                }, {});\n            }));\n        }\n        else {\n            mapFn = state => state;\n        }\n        return this.store._select(mapFn);\n    }\n    /**\n     * Select the loading state\n     *\n     * @example\n     *\n     * this.query.selectLoading().subscribe(isLoading => {})\n     */\n    selectLoading() {\n        return this.select(state => state.loading);\n    }\n    /**\n     * Select the error state\n     *\n     * @example\n     *\n     * this.query.selectError().subscribe(error => {})\n     */\n    selectError() {\n        return this.select(state => state.error);\n    }\n    /**\n     * Get the store's value\n     *\n     * @example\n     *\n     * this.query.getValue()\n     *\n     */\n    getValue() {\n        return this.store._value();\n    }\n    /**\n     * Select the cache state\n     *\n     * @example\n     *\n     * this.query.selectHasCache().pipe(\n     *   switchMap(hasCache => {\n     *     return hasCache ? of() : http().pipe(res => store.set(res))\n     *   })\n     * )\n     */\n    selectHasCache() {\n        return this.store._cache().asObservable();\n    }\n    /**\n     * Whether we've cached data\n     *\n     * @example\n     *\n     * this.query.getHasCache()\n     *\n     */\n    getHasCache() {\n        return this.store._cache().value;\n    }\n    // @internal\n    get config() {\n        return this.constructor[queryConfigKey];\n    }\n}\n\n// @internal\nfunction findEntityByPredicate(predicate, entities) {\n    for (const entityId of Object.keys(entities)) {\n        if (predicate(entities[entityId]) === true) {\n            return entityId;\n        }\n    }\n    return undefined;\n}\n// @internal\nfunction getEntity(id, project) {\n    return function (entities) {\n        const entity = entities[id];\n        if (isUndefined(entity)) {\n            return undefined;\n        }\n        if (!project) {\n            return entity;\n        }\n        if (isString(project)) {\n            return entity[project];\n        }\n        return project(entity);\n    };\n}\n\n// @internal\nfunction mapSkipUndefined(arr, callbackFn) {\n    return arr.reduce((result, value, index, array) => {\n        const val = callbackFn(value, index, array);\n        if (val !== undefined) {\n            result.push(val);\n        }\n        return result;\n    }, []);\n}\n\n// @internal\nfunction sortByOptions(options, config) {\n    options.sortBy = options.sortBy || (config && config.sortBy);\n    options.sortByOrder = options.sortByOrder || (config && config.sortByOrder);\n}\n\n/**\n *\n *  The Entity Query is similar to the general Query, with additional functionality tailored for EntityStores.\n *\n *  class WidgetsQuery extends QueryEntity<WidgetsState> {\n *     constructor(protected store: WidgetsStore) {\n *       super(store);\n *     }\n *  }\n *\n *\n *\n */\nclass QueryEntity extends Query {\n    constructor(store, options = {}) {\n        super(store);\n        this.options = options;\n        this.__store__ = store;\n    }\n    selectAll(options = {\n        asObject: false,\n    }) {\n        return this.select((state) => state.entities).pipe(map(() => this.getAll(options)));\n    }\n    getAll(options = { asObject: false, filterBy: undefined, limitTo: undefined }) {\n        if (options.asObject) {\n            return entitiesToMap(this.getValue(), options);\n        }\n        sortByOptions(options, this.config || this.options);\n        return entitiesToArray(this.getValue(), options);\n    }\n    selectMany(ids, project) {\n        if (!ids || !ids.length)\n            return of([]);\n        return this.select((state) => state.entities).pipe(map((entities) => mapSkipUndefined(ids, (id) => getEntity(id, project)(entities))), distinctUntilArrayItemChanged());\n    }\n    selectEntity(idOrPredicate, project) {\n        let id = idOrPredicate;\n        if (isFunction(idOrPredicate)) {\n            // For performance reason we expect the entity to be in the store\n            id = findEntityByPredicate(idOrPredicate, this.getValue().entities);\n        }\n        return this.select((state) => state.entities).pipe(map(getEntity(id, project)), distinctUntilChanged());\n    }\n    /**\n     * Get an entity by id\n     *\n     * @example\n     *\n     * this.query.getEntity(1);\n     */\n    getEntity(id) {\n        return this.getValue().entities[id];\n    }\n    /**\n     * Select the active entity's id\n     *\n     * @example\n     *\n     * this.query.selectActiveId()\n     */\n    selectActiveId() {\n        return this.select((state) => state.active);\n    }\n    /**\n     * Get the active id\n     *\n     * @example\n     *\n     * this.query.getActiveId()\n     */\n    getActiveId() {\n        return this.getValue().active;\n    }\n    selectActive(project) {\n        if (isArray(this.getActive())) {\n            return this.selectActiveId().pipe(switchMap((ids) => this.selectMany(ids, project)));\n        }\n        return this.selectActiveId().pipe(switchMap((ids) => this.selectEntity(ids, project)));\n    }\n    getActive() {\n        const activeId = this.getActiveId();\n        if (isArray(activeId)) {\n            return activeId.map((id) => this.getValue().entities[id]);\n        }\n        return toBoolean(activeId) ? this.getEntity(activeId) : undefined;\n    }\n    /**\n     * Select the store's entity collection length\n     *\n     * @example\n     *\n     * this.query.selectCount()\n     * this.query.selectCount(entity => entity.completed)\n     */\n    selectCount(predicate) {\n        return this.select((state) => state.entities).pipe(map(() => this.getCount(predicate)));\n    }\n    /**\n     * Get the store's entity collection length\n     *\n     * @example\n     *\n     * this.query.getCount()\n     * this.query.getCount(entity => entity.completed)\n     */\n    getCount(predicate) {\n        if (isFunction(predicate)) {\n            return this.getAll().filter(predicate).length;\n        }\n        return this.getValue().ids.length;\n    }\n    selectLast(project) {\n        return this.selectAt((ids) => ids[ids.length - 1], project);\n    }\n    selectFirst(project) {\n        return this.selectAt((ids) => ids[0], project);\n    }\n    selectEntityAction(actionOrActions) {\n        if (isNil(actionOrActions)) {\n            return this.store.selectEntityAction$;\n        }\n        const project = isArray(actionOrActions) ? (action) => action : ({ ids }) => ids;\n        const actions = coerceArray(actionOrActions);\n        return this.store.selectEntityAction$.pipe(filter(({ type }) => actions.includes(type)), map((action) => project(action)));\n    }\n    hasEntity(projectOrIds) {\n        if (isNil(projectOrIds)) {\n            return this.getValue().ids.length > 0;\n        }\n        if (isFunction(projectOrIds)) {\n            return this.getAll().some(projectOrIds);\n        }\n        if (isArray(projectOrIds)) {\n            return projectOrIds.every((id) => id in this.getValue().entities);\n        }\n        return projectOrIds in this.getValue().entities;\n    }\n    /**\n     * Returns whether entity store has an active entity\n     *\n     * @example\n     *\n     * this.query.hasActive()\n     * this.query.hasActive(3)\n     *\n     */\n    hasActive(id) {\n        const active = this.getValue().active;\n        const isIdProvided = isDefined(id);\n        if (Array.isArray(active)) {\n            if (isIdProvided) {\n                return active.includes(id);\n            }\n            return active.length > 0;\n        }\n        return isIdProvided ? active === id : isDefined(active);\n    }\n    /**\n     *\n     * Create sub UI query for querying Entity's UI state\n     *\n     * @example\n     *\n     *\n     * export class ProductsQuery extends QueryEntity<ProductsState> {\n     *   ui: EntityUIQuery<ProductsUIState>;\n     *\n     *   constructor(protected store: ProductsStore) {\n     *     super(store);\n     *     this.createUIQuery();\n     *   }\n     *\n     * }\n     */\n    createUIQuery() {\n        this.ui = new EntityUIQuery(this.__store__.ui);\n    }\n    selectAt(mapFn, project) {\n        return this.select((state) => state.ids).pipe(map(mapFn), distinctUntilChanged(), switchMap((id) => this.selectEntity(id, project)));\n    }\n}\n// @internal\nclass EntityUIQuery extends QueryEntity {\n    constructor(store) {\n        super(store);\n    }\n}\n\nfunction createStore(initialState, options) {\n    return new Store(initialState, options);\n}\nfunction createQuery(store) {\n    return new Query(store);\n}\nfunction createEntityStore(initialState, options) {\n    return new EntityStore(initialState, options);\n}\nfunction createEntityQuery(store, options = {}) {\n    return new QueryEntity(store, options);\n}\n\n/**\n * @internal\n *\n * @example\n *\n * getValue(state, 'todos.ui')\n *\n */\nfunction getValue(obj, prop) {\n    /** return the whole state  */\n    if (prop.split('.').length === 1) {\n        return obj;\n    }\n    const removeStoreName = prop\n        .split('.')\n        .slice(1)\n        .join('.');\n    return removeStoreName.split('.').reduce((acc, part) => acc && acc[part], obj);\n}\n\n/**\n * Generate random guid\n *\n * @example\n *\n * {\n *   id: guid()\n * }\n *\n * @remarks this isn't a GUID, but a 10 char random alpha-num\n */\nfunction guid() {\n    return Math.random()\n        .toString(36)\n        .slice(2);\n}\n\n// @internal\nfunction isNumber(value) {\n    return !isArray(value) && value - parseFloat(value) + 1 >= 0;\n}\n\n/**\n * @internal\n *\n * @example\n * setValue(state, 'todos.ui', { filter: {} })\n */\nfunction setValue(obj, prop, val, replace = false) {\n    const split = prop.split('.');\n    if (split.length === 1) {\n        return Object.assign(Object.assign({}, obj), val);\n    }\n    obj = Object.assign({}, obj);\n    const lastIndex = split.length - 2;\n    const removeStoreName = prop.split('.').slice(1);\n    removeStoreName.reduce((acc, part, index) => {\n        if (index !== lastIndex) {\n            acc[part] = Object.assign({}, acc[part]);\n            return acc && acc[part];\n        }\n        acc[part] = replace || Array.isArray(acc[part]) || !isObject(acc[part]) ? val : Object.assign(Object.assign({}, acc[part]), val);\n        return acc && acc[part];\n    }, obj);\n    return obj;\n}\n\nlet skipStorageUpdate = false;\nconst _persistStateInit = new ReplaySubject(1);\nfunction selectPersistStateInit() {\n    return _persistStateInit.asObservable();\n}\nfunction setSkipStorageUpdate(skip) {\n    skipStorageUpdate = skip;\n}\nfunction getSkipStorageUpdate() {\n    return skipStorageUpdate;\n}\nfunction isPromise(v) {\n    return v && isFunction(v.then);\n}\nfunction observify(asyncOrValue) {\n    if (isPromise(asyncOrValue) || isObservable(asyncOrValue)) {\n        return from(asyncOrValue);\n    }\n    return of(asyncOrValue);\n}\nfunction persistState(params) {\n    const defaults = {\n        key: 'AkitaStores',\n        enableInNonBrowser: false,\n        storage: !hasLocalStorage() ? params.storage : localStorage,\n        deserialize: JSON.parse,\n        serialize: JSON.stringify,\n        include: [],\n        select: [],\n        persistOnDestroy: false,\n        preStorageUpdate: function (storeName, state) {\n            return state;\n        },\n        preStoreUpdate: function (storeName, state) {\n            return state;\n        },\n        skipStorageUpdate: getSkipStorageUpdate,\n        preStorageUpdateOperator: () => (source) => source,\n    };\n    const { storage, enableInNonBrowser, deserialize, serialize, include, select, key, preStorageUpdate, persistOnDestroy, preStorageUpdateOperator, preStoreUpdate, skipStorageUpdate } = Object.assign({}, defaults, params);\n    if ((isNotBrowser && !enableInNonBrowser) || !storage)\n        return;\n    const hasInclude = include.length > 0;\n    const hasSelect = select.length > 0;\n    let includeStores;\n    let selectStores;\n    if (hasInclude) {\n        includeStores = include.reduce((acc, path) => {\n            if (isFunction(path)) {\n                acc.fns.push(path);\n            }\n            else {\n                const storeName = path.split('.')[0];\n                acc[storeName] = path;\n            }\n            return acc;\n        }, { fns: [] });\n    }\n    if (hasSelect) {\n        selectStores = select.reduce((acc, selectFn) => {\n            acc[selectFn.storeName] = selectFn;\n            return acc;\n        }, {});\n    }\n    let stores = {};\n    let acc = {};\n    let subscriptions = [];\n    const buffer = [];\n    function _save(v) {\n        observify(v).subscribe(() => {\n            const next = buffer.shift();\n            next && _save(next);\n        });\n    }\n    // when we use the local/session storage we perform the serialize, otherwise we let the passed storage implementation to do it\n    const isLocalStorage = (hasLocalStorage() && storage === localStorage) || (hasSessionStorage() && storage === sessionStorage);\n    observify(storage.getItem(key)).subscribe((value) => {\n        let storageState = isObject(value) ? value : deserialize(value || '{}');\n        function save(storeCache) {\n            storageState['$cache'] = Object.assign(Object.assign({}, (storageState['$cache'] || {})), storeCache);\n            storageState = Object.assign({}, storageState, acc);\n            buffer.push(storage.setItem(key, isLocalStorage ? serialize(storageState) : storageState));\n            _save(buffer.shift());\n        }\n        function subscribe(storeName, path) {\n            stores[storeName] = __stores__[storeName]\n                ._select((state) => getValue(state, path))\n                .pipe(skip(1), map((store) => {\n                if (hasSelect && selectStores[storeName]) {\n                    return selectStores[storeName](store);\n                }\n                return store;\n            }), filter(() => skipStorageUpdate() === false), preStorageUpdateOperator())\n                .subscribe((data) => {\n                acc[storeName] = preStorageUpdate(storeName, data);\n                Promise.resolve().then(() => save({ [storeName]: __stores__[storeName]._cache().getValue() }));\n            });\n        }\n        function setInitial(storeName, store, path) {\n            if (storeName in storageState) {\n                setAction('@PersistState');\n                store._setState((state) => {\n                    return setValue(state, path, preStoreUpdate(storeName, storageState[storeName], state));\n                });\n                const hasCache = storageState['$cache'] ? storageState['$cache'][storeName] : false;\n                __stores__[storeName].setHasCache(hasCache, { restartTTL: true });\n            }\n        }\n        subscriptions.push($$deleteStore.subscribe((storeName) => {\n            if (stores[storeName]) {\n                if (persistOnDestroy === false) {\n                    save({ [storeName]: false });\n                }\n                stores[storeName].unsubscribe();\n                delete stores[storeName];\n            }\n        }));\n        subscriptions.push($$addStore.subscribe((storeName) => {\n            if (storeName === 'router') {\n                return;\n            }\n            const store = __stores__[storeName];\n            if (hasInclude) {\n                let path = includeStores[storeName];\n                if (!path) {\n                    const passPredicate = includeStores.fns.some((fn) => fn(storeName));\n                    if (passPredicate) {\n                        path = storeName;\n                    }\n                    else {\n                        return;\n                    }\n                }\n                setInitial(storeName, store, path);\n                subscribe(storeName, path);\n            }\n            else {\n                setInitial(storeName, store, storeName);\n                subscribe(storeName, storeName);\n            }\n        }));\n        _persistStateInit.next();\n    });\n    return {\n        destroy() {\n            subscriptions.forEach((s) => s.unsubscribe());\n            for (let i = 0, keys = Object.keys(stores); i < keys.length; i++) {\n                const storeName = keys[i];\n                stores[storeName].unsubscribe();\n            }\n            stores = {};\n        },\n        clear() {\n            storage.clear();\n        },\n        clearStore(storeName) {\n            if (isNil(storeName)) {\n                const value = observify(storage.setItem(key, '{}'));\n                value.subscribe();\n                return;\n            }\n            const value = storage.getItem(key);\n            observify(value).subscribe((v) => {\n                const storageState = deserialize(v || '{}');\n                if (storageState[storeName]) {\n                    delete storageState[storeName];\n                    const value = observify(storage.setItem(key, serialize(storageState)));\n                    value.subscribe();\n                }\n            });\n        },\n    };\n}\n\nclass AkitaPlugin {\n    constructor(query, config) {\n        this.query = query;\n        if (config && config.resetFn) {\n            if (getAkitaConfig().resettable) {\n                this.onReset(config.resetFn);\n            }\n        }\n    }\n    /** This method is responsible for getting access to the query. */\n    getQuery() {\n        return this.query;\n    }\n    /** This method is responsible for getting access to the store. */\n    getStore() {\n        return this.getQuery().__store__;\n    }\n    /** This method is responsible tells whether the plugin is entityBased or not.  */\n    isEntityBased(entityId) {\n        return toBoolean(entityId);\n    }\n    /** This method is responsible for selecting the source; it can be the whole store or one entity. */\n    selectSource(entityId, property) {\n        if (this.isEntityBased(entityId)) {\n            return this.getQuery().selectEntity(entityId).pipe(filterNilValue());\n        }\n        if (property) {\n            return this.getQuery().select((state) => getValue(state, this.withStoreName(property)));\n        }\n        return this.getQuery().select();\n    }\n    getSource(entityId, property) {\n        if (this.isEntityBased(entityId)) {\n            return this.getQuery().getEntity(entityId);\n        }\n        const state = this.getQuery().getValue();\n        if (property) {\n            return getValue(state, this.withStoreName(property));\n        }\n        return state;\n    }\n    withStoreName(prop) {\n        return `${this.storeName}.${prop}`;\n    }\n    get storeName() {\n        return this.getStore().storeName;\n    }\n    /** This method is responsible for updating the store or one entity; it can be the whole store or one entity. */\n    updateStore(newState, entityId, property, replace = false) {\n        if (this.isEntityBased(entityId)) {\n            const store = this.getStore();\n            replace ? store.replace(entityId, newState) : store.update(entityId, newState);\n        }\n        else {\n            if (property) {\n                this.getStore()._setState((state) => {\n                    return setValue(state, this.withStoreName(property), newState, true);\n                });\n                return;\n            }\n            const nextState = replace ? newState : (state) => (Object.assign(Object.assign({}, state), newState));\n            this.getStore()._setState(nextState);\n        }\n    }\n    /**\n     * Function to invoke upon reset\n     */\n    onReset(fn) {\n        const original = this.getStore().reset;\n        this.getStore().reset = (...params) => {\n            /** It should run after the plugin destroy method */\n            setTimeout(() => {\n                original.apply(this.getStore(), params);\n                fn();\n            });\n        };\n    }\n}\n\nconst ɵ0 = (head, current) => JSON.stringify(head) !== JSON.stringify(current);\nconst dirtyCheckDefaultParams = {\n    comparator: ɵ0,\n};\nfunction getNestedPath(nestedObj, path) {\n    const pathAsArray = path.split('.');\n    return pathAsArray.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), nestedObj);\n}\nclass DirtyCheckPlugin extends AkitaPlugin {\n    constructor(query, params, _entityId) {\n        super(query);\n        this.query = query;\n        this.params = params;\n        this._entityId = _entityId;\n        this.dirty = new BehaviorSubject(false);\n        this.active = false;\n        this._reset = new Subject();\n        this.isDirty$ = this.dirty.asObservable().pipe(distinctUntilChanged());\n        this.reset$ = this._reset.asObservable();\n        this.params = Object.assign(Object.assign({}, dirtyCheckDefaultParams), params);\n        if (this.params.watchProperty) {\n            const watchProp = coerceArray(this.params.watchProperty);\n            if (query instanceof QueryEntity && watchProp.includes('entities') && !watchProp.includes('ids')) {\n                watchProp.push('ids');\n            }\n            this.params.watchProperty = watchProp;\n        }\n    }\n    reset(params = {}) {\n        let currentValue = this.head;\n        if (isFunction(params.updateFn)) {\n            if (this.isEntityBased(this._entityId)) {\n                currentValue = params.updateFn(this.head, this.getQuery().getEntity(this._entityId));\n            }\n            else {\n                currentValue = params.updateFn(this.head, this.getQuery().getValue());\n            }\n        }\n        logAction(`@DirtyCheck - Revert`);\n        this.updateStore(currentValue, this._entityId);\n        this._reset.next();\n    }\n    setHead() {\n        if (!this.active) {\n            this.activate();\n            this.active = true;\n        }\n        else {\n            this.head = this._getHead();\n        }\n        this.updateDirtiness(false);\n        return this;\n    }\n    isDirty() {\n        return !!this.dirty.value;\n    }\n    hasHead() {\n        return !!this.getHead();\n    }\n    destroy() {\n        this.head = null;\n        this.subscription && this.subscription.unsubscribe();\n        this._reset && this._reset.complete();\n    }\n    isPathDirty(path) {\n        const head = this.getHead();\n        const current = this.getQuery().getValue();\n        const currentPathValue = getNestedPath(current, path);\n        const headPathValue = getNestedPath(head, path);\n        return this.params.comparator(currentPathValue, headPathValue);\n    }\n    getHead() {\n        return this.head;\n    }\n    activate() {\n        this.head = this._getHead();\n        /** if we are tracking specific properties select only the relevant ones */\n        const sources = this.params.watchProperty\n            ? this.params.watchProperty.map((prop) => this.query\n                .select((state) => state[prop])\n                .pipe(map((val) => ({\n                val,\n                __akitaKey: prop,\n            }))))\n            : [this.selectSource(this._entityId)];\n        this.subscription = combineLatest(sources)\n            .pipe(skip(1))\n            .subscribe((currentState) => {\n            if (isUndefined(this.head))\n                return;\n            /** __akitaKey is used to determine if we are tracking a specific property or a store change */\n            const isChange = currentState.some((state) => {\n                const head = state.__akitaKey ? this.head[state.__akitaKey] : this.head;\n                const compareTo = state.__akitaKey ? state.val : state;\n                return this.params.comparator(head, compareTo);\n            });\n            this.updateDirtiness(isChange);\n        });\n    }\n    updateDirtiness(isDirty) {\n        this.dirty.next(isDirty);\n    }\n    _getHead() {\n        let head = this.getSource(this._entityId);\n        if (this.params.watchProperty) {\n            head = this.getWatchedValues(head);\n        }\n        return head;\n    }\n    getWatchedValues(source) {\n        return this.params.watchProperty.reduce((watched, prop) => {\n            watched[prop] = source[prop];\n            return watched;\n        }, {});\n    }\n}\n\n/**\n * Each plugin that wants to add support for entities should extend this interface.\n */\nclass EntityCollectionPlugin {\n    constructor(query, entityIds) {\n        this.query = query;\n        this.entityIds = entityIds;\n        this.entities = new Map();\n    }\n    /**\n     * Get the entity plugin instance.\n     */\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n    /**\n     * Whether the entity plugin exist.\n     */\n    hasEntity(id) {\n        return this.entities.has(id);\n    }\n    /**\n     * Remove the entity plugin instance.\n     */\n    removeEntity(id) {\n        this.destroy(id);\n        return this.entities.delete(id);\n    }\n    /**\n     * Set the entity plugin instance.\n     */\n    createEntity(id, plugin) {\n        return this.entities.set(id, plugin);\n    }\n    /**\n     * If the user passes `entityIds` we take them; otherwise, we take all.\n     */\n    getIds() {\n        return isUndefined(this.entityIds) ? this.query.getValue().ids : coerceArray(this.entityIds);\n    }\n    /**\n     * When you call one of the plugin methods, you can pass id/ids or undefined which means all.\n     */\n    resolvedIds(ids) {\n        return isUndefined(ids) ? this.getIds() : coerceArray(ids);\n    }\n    /**\n     * Call this method when you want to activate the plugin on init or when you need to listen to add/remove of entities dynamically.\n     *\n     * For example in your plugin you may do the following:\n     *\n     * this.query.select(state => state.ids).pipe(skip(1)).subscribe(ids => this.activate(ids));\n     */\n    rebase(ids, actions = {}) {\n        /**\n         *\n         * If the user passes `entityIds` & we have new ids check if we need to add/remove instances.\n         *\n         * This phase will be called only upon update.\n         */\n        if (toBoolean(ids)) {\n            /**\n             * Which means all\n             */\n            if (isUndefined(this.entityIds)) {\n                for (let i = 0, len = ids.length; i < len; i++) {\n                    const entityId = ids[i];\n                    if (this.hasEntity(entityId) === false) {\n                        isFunction(actions.beforeAdd) && actions.beforeAdd(entityId);\n                        const plugin = this.instantiatePlugin(entityId);\n                        this.entities.set(entityId, plugin);\n                        isFunction(actions.afterAdd) && actions.afterAdd(plugin);\n                    }\n                }\n                this.entities.forEach((plugin, entityId) => {\n                    if (ids.indexOf(entityId) === -1) {\n                        isFunction(actions.beforeRemove) && actions.beforeRemove(plugin);\n                        this.removeEntity(entityId);\n                    }\n                });\n            }\n            else {\n                /**\n                 * Which means the user passes specific ids\n                 */\n                const _ids = coerceArray(this.entityIds);\n                for (let i = 0, len = _ids.length; i < len; i++) {\n                    const entityId = _ids[i];\n                    /** The Entity in current ids and doesn't exist, add it. */\n                    if (ids.indexOf(entityId) > -1 && this.hasEntity(entityId) === false) {\n                        isFunction(actions.beforeAdd) && actions.beforeAdd(entityId);\n                        const plugin = this.instantiatePlugin(entityId);\n                        this.entities.set(entityId, plugin);\n                        isFunction(actions.afterAdd) && actions.afterAdd(plugin);\n                    }\n                    else {\n                        this.entities.forEach((plugin, entityId) => {\n                            /** The Entity not in current ids and exists, remove it. */\n                            if (ids.indexOf(entityId) === -1 && this.hasEntity(entityId) === true) {\n                                isFunction(actions.beforeRemove) && actions.beforeRemove(plugin);\n                                this.removeEntity(entityId);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n        else {\n            /**\n             * Otherwise, start with the provided ids or all.\n             */\n            this.getIds().forEach(id => {\n                if (!this.hasEntity(id))\n                    this.createEntity(id, this.instantiatePlugin(id));\n            });\n        }\n    }\n    /**\n     * Listen for add/remove entities.\n     */\n    selectIds() {\n        return this.query.select(state => state.ids);\n    }\n    /**\n     * Base method for activation, you can override it if you need to.\n     */\n    activate(ids) {\n        this.rebase(ids);\n    }\n    /**\n     * Loop over each id and invoke the plugin method.\n     */\n    forEachId(ids, cb) {\n        const _ids = this.resolvedIds(ids);\n        for (let i = 0, len = _ids.length; i < len; i++) {\n            const id = _ids[i];\n            if (this.hasEntity(id)) {\n                cb(this.getEntity(id));\n            }\n        }\n    }\n}\n\nclass EntityDirtyCheckPlugin extends EntityCollectionPlugin {\n    constructor(query, params = {}) {\n        super(query, params.entityIds);\n        this.query = query;\n        this.params = params;\n        this._someDirty = new Subject();\n        this.someDirty$ = merge(this.query.select(state => state.entities), this._someDirty.asObservable()).pipe(auditTime(0), map(() => this.checkSomeDirty()));\n        this.params = Object.assign(Object.assign({}, dirtyCheckDefaultParams), params);\n        // TODO lazy activate?\n        this.activate();\n        this.selectIds()\n            .pipe(skip(1))\n            .subscribe(ids => {\n            super.rebase(ids, { afterAdd: plugin => plugin.setHead() });\n        });\n    }\n    setHead(ids) {\n        if (this.params.entityIds && ids) {\n            const toArray = coerceArray(ids);\n            const someAreWatched = coerceArray(this.params.entityIds).some(id => toArray.indexOf(id) > -1);\n            if (someAreWatched === false) {\n                return this;\n            }\n        }\n        this.forEachId(ids, e => e.setHead());\n        this._someDirty.next();\n        return this;\n    }\n    hasHead(id) {\n        if (this.entities.has(id)) {\n            const entity = this.getEntity(id);\n            return entity.hasHead();\n        }\n        return false;\n    }\n    reset(ids, params = {}) {\n        this.forEachId(ids, e => e.reset(params));\n    }\n    isDirty(id, asObservable = true) {\n        if (this.entities.has(id)) {\n            const entity = this.getEntity(id);\n            return asObservable ? entity.isDirty$ : entity.isDirty();\n        }\n        return false;\n    }\n    someDirty() {\n        return this.checkSomeDirty();\n    }\n    isPathDirty(id, path) {\n        if (this.entities.has(id)) {\n            const head = this.getEntity(id).getHead();\n            const current = this.query.getEntity(id);\n            const currentPathValue = getNestedPath(current, path);\n            const headPathValue = getNestedPath(head, path);\n            return this.params.comparator(currentPathValue, headPathValue);\n        }\n        return null;\n    }\n    destroy(ids) {\n        this.forEachId(ids, e => e.destroy());\n        /** complete only when the plugin destroys */\n        if (!ids) {\n            this._someDirty.complete();\n        }\n    }\n    instantiatePlugin(id) {\n        return new DirtyCheckPlugin(this.query, this.params, id);\n    }\n    checkSomeDirty() {\n        const entitiesIds = this.resolvedIds();\n        for (const id of entitiesIds) {\n            if (this.getEntity(id).isDirty()) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nconst paginatorDefaults = {\n    pagesControls: false,\n    range: false,\n    startWith: 1,\n    cacheTimeout: undefined,\n    clearStoreWithCache: true,\n};\nclass PaginatorPlugin extends AkitaPlugin {\n    constructor(query, config = {}) {\n        super(query, {\n            resetFn: () => {\n                this.initial = false;\n                this.destroy({ clearCache: true, currentPage: 1 });\n            },\n        });\n        this.query = query;\n        this.config = config;\n        /** Save current filters, sorting, etc. in cache */\n        this.metadata = new Map();\n        this.pages = new Map();\n        this.pagination = {\n            currentPage: 1,\n            perPage: 0,\n            total: 0,\n            lastPage: 0,\n            data: [],\n        };\n        /**\n         * When the user navigates to a different page and return\n         * we don't want to call `clearCache` on first time.\n         */\n        this.initial = true;\n        /**\n         * Proxy to the query loading\n         */\n        this.isLoading$ = this.query.selectLoading().pipe(delay(0));\n        this.config = Object.assign(Object.assign({}, paginatorDefaults), config);\n        const { startWith, cacheTimeout } = this.config;\n        this.page = new BehaviorSubject(startWith);\n        if (isObservable(cacheTimeout)) {\n            this.clearCacheSubscription = cacheTimeout.subscribe(() => this.clearCache());\n        }\n    }\n    /**\n     * Listen to page changes\n     */\n    get pageChanges() {\n        return this.page.asObservable();\n    }\n    /**\n     * Get the current page number\n     */\n    get currentPage() {\n        return this.pagination.currentPage;\n    }\n    /**\n     * Check if current page is the first one\n     */\n    get isFirst() {\n        return this.currentPage === 1;\n    }\n    /**\n     * Check if current page is the last one\n     */\n    get isLast() {\n        return this.currentPage === this.pagination.lastPage;\n    }\n    /**\n     * Whether to generate an array of pages for *ngFor\n     * [1, 2, 3, 4]\n     */\n    withControls() {\n        this.config.pagesControls = true;\n        return this;\n    }\n    /**\n     * Whether to generate the `from` and `to` keys\n     * [1, 2, 3, 4]\n     */\n    withRange() {\n        this.config.range = true;\n        return this;\n    }\n    /**\n     * Set the loading state\n     */\n    setLoading(value = true) {\n        this.getStore().setLoading(value);\n    }\n    /**\n     * Update the pagination object and add the page\n     */\n    update(response) {\n        this.pagination = response;\n        this.addPage(response.data);\n    }\n    /**\n     *\n     * Set the ids and add the page to store\n     */\n    addPage(data) {\n        this.pages.set(this.currentPage, { ids: data.map((entity) => entity[this.getStore().idKey]) });\n        this.getStore().upsertMany(data);\n    }\n    /**\n     * Clear the cache.\n     */\n    clearCache(options = {}) {\n        if (!this.initial) {\n            logAction('@Pagination - Clear Cache');\n            if (options.clearStore !== false && (this.config.clearStoreWithCache || options.clearStore)) {\n                this.getStore().remove();\n            }\n            this.pages = new Map();\n            this.metadata = new Map();\n        }\n        this.initial = false;\n    }\n    clearPage(page) {\n        this.pages.delete(page);\n    }\n    /**\n     * Clear the cache timeout and optionally the pages\n     */\n    destroy({ clearCache, currentPage } = {}) {\n        if (this.clearCacheSubscription) {\n            this.clearCacheSubscription.unsubscribe();\n        }\n        if (clearCache) {\n            this.clearCache();\n        }\n        if (!isUndefined(currentPage)) {\n            this.setPage(currentPage);\n        }\n        this.initial = true;\n    }\n    /**\n     * Whether the provided page is active\n     */\n    isPageActive(page) {\n        return this.currentPage === page;\n    }\n    /**\n     * Set the current page\n     */\n    setPage(page) {\n        if (page !== this.currentPage || !this.hasPage(page)) {\n            this.page.next((this.pagination.currentPage = page));\n        }\n    }\n    /**\n     * Increment current page\n     */\n    nextPage() {\n        if (this.currentPage !== this.pagination.lastPage) {\n            this.setPage(this.pagination.currentPage + 1);\n        }\n    }\n    /**\n     * Decrement current page\n     */\n    prevPage() {\n        if (this.pagination.currentPage > 1) {\n            this.setPage(this.pagination.currentPage - 1);\n        }\n    }\n    /**\n     * Set current page to last\n     */\n    setLastPage() {\n        this.setPage(this.pagination.lastPage);\n    }\n    /**\n     * Set current page to first\n     */\n    setFirstPage() {\n        this.setPage(1);\n    }\n    /**\n     * Check if page exists in cache\n     */\n    hasPage(page) {\n        return this.pages.has(page);\n    }\n    /**\n     * Get the current page if it's in cache, otherwise invoke the request\n     */\n    getPage(req) {\n        let page = this.pagination.currentPage;\n        if (this.hasPage(page)) {\n            return this.selectPage(page);\n        }\n        else {\n            this.setLoading(true);\n            return from(req()).pipe(switchMap((config) => {\n                page = config.currentPage;\n                applyTransaction(() => {\n                    this.setLoading(false);\n                    this.update(config);\n                });\n                return this.selectPage(page);\n            }));\n        }\n    }\n    getQuery() {\n        return this.query;\n    }\n    refreshCurrentPage() {\n        if (isNil(this.currentPage) === false) {\n            this.clearPage(this.currentPage);\n            this.setPage(this.currentPage);\n        }\n    }\n    getFrom() {\n        if (this.isFirst) {\n            return 1;\n        }\n        return (this.currentPage - 1) * this.pagination.perPage + 1;\n    }\n    getTo() {\n        if (this.isLast) {\n            return this.pagination.total;\n        }\n        return this.currentPage * this.pagination.perPage;\n    }\n    /**\n     * Select the page\n     */\n    selectPage(page) {\n        return this.query.selectAll({ asObject: true }).pipe(take(1), map((entities) => {\n            const response = Object.assign(Object.assign({}, this.pagination), { data: this.pages.get(page).ids.map((id) => entities[id]) });\n            const { range, pagesControls } = this.config;\n            /** If no total - calc it */\n            if (isNaN(this.pagination.total)) {\n                if (response.lastPage === 1) {\n                    response.total = response.data ? response.data.length : 0;\n                }\n                else {\n                    response.total = response.perPage * response.lastPage;\n                }\n                this.pagination.total = response.total;\n            }\n            if (range) {\n                response.from = this.getFrom();\n                response.to = this.getTo();\n            }\n            if (pagesControls) {\n                response.pageControls = generatePages(this.pagination.total, this.pagination.perPage);\n            }\n            return response;\n        }));\n    }\n}\n__decorate([\n    action('@Pagination - New Page'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], PaginatorPlugin.prototype, \"update\", null);\n\n/**\n * Generate an array so we can ngFor them to navigate between pages\n */\nfunction generatePages(total, perPage) {\n    const len = Math.ceil(total / perPage);\n    const arr = [];\n    for (let i = 0; i < len; i++) {\n        arr.push(i + 1);\n    }\n    return arr;\n}\n/** backward compatibility */\nconst Paginator = PaginatorPlugin;\n\nclass PersistNgFormPlugin extends AkitaPlugin {\n    constructor(query, factoryFnOrPath, params = {}) {\n        super(query);\n        this.query = query;\n        this.factoryFnOrPath = factoryFnOrPath;\n        this.params = params;\n        this.params = Object.assign({ debounceTime: 300, formKey: 'akitaForm', emitEvent: false, arrControlFactory: v => this.builder.control(v) }, params);\n        this.isRootKeys = toBoolean(factoryFnOrPath) === false;\n        this.isKeyBased = isString(factoryFnOrPath) || this.isRootKeys;\n    }\n    setForm(form, builder) {\n        this.form = form;\n        this.builder = builder;\n        this.activate();\n        return this;\n    }\n    reset(initialState) {\n        let value;\n        if (initialState) {\n            value = initialState;\n        }\n        else {\n            value = this.isKeyBased ? this.initialValue : this.factoryFnOrPath();\n        }\n        if (this.isKeyBased) {\n            Object.keys(this.initialValue).forEach(stateKey => {\n                const value = this.initialValue[stateKey];\n                if (Array.isArray(value) && this.builder) {\n                    const formArray = this.form.controls[stateKey];\n                    this.cleanArray(formArray);\n                    value.forEach((v, i) => {\n                        this.form.get(stateKey).insert(i, this.params.arrControlFactory(v));\n                    });\n                }\n            });\n        }\n        this.form.patchValue(value, { emitEvent: this.params.emitEvent });\n        const storeValue = this.isKeyBased ? setValue(this.getQuery().getValue(), `${this.getStore().storeName}.${this.factoryFnOrPath}`, value) : { [this.params.formKey]: value };\n        this.updateStore(storeValue);\n    }\n    cleanArray(control) {\n        while (control.length !== 0) {\n            control.removeAt(0);\n        }\n    }\n    resolveInitialValue(formValue, root) {\n        if (!formValue)\n            return;\n        return Object.keys(formValue).reduce((acc, stateKey) => {\n            const value = root[stateKey];\n            if (Array.isArray(value) && this.builder) {\n                const factory = this.params.arrControlFactory;\n                this.cleanArray(this.form.get(stateKey));\n                value.forEach((v, i) => {\n                    this.form.get(stateKey).insert(i, factory(v));\n                });\n            }\n            acc[stateKey] = root[stateKey];\n            return acc;\n        }, {});\n    }\n    activate() {\n        let path;\n        if (this.isKeyBased) {\n            if (this.isRootKeys) {\n                this.initialValue = this.resolveInitialValue(this.form.value, this.getQuery().getValue());\n                this.form.patchValue(this.initialValue, { emitEvent: this.params.emitEvent });\n            }\n            else {\n                path = `${this.getStore().storeName}.${this.factoryFnOrPath}`;\n                const root = getValue(this.getQuery().getValue(), path);\n                this.initialValue = this.resolveInitialValue(root, root);\n                this.form.patchValue(this.initialValue, { emitEvent: this.params.emitEvent });\n            }\n        }\n        else {\n            if (!this.getQuery().getValue()[this.params.formKey]) {\n                logAction('@PersistNgFormPlugin activate');\n                this.updateStore({ [this.params.formKey]: this.factoryFnOrPath() });\n            }\n            const value = this.getQuery().getValue()[this.params.formKey];\n            this.form.patchValue(value);\n        }\n        this.formChanges = this.form.valueChanges.pipe(debounceTime(this.params.debounceTime)).subscribe(value => {\n            logAction('@PersistForm - Update');\n            let newState;\n            if (this.isKeyBased) {\n                if (this.isRootKeys) {\n                    newState = state => (Object.assign(Object.assign({}, state), value));\n                }\n                else {\n                    newState = state => setValue(state, path, value);\n                }\n            }\n            else {\n                newState = () => ({ [this.params.formKey]: value });\n            }\n            this.updateStore(newState(this.getQuery().getValue()));\n        });\n    }\n    destroy() {\n        this.formChanges && this.formChanges.unsubscribe();\n        this.form = null;\n        this.builder = null;\n    }\n}\n\nclass StateHistoryPlugin extends AkitaPlugin {\n    constructor(query, params = {}, _entityId) {\n        super(query, {\n            resetFn: () => this.clear(),\n        });\n        this.query = query;\n        this.params = params;\n        this._entityId = _entityId;\n        /** Allow skipping an update from outside */\n        this.skip = false;\n        this.history = {\n            past: [],\n            present: null,\n            future: [],\n        };\n        /** Skip the update when redo/undo */\n        this.skipUpdate = false;\n        params.maxAge = !!params.maxAge ? params.maxAge : 10;\n        params.comparator = params.comparator || (() => true);\n        this.activate();\n    }\n    /**\n     * Observable stream representing whether the history plugin has an available past\n     *\n     */\n    get hasPast$() {\n        return this._hasPast$;\n    }\n    /**\n     * Observable stream representing whether the history plugin has an available future\n     *\n     */\n    get hasFuture$() {\n        return this._hasFuture$;\n    }\n    get hasPast() {\n        return this.history.past.length > 0;\n    }\n    get hasFuture() {\n        return this.history.future.length > 0;\n    }\n    get property() {\n        return this.params.watchProperty;\n    }\n    /* Updates the hasPast$ hasFuture$ observables*/\n    updateHasHistory() {\n        this.hasFutureSubject.next(this.hasFuture);\n        this.hasPastSubject.next(this.hasPast);\n    }\n    activate() {\n        this.hasPastSubject = new BehaviorSubject(false);\n        this._hasPast$ = this.hasPastSubject.asObservable().pipe(distinctUntilChanged());\n        this.hasFutureSubject = new BehaviorSubject(false);\n        this._hasFuture$ = this.hasFutureSubject.asObservable().pipe(distinctUntilChanged());\n        this.history.present = this.getSource(this._entityId, this.property);\n        this.subscription = this\n            .selectSource(this._entityId, this.property)\n            .pipe(pairwise())\n            .subscribe(([past, present]) => {\n            if (this.skip) {\n                this.skip = false;\n                return;\n            }\n            /**\n             *  comparator: (prev, current) => isEqual(prev, current) === false\n             */\n            const shouldUpdate = this.params.comparator(past, present);\n            if (!this.skipUpdate && shouldUpdate) {\n                if (this.history.past.length === this.params.maxAge) {\n                    this.history.past = this.history.past.slice(1);\n                }\n                this.history.past = [...this.history.past, past];\n                this.history.present = present;\n                this.updateHasHistory();\n            }\n        });\n    }\n    undo() {\n        if (this.history.past.length > 0) {\n            const { past, present } = this.history;\n            const previous = past[past.length - 1];\n            this.history.past = past.slice(0, past.length - 1);\n            this.history.present = previous;\n            this.history.future = [present, ...this.history.future];\n            this.update();\n        }\n    }\n    redo() {\n        if (this.history.future.length > 0) {\n            const { past, present } = this.history;\n            const next = this.history.future[0];\n            const newFuture = this.history.future.slice(1);\n            this.history.past = [...past, present];\n            this.history.present = next;\n            this.history.future = newFuture;\n            this.update('Redo');\n        }\n    }\n    jumpToPast(index) {\n        if (index < 0 || index >= this.history.past.length)\n            return;\n        const { past, future, present } = this.history;\n        /**\n         *\n         * const past = [1, 2, 3, 4, 5];\n         * const present = 6;\n         * const future = [7, 8, 9];\n         * const index = 2;\n         *\n         * newPast = past.slice(0, index) = [1, 2];\n         * newPresent = past[index] = 3;\n         * newFuture = [...past.slice(index + 1),present, ...future] = [4, 5, 6, 7, 8, 9];\n         *\n         */\n        const newPast = past.slice(0, index);\n        const newFuture = [...past.slice(index + 1), present, ...future];\n        const newPresent = past[index];\n        this.history.past = newPast;\n        this.history.present = newPresent;\n        this.history.future = newFuture;\n        this.update();\n    }\n    jumpToFuture(index) {\n        if (index < 0 || index >= this.history.future.length)\n            return;\n        const { past, future, present } = this.history;\n        /**\n         *\n         * const past = [1, 2, 3, 4, 5];\n         * const present = 6;\n         * const future = [7, 8, 9, 10]\n         * const index = 1\n         *\n         * newPast = [...past, present, ...future.slice(0, index) = [1, 2, 3, 4, 5, 6, 7];\n         * newPresent = future[index] = 8;\n         * newFuture = futrue.slice(index+1) = [9, 10];\n         *\n         */\n        const newPast = [...past, present, ...future.slice(0, index)];\n        const newPresent = future[index];\n        const newFuture = future.slice(index + 1);\n        this.history.past = newPast;\n        this.history.present = newPresent;\n        this.history.future = newFuture;\n        this.update('Redo');\n    }\n    /**\n     *\n     * jump n steps in the past or forward\n     *\n     */\n    jump(n) {\n        if (n > 0)\n            return this.jumpToFuture(n - 1);\n        if (n < 0)\n            return this.jumpToPast(this.history.past.length + n);\n    }\n    /**\n     * Clear the history\n     *\n     * @param customUpdateFn Callback function for only clearing part of the history\n     *\n     * @example\n     *\n     * stateHistory.clear((history) => {\n     *  return {\n     *    past: history.past,\n     *    present: history.present,\n     *    future: []\n     *  };\n     * });\n     */\n    clear(customUpdateFn) {\n        this.history = isFunction(customUpdateFn)\n            ? customUpdateFn(this.history)\n            : {\n                past: [],\n                present: null,\n                future: [],\n            };\n        this.updateHasHistory();\n    }\n    destroy(clearHistory = false) {\n        if (clearHistory) {\n            this.clear();\n        }\n        this.subscription.unsubscribe();\n    }\n    ignoreNext() {\n        this.skip = true;\n    }\n    update(action = 'Undo') {\n        this.skipUpdate = true;\n        logAction(`@StateHistory - ${action}`);\n        this.updateStore(this.history.present, this._entityId, this.property, true);\n        this.updateHasHistory();\n        this.skipUpdate = false;\n    }\n}\n\nclass EntityStateHistoryPlugin extends EntityCollectionPlugin {\n    constructor(query, params = {}) {\n        super(query, params.entityIds);\n        this.query = query;\n        this.params = params;\n        params.maxAge = toBoolean(params.maxAge) ? params.maxAge : 10;\n        this.activate();\n        this.selectIds()\n            .pipe(skip(1))\n            .subscribe((ids) => this.activate(ids));\n    }\n    redo(ids) {\n        this.forEachId(ids, (e) => e.redo());\n    }\n    undo(ids) {\n        this.forEachId(ids, (e) => e.undo());\n    }\n    hasPast(id) {\n        if (this.hasEntity(id)) {\n            return this.getEntity(id).hasPast;\n        }\n    }\n    hasFuture(id) {\n        if (this.hasEntity(id)) {\n            return this.getEntity(id).hasFuture;\n        }\n    }\n    jumpToFuture(ids, index) {\n        this.forEachId(ids, (e) => e.jumpToFuture(index));\n    }\n    jumpToPast(ids, index) {\n        this.forEachId(ids, (e) => e.jumpToPast(index));\n    }\n    clear(ids, customUpdateFn) {\n        this.forEachId(ids, (e) => e.clear(customUpdateFn));\n    }\n    destroy(ids, clearHistory = false) {\n        this.forEachId(ids, (e) => e.destroy(clearHistory));\n    }\n    ignoreNext(ids) {\n        this.forEachId(ids, (e) => e.ignoreNext());\n    }\n    instantiatePlugin(id) {\n        return new StateHistoryPlugin(this.query, this.params, id);\n    }\n}\n\n/**\n * Reset stores back to their initial state\n *\n * @example\n *\n * resetStores()\n * resetStores({\n *   exclude: ['auth']\n * })\n */\nfunction resetStores(options) {\n    const defaults = {\n        exclude: []\n    };\n    options = Object.assign({}, defaults, options);\n    const stores = Object.keys(__stores__);\n    applyTransaction(() => {\n        for (const store of stores) {\n            const s = __stores__[store];\n            if (!options.exclude) {\n                s.reset();\n            }\n            else {\n                if (options.exclude.indexOf(s.storeName) === -1) {\n                    s.reset();\n                }\n            }\n        }\n    });\n}\n\nvar StoreAction;\n(function (StoreAction) {\n    StoreAction[\"Update\"] = \"UPDATE\";\n})(StoreAction || (StoreAction = {}));\nconst StoreActionMapping = {\n    [StoreAction.Update]: 'update',\n};\nvar EntityStoreAction;\n(function (EntityStoreAction) {\n    EntityStoreAction[\"Update\"] = \"UPDATE\";\n    EntityStoreAction[\"AddEntities\"] = \"ADD_ENTITIES\";\n    EntityStoreAction[\"SetEntities\"] = \"SET_ENTITIES\";\n    EntityStoreAction[\"UpdateEntities\"] = \"UPDATE_ENTITIES\";\n    EntityStoreAction[\"RemoveEntities\"] = \"REMOVE_ENTITIES\";\n    EntityStoreAction[\"UpsertEntities\"] = \"UPSERT_ENTITIES\";\n    EntityStoreAction[\"UpsertManyEntities\"] = \"UPSERT_MANY_ENTITIES\";\n})(EntityStoreAction || (EntityStoreAction = {}));\nconst EntityStoreActionMapping = {\n    [EntityStoreAction.Update]: 'update',\n    [EntityStoreAction.AddEntities]: 'add',\n    [EntityStoreAction.SetEntities]: 'set',\n    [EntityStoreAction.UpdateEntities]: 'update',\n    [EntityStoreAction.RemoveEntities]: 'remove',\n    [EntityStoreAction.UpsertEntities]: 'upsert',\n    [EntityStoreAction.UpsertManyEntities]: 'upsertMany',\n};\n/**\n * Get a {@link Store} from the global store registry.\n * @param storeClass The {@link Store} class of the instance to be returned.\n */\nfunction getStore(storeClass) {\n    return getStoreByName(storeClass[configKey]['storeName']);\n}\n/**\n * Get a {@link Store} from the global store registry.\n * @param storeName The {@link Store} name of the instance to be returned.\n */\nfunction getStoreByName(storeName) {\n    const store = __stores__[storeName];\n    if (isNil(store)) {\n        throw new AkitaError(`${store.storeName} doesn't exist`);\n    }\n    return store;\n}\n/**\n * Get a {@link EntityStore} from the global store registry.\n * @param storeClass The {@link EntityStore} class of the instance to be returned.\n */\nfunction getEntityStore(storeClass) {\n    return getStore(storeClass);\n}\n/**\n * Get a {@link EntityStore} from the global store registry.\n * @param storeName The {@link EntityStore} name of the instance to be returned.\n */\nfunction getEntityStoreByName(storeName) {\n    return getStoreByName(storeName);\n}\nfunction runStoreAction(storeClassOrName, action, operation) {\n    const store = typeof storeClassOrName === 'string' ? getStoreByName(storeClassOrName) : getStore(storeClassOrName);\n    operation(store[StoreActionMapping[action]].bind(store));\n}\nfunction runEntityStoreAction(storeClassOrName, action, operation) {\n    const store = typeof storeClassOrName === 'string' ? getEntityStoreByName(storeClassOrName) : getEntityStore(storeClassOrName);\n    operation(store[EntityStoreActionMapping[action]].bind(store));\n}\n\nfunction setLoading(store) {\n    return function (source) {\n        return defer(() => {\n            store.setLoading(true);\n            return source.pipe(finalize(() => store.setLoading(false)));\n        });\n    };\n}\n\nfunction setLoadingAndError(store) {\n    return function (source) {\n        return defer(() => {\n            store.setLoading(true);\n            store.setError(null);\n            return source.pipe(tap({\n                error(err) {\n                    store.setLoading(false);\n                    store.setError(err);\n                },\n                complete() {\n                    store.setLoading(false);\n                },\n            }));\n        });\n    };\n}\n\nclass SnapshotManager {\n    /**\n     * Get a snapshot of the whole state or a specific stores\n     * Use it ONLY for things such as saving the state in the server\n     */\n    getStoresSnapshot(stores = []) {\n        let acc = {};\n        const hasInclude = stores.length > 0;\n        const keys = hasInclude ? stores : Object.keys(__stores__);\n        for (let i = 0; i < keys.length; i++) {\n            let storeName = keys[i];\n            if (storeName !== 'router') {\n                acc[storeName] = __stores__[storeName]._value();\n            }\n        }\n        return acc;\n    }\n    setStoresSnapshot(stores, options) {\n        const mergedOptions = Object.assign({ skipStorageUpdate: false, lazy: false }, options);\n        mergedOptions.skipStorageUpdate && setSkipStorageUpdate(true);\n        let normalizedStores = stores;\n        if (isString(stores)) {\n            normalizedStores = JSON.parse(normalizedStores);\n        }\n        const size = Object.keys(normalizedStores).length;\n        if (mergedOptions.lazy) {\n            $$addStore\n                .pipe(filter(name => normalizedStores.hasOwnProperty(name)), take(size))\n                .subscribe(name => __stores__[name]._setState(() => normalizedStores[name]));\n        }\n        else {\n            for (let i = 0, keys = Object.keys(normalizedStores); i < keys.length; i++) {\n                const storeName = keys[i];\n                if (__stores__[storeName]) {\n                    __stores__[storeName]._setState(() => normalizedStores[storeName]);\n                }\n            }\n        }\n        mergedOptions.skipStorageUpdate && setSkipStorageUpdate(false);\n    }\n}\nconst snapshotManager = new SnapshotManager();\n\n// @internal\nfunction toEntitiesIds(entities, idKey = DEFAULT_ID_KEY) {\n    const ids = [];\n    for (const entity of entities) {\n        ids.push(entity[idKey]);\n    }\n    return ids;\n}\n\n/**\n * Track id updates of an entity and re-evaluation the query with the changed entity id.\n * Hint: Don't place the operator after other operators in the same pipeline as those will be skipped on\n * re-evaluation. Also, it can't be used with the selection operator, e.g <code>selectEntity(1, e => e.title)</code>\n * @param query The query from which the entity is selected.\n * @example\n *\n *   query.selectEntity(1).pipe(trackIdChanges(query)).subscribe(entity => { ... })\n *\n */\nfunction trackIdChanges(query) {\n    return (source) => source.lift(new TrackIdChanges(query));\n}\nclass TrackIdChanges {\n    constructor(query) {\n        this.query = query;\n    }\n    call(subscriber, source) {\n        return source\n            .pipe(first(), switchMap((entity) => {\n            let currId = entity[this.query.__store__.config.idKey];\n            let pending = false;\n            return merge(of({ newId: undefined, oldId: currId, pending: false }), this.query.__store__.selectEntityIdChanges$).pipe(\n            // the new id must differ form the old id\n            filter((change) => change.oldId === currId), \n            // extract the current pending state of the id update\n            tap((change) => (pending = change.pending)), \n            // only update the selection query if the id update is already applied to the store\n            filter((change) => change.newId !== currId && !pending), \n            // build a selection query for the new entity id\n            switchMap((change) => this.query\n                .selectEntity((currId = change.newId || currId))\n                // skip undefined value if pending.\n                .pipe(filter(() => !pending))));\n        }))\n            .subscribe(subscriber);\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { $$addStore, $$deleteStore, $$updateStore, AkitaPlugin, DEFAULT_ID_KEY, DirtyCheckPlugin, EntityActions, EntityCollectionPlugin, EntityDirtyCheckPlugin, EntityService, EntityStateHistoryPlugin, EntityStore, EntityStoreAction, EntityUIQuery, EntityUIStore, Order, Paginator, PaginatorPlugin, PersistNgFormPlugin, Query, QueryConfig, QueryEntity, SnapshotManager, StateHistoryPlugin, Store, StoreAction, StoreConfig, __DEV__, __stores__, action, addEntities, akitaConfig, akitaDevtools, applyTransaction, arrayAdd, arrayFind, arrayRemove, arrayToggle, arrayUpdate, arrayUpsert, byId, byKey, cacheable, coerceArray, combineQueries, commit, compareValues, configKey, createEntityQuery, createEntityStore, createQuery, createStore, currentAction, dirtyCheckDefaultParams, dispatchAdded, dispatchDeleted, dispatchUpdate, distinctUntilArrayItemChanged, enableAkitaProdMode, endBatch, entitiesToArray, entitiesToMap, filterNil, filterNilValue, find, getActiveEntities, getAkitaConfig, getEntityStore, getEntityStoreByName, getExitingActives, getInitialEntitiesState, getNestedPath, getStore, getStoreByName, getValue, guid, hasActiveState, hasEntity, isArray, isDefined, isDev, isEmpty, isEntityState, isFunction, isMultiActiveState, isNil, isNotBrowser, isNumber, isObject, isPlainObject, isString, isTransactionInProcess, isUndefined, logAction, persistState, queryConfigKey, removeAllEntities, removeEntities, resetCustomAction, resetStores, resolveActiveEntity, runEntityStoreAction, runStoreAction, selectPersistStateInit, setAction, setEntities, setLoading, setLoadingAndError, setSkipAction, setValue, snapshotManager, sortByOptions, startBatch, toBoolean, toEntitiesIds, toEntitiesObject, trackIdChanges, transaction, transactionManager, updateEntities, withTransaction, isBrowser as ɵa };\n\n//# sourceMappingURL=datorama-akita.js.map","import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, ElementRef, Optional, Input, TemplateRef, EventEmitter, isDevMode, SkipSelf, ViewContainerRef, ChangeDetectorRef, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, map, take, startWith, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, false));\n        this._toggleNativeDragInteractions();\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n                // We can't do much about it so just ignore the error.\n                try {\n                    correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n                }\n                catch (_a) { }\n            }\n        }\n    }\n    return clone;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach(sibling => sibling._startReceiving(this));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param previousIndex Index of the item when dragging started.\n     *\n     * @breaking-change 11.0.0 `previousIndex` parameter to become required.\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = new Set();\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (e) => this.pointerMove.next(e),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Handle that can be used to drag and CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" } });\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _dir, _group, \n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                return typeof drop === 'string' ?\n                    CdkDropList._dropLists.find(list => list.id === drop) : drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n            if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DROP_LIST, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem, CDK_DRAG_PARENT as ɵangular_material_src_cdk_drag_drop_drag_drop_b };\n\n//# sourceMappingURL=drag-drop.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from 'src/app/shared/interfaces/order';\nimport { OrderService } from 'src/app/shared/service/order.service';\n\n@Component({\n  selector: 'app-delivery-summery',\n  templateUrl: './delivery-summery.component.html',\n  styleUrls: ['./delivery-summery.component.scss']\n})\nexport class DeliverySummeryComponent implements OnInit {\n  clientId:string;\n\n  allOrders:Order[]=[];\n  deliveredOrders :Order[]=[];\n  deliveredOrdersThisMonth:any=[];\n  thisMonthOrders:Order[]=[];\n  allPayments:any;\n  curdate:any;\n  thisMonthPayments:any;\n   constructor(private orderService:OrderService,private route:ActivatedRoute) { \n     \n    \n   }\n \n   ngOnInit(): void {\n     this.clientId= this.route.snapshot.queryParams[\"id\"];\n     if(this.clientId){\n       console.log(this.clientId)\n       \n     }\n \n     this.orderService.getOrdersByDelivery(this.clientId).subscribe(orders=>{\n       this.allOrders = orders;\n       this.deliveredOrders = this.allOrders.filter(item=>item.status == \"4\");\n       this.allPayments=this.totalPrice();\n       this.curdate = \"01-\"+(new Date().getMonth() + 1).toString() + '-' + new Date().getFullYear().toString();\n       this.thisMonthOrders = this.allOrders.filter(item=>item.date > this.curdate);\n       this.deliveredOrdersThisMonth = this.thisMonthOrders.filter(item=>item.status == \"4\");\n       this.thisMonthPayments = this.totalPriceThisMonth();\n       console.log(orders)\n     })\n \n     console.log(this.curdate)\n \n   }\n \n   \n   totalPrice() {\n     let total = 0;\n     for(let data of this.deliveredOrders){\n       total += data.totalAmount;\n     }\n     return total;\n   }\n \n   totalPriceThisMonth() {\n     let total = 0;\n     for(let data of this.deliveredOrdersThisMonth){\n       total += data.totalAmount;\n     }\n     return total;\n   }\n  \n \n }\n ","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-xl-3 col-md-6 xl-50\">\n            <div class=\"card o-hidden widget-cards\">\n                <div class=\"bg-warning card-body\">\n                    <div class=\"media static-top-widget row\">\n                        <div class=\"icons-widgets col-4\">\n                            <div class=\"align-self-center text-center\">\n                                <app-feather-icons [icon]=\"'navigation'\" class=\"font-warning\"></app-feather-icons>\n                            </div>\n                        </div>\n                        <div class=\"media-body col-6\"><span >{{'All Orders'|translate}}</span>\n                            <h3 ><span class=\"counter\" [CountTo]=\"allOrders?.length\" [from]=\"0\"\n                                    [duration]=\"2\">{{allOrders?.length}}</span><small></small></h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-3 col-md-6 xl-50\">\n            <div class=\"card o-hidden  widget-cards\">\n                <div class=\"bg-secondary card-body\">\n                    <div class=\"media static-top-widget row\">\n                        <div class=\"icons-widgets col-4\">\n                            <div class=\"align-self-center text-center\">\n                                <app-feather-icons [icon]=\"'box'\" class=\"font-secondary\"></app-feather-icons>\n                            </div>\n                        </div>\n                        <div class=\"media-body col-8\"><span class=\"m-0\">{{'All Payments'|translate}}</span>\n                            <h3 class=\"mb-0\"><span class=\"counter\" >{{allPayments| number : '1.2-2'}}</span><small></small> {{'EGP'|translate}} </h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n        <div class=\"row\">\n            <div class=\"col-xl-3 col-md-6 xl-50\">\n                <div class=\"card o-hidden widget-cards\">\n                    <div class=\"bg-primary card-body\">\n                        <div class=\"media static-top-widget row\">\n                            <div class=\"icons-widgets col-4\">\n                                <div class=\"align-self-center text-center\">\n                                    <app-feather-icons [icon]=\"'navigation'\" class=\"font-warning\"></app-feather-icons>\n                                </div>\n                            </div>\n                            <div class=\"media-body col-8\"><span class=\"m-0\">{{'This month orders'|translate}}</span>\n                                <h3 class=\"mb-0\"><span class=\"counter\" [CountTo]=\"thisMonthOrders.length\" [from]=\"0\"\n                                        [duration]=\"2\">{{thisMonthOrders.length}}</span></h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-xl-3 col-md-6 xl-50\">\n                <div class=\"card o-hidden widget-cards\">\n                    <div class=\"bg-danger card-body\">\n                        <div class=\"media static-top-widget row\">\n                            <div class=\"icons-widgets col-4\">\n                                <div class=\"align-self-center text-center\">\n                                    <app-feather-icons [icon]=\"'box'\" class=\"font-secondary\"></app-feather-icons>\n                                </div>\n                            </div>\n                            <div class=\"media-body col-8\"><span class=\"m-0\">{{'This month payments'|translate}}</span>\n                                <h3 class=\"mb-0\"><span class=\"counter\">{{thisMonthPayments| number : '1.2-2'}}</span> {{'EGP'|translate}} </h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DeliveryBoy } from 'src/app/shared/interfaces/delivery-boy';\nimport { AccountDelivery } from 'src/app/shared/interfaces/account-delivery';\nimport { AuthService } from 'src/app/shared/service/auth.service';\nimport { DeliveryService } from 'src/app/shared/service/delivery.service';\nimport { DataService } from 'src/app/shared/service/data.service';\nimport { Town } from 'src/app/shared/interfaces/town';\nimport { State } from 'src/app/shared/interfaces/state';\ndeclare const $: any;\n@Component({\n  selector: 'app-view-delivery-boy',\n  templateUrl: './view-delivery-boy.component.html',\n  styleUrls: ['./view-delivery-boy.component.scss']\n})\nexport class ViewDeliveryBoyComponent implements OnInit {\n\n  id:any;\n  dBoy:DeliveryBoy;\n  towns:Town[]=[];\n  states:State[]=[];\n  tempId:any;\n  idPhoto1:any;\n  idPhoto2:any;\n  mLPhoto:any;\n  dLPhoto:any;\n  fishPhoto:any;\n  dbAcoount:AccountDelivery\n  constructor(private route:ActivatedRoute,private deliveryService:DeliveryService,private router:Router,private dataService:DataService) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.queryParams[\"id\"];\n    console.log(this.id)\n    this.getCustomer(this.id);\n    this.getAccounting(this.id);\n    this.getFillters()\n  }\n  getFillters() {\n    this.dataService.getTowns().subscribe(towns=>{\n      this.towns = towns;\n    });\n  }\n\n  getStates(){\n    this.dataService.getStates(this.dBoy.state).subscribe(states=>{\n      this.states = states;\n    });\n  }\n  getCustomer(id: any) {\n    this.deliveryService.getDB(this.id).subscribe(user=>{\n      this.dBoy = user;\n      this.getStates();\n      this.idPhoto1 = this.dBoy.idPhoto1||'assets/images/pro3/1.jpg';\n      this.idPhoto2 = this.dBoy.idPhoto2||'assets/images/pro3/1.jpg';\n      this.mLPhoto = this.dBoy.mLPhoto||'assets/images/pro3/1.jpg';\n      this.dLPhoto = this.dBoy.dLPhoto||'assets/images/pro3/1.jpg';\n      this.fishPhoto = this.dBoy.fishPhoto||'assets/images/pro3/1.jpg';\n    })\n  }\n\n  getAccounting(id:string){\n    this.deliveryService.getAllDeliveryBoyAccounting(id).subscribe(res=>{\n      console.log(res)\n      this.dbAcoount = res[0];\n    })\n  }\n\n  onEdit(id){\n    this.router.navigate(['/delivery/add-delivery-boy'],{ queryParams: {id: id}});\n    }\n  \n\n  onActive(id){\n    this.deliveryService.updateDeliveryStatus(this.id,\"1\");\n    }\n\n  onBlock(id){\n    if(this.dBoy.block){\n      this.deliveryService.updateDeliveryBlock(this.id,false);\n    }else{\n      this.deliveryService.updateDeliveryBlock(this.id,true);\n    }\n    \n      }\n\n  onCollect(){\n   this.deliveryService.updateDeliveryCollect(this.id, this.dbAcoount.id,true).subscribe(i=>{\n    $(\"#collect\").modal(\"hide\");\n   });\n  }\n\n}\n","<!-- Page Content -->\n<div class=\"content container-fluid\">\n    <div class=\"card mb-0\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"profile-view\">\n                        \n                        <div>\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"profile-info-left\">\n                                        <ul class=\"order-detail\">\n                                            <li>{{'Name :'|translate}} {{dBoy?.name}}</li>\n                                            <li>{{'Phone :'|translate}} {{dBoy?.phone}}</li>\n                                            <li>{{'Email :'|translate}} {{dBoy?.email}}</li>\n                                            <li>{{'Town :'|translate}} {{towns|townPipe:dBoy?.town}}</li>\n                                            <li>{{'State :'|translate}} {{states|statePipe:dBoy?.state}}</li>\n                                            <li>{{'Address :'|translate}} {{dBoy?.address}}</li>\n                                            <li>{{'Account Type :'|translate}} {{dBoy?.aType|translate}}</li>\n                                            <li>{{'Vehicle Type :'|translate}} {{dBoy?.vType |translate}}</li>\n                                        </ul>\n                                       \n                                    \n                                    </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <div class=\"profile-info-left\">\n                                        <ul class=\"order-detail\">\n                                            <li>{{'ID Number :'|translate}} {{dBoy?.idNumber}}</li>\n                                            <li><a href=\"{{dBoy?.idPhoto1}}\" target=\"_blank\">{{'ID Image 1'|translate}} </a></li>\n                                            <li><a href=\"{{dBoy?.idPhoto2}}\" target=\"_blank\">{{'ID Image 2'|translate}}</a></li>\n                                            <li><a href=\"{{dBoy?.dLPhoto}}\" target=\"_blank\">{{'Driving License Image'|translate}}</a></li>\n                                            <li><a href=\"{{dBoy?.mLPhoto}}\" target=\"_blank\">{{'Vehicle License Image'|translate}}</a></li>\n                                            <li><a href=\"{{dBoy?.fishPhoto}}\" target=\"_blank\">{{'Feash Image Type'|translate}}</a></li>\n                                        </ul>\n                                       \n                                    \n                                    </div>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <div class=\"profile-info-left\">\n                                        <ul class=\"order-detail\">\n                                            <li>{{'Status :'|translate}} <a style=\"color: rgb(84, 167, 2);\" *ngIf=\"!dBoy?.block && dBoy?.status=='1'\">{{'Active'|translate}}</a>\n                                                <a style=\"color: rgb(78, 76, 76);\" *ngIf=\"!dBoy?.block && dBoy?.status=='0'\">{{'Not Active'|translate}}</a><a style=\"color: rgb(240, 20, 4);\" *ngIf=\"dBoy?.block\">{{'Blocked'|translate}}</a></li>\n                                                 <li><button style=\"margin-top: 10px; width: 150px;\" type=\"button\" (click)=\"onEdit(dBoy.phone)\" class=\"btn btn-custom\">{{'Edit'|translate}}</button></li>\n                                            <li><button style=\"margin-top: 10px; width: 150px;\" type=\"button\" (click)=\"onActive(dBoy.phone)\" class=\"btn btn-custom\">{{'Activeate'|translate}}</button></li>\n                                            <li ><button type=\"button\" style=\"margin-top: 10px; width: 150px;\" (click)=\"onBlock(dBoy.phone)\" class=\"btn btn-custom\">{{'Block'|translate}}</button></li>\n                                            \n                                            \n                                        </ul>\n                                       \n                                    \n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card tab-box\">\n        <div class=\"row user-tabs\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 line-tabs\">\n                <ul class=\"nav nav-tabs nav-tabs-bottom\">\n                    <li class=\"nav-item\"><a href=\"#profile\" data-toggle=\"tab\" class=\"nav-link active\">{{'Summary'|translate}}</a>\n                    </li>\n                    <li class=\"nav-item\"><a href=\"#orders\" data-toggle=\"tab\" class=\"nav-link\">{{'Orders'|translate}}</a></li>\n                    <li class=\"nav-item\"><a href=\"#gifts\" data-toggle=\"tab\" class=\"nav-link\">{{'Accounts'|translate}}</a></li>\n\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"tab-content\">\n\n        <!-- Profile Info Tab -->\n        <div id=\"profile\" class=\"pro-overview tab-pane fade show active\">\n         <app-delivery-summery></app-delivery-summery>\n        </div>\n        <!-- /Profile Info Tab -->\n\n        <!-- Invoices Tab -->\n        <div class=\"tab-pane fade\" id=\"orders\">\n        <app-delivery-orders></app-delivery-orders>\n        </div>\n        <!-- /Invoices Tab -->\n\n        <!-- Account Tab -->\n        <div class=\"tab-pane fade\" id=\"gifts\">\n        <app-delivery-accounts></app-delivery-accounts>\n        </div>\n        <!-- Account Tab -->\n        <!-- Services Tab -->\n        <div class=\"tab-pane fade\" id=\"schadul\">\n           \n         </div>\n         <!-- Services Tab -->\n \n      \n    </div>\n</div>\n<!-- /Page Content -->\n<div class=\"modal custom-modal fade\" id=\"collect\" role=\"dialog\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <div class=\"form-header text-center\">\n                    <h3 class=\"text-center\">{{'Collect'|translate}}</h3>\n                    <h4 class=\"text-center\">{{'you want to Collect Amount'|translate}} {{dbAcoount?.total}} {{'EGP'|translate}} {{'?'|translate}}</h4>\n                </div>\n                <div class=\"modal-btn delete-action\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <a  class=\"btn btn-primary continue-btn\"\n                                (click)=\"onCollect()\">{{'Collect'|translate}}</a>\n                        </div>\n                        <div class=\"col-6\">\n                            <a  data-dismiss=\"modal\"\n                                class=\"btn btn-primary cancel-btn\">{{'Cancel'|translate}}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { OrderService } from 'src/app/shared/service/order.service';\n\n@Component({\n  selector: 'app-delivery-hour-report',\n  templateUrl: './delivery-hour-report.component.html',\n  styleUrls: ['./delivery-hour-report.component.scss']\n})\nexport class DeliveryHourReportComponent implements OnInit {\n  clientId:any;\n  public closeResult: string;\n  @ViewChild(DataTableDirective, { static: false })\n  public dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  isDtInitialized:boolean = false\n  public dtTrigger: Subject<any> = new Subject();\n  public orders = [];\n  public editedClient;\n  public tempId: any;\n  public companiesList = [];\n\n  public rows = [];\n  public srch = [];\n  public statusValue;\n  public pipe = new DatePipe(\"en-US\");\n\n  constructor(private modalService: NgbModal,private orderService:OrderService\n    ,private _domSanitizer: DomSanitizer,private router:Router,private route:ActivatedRoute) {\n\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n \n\n  ngOnInit() {\n    this.dtOptions = {\n      // ... skipped ...\n      pageLength: 10,\n      language : {\n        \"emptyTable\": \"ليست هناك بيانات متاحة في الجدول\",\n        \"loadingRecords\": \"جارٍ التحميل...\",\n        \"lengthMenu\": \" _MENU_ \",\n        \"zeroRecords\": \"لم يعثر على أية سجلات\",\n        \"info\": \"إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل\",\n        \"infoEmpty\": \"يعرض 0 إلى 0 من أصل 0 سجل\",\n        \"infoFiltered\": \"(منتقاة من مجموع _MAX_ مُدخل)\",\n        \"search\": \"بحث:\",\n        \"paginate\": {\n            \"first\": \"الأول\",\n            \"previous\": \"السابق\",\n            \"next\": \"التالي\",\n            \"last\": \"الأخير\"\n        },\n        \"aria\": {\n            \"sortAscending\": \": تفعيل لترتيب العمود تصاعدياً\",\n            \"sortDescending\": \": تفعيل لترتيب العمود تنازلياً\"\n        },\n        \"processing\": \"جارٍ المعالجة...\"\n    },\n      dom: \"lfrtip\",\n    };\n\n    this.dtOptions.language.url = \"src/assets/i18n/datatable.ar.json\";\n\n    this.clientId= this.route.snapshot.queryParams[\"id\"];\n    this.getOrders();\n  }\n  getOrders() {\n    this.orderService.getOrdersByDelivery(this.clientId).subscribe(res=>{\n      if (this.isDtInitialized) {\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n          dtInstance.destroy();\n          this.dtTrigger.next();\n        });\n      }else{\n        this.isDtInitialized = true\n        this.dtTrigger.next();\n      }\n      \n      this.orders = res;\n      console.log(this.orders)\n     // this.dtTrigger.next();\n      this.rows = this.orders;\n      this.srch = [...this.rows];\n    });\n   \n  }\n  onEditClient(event){\n\n  }\n\n  onEdit(event){\n    \n    }\n\n    addProduct(){\n    \n    }\n    objectValues(obj) {\n      return Object.values(obj);\n   }\n}\n\n","<!-- Container-fluid starts-->\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                \n                <div class=\"card-body\">\n                    \n                    <div id=\"batchDelete\" class=\"category-table custom-datatable\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"datatable\"\n                            class=\"table table-striped custom-table datatable\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>{{'Order ID'|translate}}</th>\n                                    <th>{{'Friday'|translate}}</th>\n                                    <th>{{'Saturday'|translate}}</th>\n                                    <th>{{'Sunday'|translate}}</th>\n                                    <th>{{'Monday'|translate}}</th>\n                                    <th>{{'Tuesday'|translate}}</th>\n                                    <th>{{'Wednesday'|translate}}</th>\n                                    <th>{{'Thursday'|translate}}</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let order of orders; let i = index\">\n                                    <td>{{i+1}}</td>\n                                    <td><a routerLink = \"/sales/view-order\" [queryParams]=\"{id: order?.orderId}\">{{order?.orderId}}</a></td>\n                                    <td>{{order?.date}}</td>\n                                    <td>{{order?.status | customStatus |translate}}</td>\n                                    <td>{{order?.shipping| number : '1.2-2'}}</td>\n                                    <td>{{order?.totalAmount| number : '1.2-2'}}</td>\n                                    \n                                </tr>\n                                <tr *ngIf=\"orders.length === 0\">\n                                    <td colspan=\"10\">\n                                        <h5 style=\"text-align: center;\">No data found</h5>\n                                    </td>\n                                   \n                                </tr>\n                            </tbody>\n                        </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends-->","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { OrderService } from 'src/app/shared/service/order.service';\n\n@Component({\n  selector: 'app-delivery-orders',\n  templateUrl: './delivery-orders.component.html',\n  styleUrls: ['./delivery-orders.component.scss']\n})\nexport class DeliveryOrdersComponent implements OnInit {\n\n  clientId:any;\n  public closeResult: string;\n  @ViewChild(DataTableDirective, { static: false })\n  public dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  isDtInitialized:boolean = false\n  public dtTrigger: Subject<any> = new Subject();\n  public orders = [];\n  public editedClient;\n  public tempId: any;\n  public companiesList = [];\n\n  public rows = [];\n  public srch = [];\n  public statusValue;\n  public pipe = new DatePipe(\"en-US\");\n\n  constructor(private modalService: NgbModal,private orderService:OrderService\n    ,private _domSanitizer: DomSanitizer,private router:Router,private route:ActivatedRoute) {\n\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n \n\n  ngOnInit() {\n    this.dtOptions = {\n      // ... skipped ...\n      pageLength: 10,\n      language : {\n        \"emptyTable\": \"ليست هناك بيانات متاحة في الجدول\",\n        \"loadingRecords\": \"جارٍ التحميل...\",\n        \"lengthMenu\": \" _MENU_ \",\n        \"zeroRecords\": \"لم يعثر على أية سجلات\",\n        \"info\": \"إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل\",\n        \"infoEmpty\": \"يعرض 0 إلى 0 من أصل 0 سجل\",\n        \"infoFiltered\": \"(منتقاة من مجموع _MAX_ مُدخل)\",\n        \"search\": \"بحث:\",\n        \"paginate\": {\n            \"first\": \"الأول\",\n            \"previous\": \"السابق\",\n            \"next\": \"التالي\",\n            \"last\": \"الأخير\"\n        },\n        \"aria\": {\n            \"sortAscending\": \": تفعيل لترتيب العمود تصاعدياً\",\n            \"sortDescending\": \": تفعيل لترتيب العمود تنازلياً\"\n        },\n        \"processing\": \"جارٍ المعالجة...\"\n    },\n      dom: \"lfrtip\",\n    };\n\n    this.dtOptions.language.url = \"src/assets/i18n/datatable.ar.json\";\n\n    this.clientId= this.route.snapshot.queryParams[\"id\"];\n    this.getOrders();\n  }\n  getOrders() {\n    this.orderService.getOrdersByDelivery(this.clientId).subscribe(res=>{\n      if (this.isDtInitialized) {\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n          dtInstance.destroy();\n          this.dtTrigger.next();\n        });\n      }else{\n        this.isDtInitialized = true\n        this.dtTrigger.next();\n      }\n      \n      this.orders = res;\n      console.log(this.orders)\n     // this.dtTrigger.next();\n      this.rows = this.orders;\n      this.srch = [...this.rows];\n    });\n   \n  }\n  onEditClient(event){\n\n  }\n\n  onEdit(event){\n    \n    }\n\n    addProduct(){\n    \n    }\n\n}\n\n","<!-- Container-fluid starts-->\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                \n                <div class=\"card-body\">\n                    \n                    <div id=\"batchDelete\" class=\"category-table custom-datatable\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"datatable\"\n                            class=\"table table-striped custom-table datatable\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>{{'Order ID'|translate}}</th>\n                                    <th>{{'Date'|translate}}</th>\n                                    <th>{{'Status'|translate}}</th>\n                                    <th>{{'Shipping'|translate}}</th>\n                                    <th>{{'Total'|translate}}</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let order of orders; let i = index\">\n                                    <td>{{i+1}}</td>\n                                    <td><a routerLink = \"/sales/view-order\" [queryParams]=\"{id: order?.orderId}\">{{order?.orderId}}</a></td>\n                                    <td>{{order?.date}}</td>\n                                    <td>{{order?.status | customStatus |translate}}</td>\n                                    <td>{{order?.shipping| number : '1.2-2'}}</td>\n                                    <td>{{order?.totalAmount| number : '1.2-2'}}</td>\n                                    \n                                </tr>\n                                <tr *ngIf=\"orders.length === 0\">\n                                    <td colspan=\"10\">\n                                        <h5 style=\"text-align: center;\">No data found</h5>\n                                    </td>\n                                   \n                                </tr>\n                            </tbody>\n                        </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends-->","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\n\n\nimport { Observable, combineLatest } from 'rxjs';\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\n\nimport * as dateFns from 'date-fns';\n\nimport { FilterState } from 'src/assets/filter/filter.store';\nimport { IssueStatus, IssueStatusDisplay } from 'src/app/shared/data/issue';\nimport { FilterQuery } from 'src/assets/filter/filter.query';\nimport { IssueUtil } from 'src/app/shared/data/utils/issue';\nimport { ProjectService } from 'src/app/shared/service/project.service';\nimport { Order } from 'src/app/shared/interfaces/order';\n\n@Component({\n  selector: '[app-zone-orders]',\n  templateUrl: './zone-orders.component.html',\n  styleUrls: ['./zone-orders.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n@UntilDestroy()\nexport class ZoneOrdersComponent implements OnInit {\n  @Input() status: IssueStatus;\n  @Input() currentUserId: string;\n  IssueStatusDisplay = IssueStatusDisplay;\n  @Input() orders: Order[] ;\n\n  get ordersCount(): number {\n    return this.orders.length;\n  }\n\n  constructor(private _projectService: ProjectService, private _filterQuery: FilterQuery) {}\n\n  ngOnInit(): void {\n    this._projectService.getProject();\n  \n  }\n\n  drop(event: CdkDragDrop<Order[]>) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      console.log( event.previousIndex, event.currentIndex)\n     \n  }\n\n  filterIssues(order: Order[], filter: FilterState): Order[] {\n    const { onlyMyIssue, ignoreResolved, searchTerm, userIds } = filter;\n    return order.filter((order) => {\n      const isMatchTerm = searchTerm ? IssueUtil.searchString(order.orderId, searchTerm) : true;\n\n     // const isIncludeUsers = userIds.length\n    //    ? order.userIds.some((userId) => userIds.includes(userId))\n       // : true;\n\n    //  const isMyIssue = onlyMyIssue\n      //  ? this.currentUserId && order.userIds.includes(this.currentUserId)\n      //  : true;\n\n      const isIgnoreResolved = ignoreResolved ? order.status !== IssueStatus.DONE : true;\n\n      return isMatchTerm ;//&& isIncludeUsers && isMyIssue && isIgnoreResolved;\n    });\n  }\n\n  isDateWithinThreeDaysFromNow(date: string) {\n    const now = new Date();\n    const inputDate = new Date(date);\n    return dateFns.isAfter(inputDate, dateFns.subDays(now, 3));\n  }\n\n  private updateListPosition(newList: Order[]) {\n    newList.forEach((order, idx) => {\n      const newIssueWithNewPosition = { ...order, listPosition: idx + 1 };\n      //this._projectService.updateIssue(newIssueWithNewPosition);\n    });\n  }\n}","\n <div class=\"status-list\">\n    <div class=\"px-3 pb-4 pt-3 uppercase text-center text-title truncate\">\n        {{ IssueStatusDisplay[status] |translate}}\n        <span class=\"lowercase text-13\">{{ ordersCount }}</span>\n    </div>\n    <div class=\"example-list\"\n         cdkDropList\n         [cdkDropListData]=\"orders\"\n         [id]=\"status\"\n         (cdkDropListDropped)=\"drop($event)\">\n        <div issue-card *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    cdkDragLockAxis=\"y\"\n                    cdkDrag\n                    [cdkDragData]=\"order\">\n</div>\n    </div>\n</div> \n\n\n","\n\nimport { IssuePriority, OrderType } from '../issue';\nimport { IssuePriorityIcon } from '../issue-priority-icon';\n\nexport class IssueUtil {\n  static getIssueTypeIcon(orderType: OrderType): string {\n    return orderType?.toLowerCase();\n  }\n\n  static getIssuePriorityIcon(issuePriority: IssuePriority): IssuePriorityIcon {\n    return new IssuePriorityIcon(issuePriority);\n  }\n\n  static getRandomId(): string {\n    return `${Math.ceil(Math.random() * 8000)}`;\n  }\n\n  static searchString(str: string, searchString: string): boolean {\n    str = str ?? '';\n    searchString = searchString ?? '';\n    return str.trim().toLowerCase().includes(searchString.trim().toLowerCase());\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { AccountDelivery } from 'src/app/shared/interfaces/account-delivery';\nimport { User } from 'src/app/shared/interfaces/user';\nimport { DeliveryService } from 'src/app/shared/service/delivery.service';\nimport { OrderService } from 'src/app/shared/service/order.service';\n\n@Component({\n  selector: 'app-delivery-accounts',\n  templateUrl: './delivery-accounts.component.html',\n  styleUrls: ['./delivery-accounts.component.scss']\n})\nexport class DeliveryAccountsComponent implements OnInit {\n\n  clientId:any;\n  public closeResult: string;\n  @ViewChild(DataTableDirective, { static: false })\n  public dtElement: DataTableDirective;\n  dtOptions: DataTables.Settings = {};\n  isDtInitialized:boolean = false\n  public dtTrigger: Subject<any> = new Subject();\n  public orders:AccountDelivery[]=[];\n  public editedClient;\n  public tempId: any;\n  public companiesList = [];\n  public dbAcoounts:AccountDelivery[]=[];\n  public rows = [];\n  public srch = [];\n  public statusValue;\n  public pipe = new DatePipe(\"en-US\");\n\n  constructor(private modalService: NgbModal,private deliveryService:DeliveryService\n    ,private _domSanitizer: DomSanitizer,private router:Router,private route:ActivatedRoute) {\n     \n\n  }\n\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n \n\n  ngOnInit() {\n    this.dtOptions = {\n      // ... skipped ...\n      pageLength: 10,\n      language : {\n        \"emptyTable\": \"ليست هناك بيانات متاحة في الجدول\",\n        \"loadingRecords\": \"جارٍ التحميل...\",\n        \"lengthMenu\": \" _MENU_ \",\n        \"zeroRecords\": \"لم يعثر على أية سجلات\",\n        \"info\": \"إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل\",\n        \"infoEmpty\": \"يعرض 0 إلى 0 من أصل 0 سجل\",\n        \"infoFiltered\": \"(منتقاة من مجموع _MAX_ مُدخل)\",\n        \"search\": \"بحث:\",\n        \"paginate\": {\n            \"first\": \"الأول\",\n            \"previous\": \"السابق\",\n            \"next\": \"التالي\",\n            \"last\": \"الأخير\"\n        },\n        \"aria\": {\n            \"sortAscending\": \": تفعيل لترتيب العمود تصاعدياً\",\n            \"sortDescending\": \": تفعيل لترتيب العمود تنازلياً\"\n        },\n        \"processing\": \"جارٍ المعالجة...\"\n    },\n      dom: \"lfrtip\",\n    };\n\n    this.dtOptions.language.url = \"src/assets/i18n/datatable.ar.json\";\n\n    this.clientId= this.route.snapshot.queryParams[\"id\"];\n    this.getDBoyes();\n  }\n  getDBoyes() {\n    this.deliveryService.getAllDeliveryBoyAccounting(this.clientId).subscribe(res=>{\n     \n      if (this.isDtInitialized) {\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n          dtInstance.destroy();\n          this.dtTrigger.next();\n        });\n      }else{\n        this.isDtInitialized = true\n        this.dtTrigger.next();\n      }\n      \n      this.orders = res;\n      this.rows = this.orders;\n      this.srch = [...this.rows];\n    });\n   \n  }\n  onEditClient(event){\n\n  }\n\n  onEdit(event){\n    \n    }\n\n    addProduct(){\n    \n    }\n\n}\n\n","<!-- Container-fluid starts-->\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                \n                <div class=\"card-body\">\n                    \n                    <div id=\"batchDelete\" class=\"category-table custom-datatable\">\n                        <div class=\"table-responsive\">\n                            <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"datatable\"\n                            class=\"table table-striped custom-table datatable\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>{{'Order Count'|translate}}</th>\n                                    <th>{{'Total'|translate}}</th>\n                                    <th>{{'Status'|translate}}</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let order of orders; let i = index\">\n                                    <td>{{i+1}}</td>\n                                    <td>{{order?.orderCount}}</td>\n                                    <td>{{order?.total| number : '1.2-2'}}</td>\n                                    <td><a *ngIf=\"!order?.closed\" style=\"color: crimson;\">{{'Not Collected'|translate}}</a><a *ngIf=\"order?.closed\" style=\"color: rgb(58, 189, 7);\">{{'Collected'|translate}}</a></td>\n                                    \n                                </tr>\n                                <tr *ngIf=\"orders.length === 0\">\n                                    <td colspan=\"10\">\n                                        <h5 style=\"text-align: center;\">No data found</h5>\n                                    </td>\n                                   \n                                </tr>\n                            </tbody>\n                        </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends-->","\nimport { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { JProject } from './project';\n\nexport type ProjectState = JProject;\n\nfunction createInitialState(): ProjectState {\n  return {\n    issues: [],\n    users: []\n  } as ProjectState;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n@StoreConfig({\n  name: 'project'\n})\nexport class ProjectStore extends Store<ProjectState> {\n  constructor() {\n    super(createInitialState());\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, Input, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { ChatList } from 'src/app/shared/interfaces/chat-list';\nimport { ChatMs } from 'src/app/shared/interfaces/chat-ms';\nimport { Customer } from 'src/app/shared/interfaces/customer';\nimport { DeliveryBoy } from 'src/app/shared/interfaces/delivery-boy';\nimport { Message } from 'src/app/shared/interfaces/message';\nimport { AuthService } from 'src/app/shared/service/auth.service';\nimport { DeliveryService } from 'src/app/shared/service/delivery.service';\nimport { MessengerService } from 'src/app/shared/service/messenger.service';\n\n@Component({\n  selector: 'app-zone-chat',\n  templateUrl: './zone-chat.component.html',\n  styleUrls: ['./zone-chat.component.scss']\n})\nexport class ZoneChatComponent implements OnInit {\n\n  chatsList: ChatList[] = [];\n  chats: Message[] ;\n  chatsAfter:Message[]=[];\n  messageChat = \"\";\n  currentIndex = \"\";\n  dBoy:DeliveryBoy;\n  currentChat:ChatList;\n  members;\n  id:any;\n  chatMs:ChatList;\n  userID:any;\n  customer:Customer;\n  noSeenChats:Message[]=[];\n\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\n  @ViewChild(\"imagePond\", { static: false }) imagePond: any;\n  public pipe = new DatePipe(\"en-US\");\n  todosProyectos: AngularFireList<any>;\n  proyectos: Observable<Message[]>;\n  pondOptions = {\n    class: \"my-filepond\",\n    multiple: true,\n    labelIdle: \"Browse and Drop files here\",\n    acceptedFileTypes: \"image/jpeg, image/png\",\n  };\n  private chatSubscription: Subscription;\n\n  pondFiles = [\"assets/img/logo2.png\"];\n  public pageNo: number = 1;\n  public paginate: any = {};\n @Input() stateId:string;\n\n  constructor(private route: ActivatedRoute, private router: Router,private database: AngularFireDatabase,private ngZone: NgZone\n    ,private messengerService:MessengerService,private authService:AuthService,private deliveryService:DeliveryService) {\n    window.onresize = (e) => {\n      this.ngZone.run(() => {\n        this.innerHeight = window.innerHeight + 'px';\n      });\n    };\n    this.getScreenHeight();\n  \n    \n    \n  }\n\n  ngOnInit() {\n \n \n     \n        this.messengerService.getZoneChatsReciver(this.stateId).subscribe(res=>{\n          this.chatsList=res;\n          \n         \n        });\n        this.scrollToBottom();        \n \n    \n  }\n  \n // product Pagination\n setPage(page: number) {\n   \n  this.router.navigate(['chat'], { queryParams: { page: page },replaceUrl: true})\n}\n\nsendMessage() {\n\n  if(this.messageChat!=''){\n    const time = new Date().getTime();\n    const date = this.pipe.transform(new Date(), 'hh:MM a yyyy-MM-dd');\n    const obj = {\n      id:\"\"+time,\n      isseen:false,\n      sender:\"0102\",\n      receiver:this.chatMs.id,\n      type:this.chatMs.type,\n      time:date,\n      sort:\"\"+time,\n      with:\"shop\",\n      ref:this.chatMs.ref,\n      message: this.messageChat,\n      status: \"sent\",\n    };\n\n    const obj1={\n      block: \"false\",\n      id: this.chatMs.id,\n      last_msg: this.messageChat,\n      name: this.chatMs.name,\n      ref: this.chatMs.ref,\n      timeStamp: \"\"+time,\n      type: this.chatMs.type,\n      notSeen: false,\n      zone: this.stateId\n    }\n    const obj2={\n      block: \"false\",\n      id: \"0102\",\n      last_msg: this.messageChat,\n      name: \"Shoppy\",\n      ref: this.chatMs.ref,\n      timeStamp: \"\"+time,\n      type: this.chatMs.type,\n      notSeen: true,\n      zone: this.stateId\n    }\n    this.messengerService.sendMessage(obj);\n    this.messengerService.sendChatMsUser(obj2,this.chatMs.id);\n    this.messengerService.sendChatMsShop(obj1);\n   \n    this.messageChat = \"\";\n    this.scrolltoB()\n  }\n \n}\nscrolltoB() {\n  var element = document.getElementById(\"chats\");\n  element.scrollIntoView();\n  element.scrollIntoView(false);\n  element.scrollIntoView({block: \"end\"});\n  element.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});  \n\n}\npublic innerHeight: any;\n\n  getScreenHeight() {\n    this.innerHeight = window.innerHeight + 'px';\n  }\n\n \n\n  onResize(event) {\n    this.innerHeight = event.target.innerHeight + 'px';\n  }\n\n\n  ngAfterViewChecked() {        \n   this.scrollToBottom();        \n}\n \n  setActiveChat(chat: ChatList): void {\n    this.currentChat = chat;\n    this.currentIndex = chat.id;\n    this.getChatMs(chat.id);\n    this.getChat(chat.ref);\n    if(chat.type =='support'){\n      this.getDelivery(chat.id);\n    }else{\n      this.getUser(chat.id);\n    }\n    \n  }\n  getDelivery(id: string) {\n   this.deliveryService.getDB(id).subscribe(res=>{\n     this.dBoy = res;\n   })\n  }\n\n  getChat(id: any) {\n    this.chatSubscription = this.messengerService.getChats(id).subscribe(res=>{\n       this.chats=res;\n       this.noSeenChats = this.chats.filter(chat=>!chat.isseen && chat.receiver ==\"0102\");\n       console.log(this.noSeenChats)\n       this.seenMessage(this.noSeenChats);\n       if(this.currentIndex == res[0].sender)\n         this.seenAllMessage(res[0].sender)\n       this.scrollToBottom();\n       if(this.chatsAfter.length<this.chats.length){\n       \n        this.chatsAfter = this.chats;\n        this.scrollToBottom();\n      }\n     });\n     \n     \n    \n   }\n  \n   seenMessage(chats:Message[]) {\n    chats.forEach(element => {\n      this.database.object('Chats/'+element.id+'/isseen').set(true);\n    });\n\n   }\n   seenAllMessage(chatId:string) {\n    this.database.object('Chatlist/0102/'+chatId+'/notSeen').set(false);\n   }\n  getChatMs(userID: any) {\n    this.messengerService.getChatMs(userID).subscribe(chatMs=>this.chatMs=chatMs);\n    //this.scrolltoB();\n   }\n \n   getUser(userID: any) {\n    // this.authService.getCustomer(userID).subscribe(customer=>this.customer=customer);\n \n    }\n \n    scrollToBottom(): void {\n      try {\n         // this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n          this.myScrollContainer.nativeElement.scrollIntoView();\n          this.myScrollContainer.nativeElement.scrollIntoView(false);\n          this.myScrollContainer.nativeElement.scrollIntoView({block: \"end\"});\n          this.myScrollContainer.nativeElement.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});  \n      } catch(err) { }                 \n  }\n \n  ngOnDestroy(): void {\n    if(this.chatSubscription!=null)\n    this.chatSubscription.unsubscribe();\n    console.log(\"closed\");\n  }\n\n}\n\n","\n    <div class=\"flex col-xl-12 w-full h-full full-height py-8 pl-8 pr-6\">\n        <div class=\"small-gap\"></div>\n        <div class=\"col-md-4 \">\n          <ul class=\"list-group\">\n            <li\n              class=\"list-group-item\"\n              *ngFor=\"let item of chatsList\"\n              [class.active]=\"item.id == currentIndex\"\n              (click)=\"setActiveChat(item)\"\n            >\n            <div class=\"user-card\">\n            <div class=\"chat-content\">\n                <div *ngIf=\"item?.type == 'support'\" class=\"dv_icon\"><img style=\"height: 30px;width: 30px; \" src=\"assets/images/dashboard/motorcycle.png\"></div>\n                <h4>{{ item.name }}  </h4>\n                <p>{{ item.last_msg }}</p>\n                <span class=\"chat-time\">{{item.timeStamp|dateAgo:'ar' |translate}}</span>\n                <div *ngIf = \"item?.notSeen\" class=\"mr-1 text-textMedium not_seen\" \n                >\n                </div>\n            </div>\n       \n        </div>\n            </li>\n          </ul>\n         \n        </div>\n        <div class=\"small-gap\"></div>\n        <div class=\"col-md-8\" *ngIf=\"chats\" >\n            <div class=\"chat-window\">\n                <div class=\"fixed-header\">\n                    <div class=\"navbar\">\n                        <div class=\"user-details\">\n                            \n                            <div class=\"user-info float-left\">\n                                <a *ngIf=\"chatMs.type !='support'\" routerLink = \"/customers/view-customer\" [queryParams]=\"{id: chatMs?.id}\" [title]=\"chatMs?.name\" class=\"text-white\" target=\"_blank\"><span>{{ chatMs?.name }}</span></a>\n                                <a *ngIf=\"chatMs.type =='support'\" routerLink = \"/delivery/view-delivery-boy\" [queryParams]=\"{id: chatMs?.id}\" [title]=\"chatMs?.name\" class=\"text-white\" target=\"_blank\"><span>{{ chatMs?.name }}</span></a>\n                            </div>\n                        </div>\n                        \n                        \n                    </div>\n                </div>\n                <div class=\"chat-contents\">\n                    <div class=\"chat-content-wrap\">\n                        <div class=\"chat-wrap-inner\">\n                            <div class=\"chat-box\" id=\"chats\" style=\"overflow: scroll; height: xyz;\" #scrollMe [scrollTop]=\"scrollMe.scrollHeight\" >\n                                <div class=\"chats\" >\n                               \n                                    <div class=\"chat\" [ngClass]=\"item.status === 'sent' ? 'chat-right' : 'chat-left'\"\n                                        *ngFor=\"let item of chats\">\n                                        <div class=\"chat-avatar\" *ngIf=\"item.status === 'received'\">\n                                            <a href=\"javascript:\" class=\"avatar\">\n                                                <img alt=\"\" src=\"assets/images/user.png\">\n                                            </a>\n                                        </div>\n                                        <div class=\"chat-body\">\n                                            <div class=\"chat-bubble\">\n                                                <div *ngIf=\"item.with !='complain'\" class=\"chat-content\">\n                                                    <p style=\"white-space: pre-line\">{{ item.message }}</p>\n                                                    <span class=\"chat-time\">{{item.sort|dateAgo:'ar' |translate}}</span>\n                                                </div>\n                                                <div *ngIf=\"item.with =='complain'\" class=\"chat-content\" >\n                                                    <a routerLink = \"/sales/view-order\"  [queryParams]=\"{id: item.order_number}\" target=\"_blank\"><p style=\"white-space: pre-line\">{{ item.message }}</p></a>\n                                                    <span class=\"chat-time\">{{item.sort|dateAgo:'ar' |translate}}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"chat-footer\">\n                    <div class=\"message-bar\">\n                        <div class=\"message-inner\">\n                            <a class=\"link attach-icon\" href=\"javascript:\" data-toggle=\"modal\" data-target=\"#drag_files\"><img\n                                    src=\"assets/img/attachment.png\" alt=\"\"></a>\n                            <div class=\"message-area\">\n                                <div class=\"input-group\">\n                                    <textarea class=\"form-control\" placeholder=\"{{'Type message...'|translate}}\"\n                                        [(ngModel)]=\"messageChat\"></textarea>\n                                    <span class=\"input-group-append\">\n                                        <a class=\"btn btn-chat\" type=\"button\" (click)=\"sendMessage()\"><i\n                                                class=\"fa fa-send\"></i></a>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n      \n          \n        </div>\n        <div *ngIf=\"!chats\">\n            <br />\n            <p>Please click on a device...</p>\n          </div>\n      </div>\n    <div class=\"vertical-height\"></div>\n     \n                            \n                               \n                           \n                          \n","import { Injectable } from '@angular/core';\nimport { Store, StoreConfig } from '@datorama/akita';\n\nexport interface FilterState {\n  searchTerm: string;\n  userIds: string[];\n  onlyMyIssue: boolean;\n  ignoreResolved: boolean;\n}\n\nexport function createInitialFilterState(): FilterState {\n  return {\n    searchTerm: '',\n    userIds: [],\n    onlyMyIssue: false,\n    ignoreResolved: false\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n@StoreConfig({\n  name: 'filter'\n})\nexport class FilterStore extends Store<FilterState> {\n  constructor() {\n    super(createInitialFilterState());\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'issue-loader',\n  templateUrl: './issue-loader.component.html',\n  styleUrls: ['./issue-loader.component.scss']\n})\nexport class IssueLoaderComponent {\n  constructor() {}\n}\n","<div class=\"p-10\">\n    <content-loader [backgroundColor]=\"'#f3f3f3'\" [foregroundColor]=\"'#ecebeb'\" [viewBox]=\"'0 0 940 300'\">\n        <svg:rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"627\" height=\"24\" />\n        <svg:rect x=\"0\" y=\"29\" rx=\"3\" ry=\"3\" width=\"506\" height=\"24\" />\n        <svg:rect x=\"0\" y=\"77\" rx=\"3\" ry=\"3\" width=\"590\" height=\"16\" />\n        <svg:rect x=\"0\" y=\"100\" rx=\"3\" ry=\"3\" width=\"627\" height=\"16\" />\n        <svg:rect x=\"0\" y=\"123\" rx=\"3\" ry=\"3\" width=\"480\" height=\"16\" />\n        <svg:rect x=\"0\" y=\"187\" rx=\"3\" ry=\"3\" width=\"370\" height=\"16\" />\n        <svg:circle cx=\"18\" cy=\"239\" r=\"18\" />\n        <svg:rect x=\"46\" y=\"217\" rx=\"3\" ry=\"3\" width=\"548\" height=\"42\" />\n        <svg:rect x=\"683\" y=\"3\" rx=\"3\" ry=\"3\" width=\"135\" height=\"14\" />\n        <svg:rect x=\"683\" y=\"33\" rx=\"3\" ry=\"3\" width=\"251\" height=\"24\" />\n        <svg:rect x=\"683\" y=\"90\" rx=\"3\" ry=\"3\" width=\"135\" height=\"14\" />\n        <svg:rect x=\"683\" y=\"120\" rx=\"3\" ry=\"3\" width=\"251\" height=\"24\" />\n        <svg:rect x=\"683\" y=\"177\" rx=\"3\" ry=\"3\" width=\"135\" height=\"14\" />\n        <svg:rect x=\"683\" y=\"207\" rx=\"3\" ry=\"3\" width=\"251\" height=\"24\" />\n    </content-loader>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgxImageCompressService } from 'ngx-image-compress';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { DeliveryBoy } from 'src/app/shared/interfaces/delivery-boy';\nimport { Permission } from 'src/app/shared/interfaces/permission';\nimport { Shop } from 'src/app/shared/interfaces/shop';\nimport { State } from 'src/app/shared/interfaces/state';\nimport { Town } from 'src/app/shared/interfaces/town';\nimport { User } from 'src/app/shared/interfaces/user';\nimport { AuthService } from 'src/app/shared/service/auth.service';\nimport { DataService } from 'src/app/shared/service/data.service';\nimport { ProductService } from 'src/app/shared/service/product.service';\ndeclare const $: any;\n@Component({\n  selector: 'app-add-delivery-boy',\n  templateUrl: './add-delivery-boy.component.html',\n  styleUrls: ['./add-delivery-boy.component.scss']\n})\nexport class AddDeliveryBoyComponent implements OnInit {\n\n  file: any;\n  localUrl: any;\n  localCompressedURl:any;\n  sizeOfOriginalImage:number;\n  sizeOFCompressedImage:number;\n  downloadURL: Observable<string>;\n  public accountForm: FormGroup;\n  public permissionForm: FormGroup;\n  public registerErrors: string;\n  user:DeliveryBoy = new DeliveryBoy();\n  selectedRole:boolean =false;\n  fishPhoto='assets/images/pro3/1.jpg'\n  idPhoto1='assets/images/pro3/1.jpg';\n  idPhoto2='assets/images/pro3/1.jpg';\n  dLPhoto='assets/images/pro3/1.jpg';\n  mLPhoto='assets/images/pro3/1.jpg';\n  public mode: 'edit' | 'add';\n  roles=[{name:\"Motorcycle\"},{name:\"Bike\"}];\n  permission : Permission= new Permission();\n  shops:Shop[]=[]\n  id:any;\n  imageType = \"\";\n  selectedTown='';\n  states:State[]=[];\n  towns:Town[]=[];\n  busy:boolean = false;\n  ATypes = [{name:\"By Hour\"},{name:\"Commission\"}];\n  constructor(private formBuilder: FormBuilder,private authService:AuthService,private toastr:ToastrService,\n    private router:Router,private route:ActivatedRoute,private imageCompress: NgxImageCompressService,private productService:ProductService\n    ,private db: AngularFireDatabase , private storage: AngularFireStorage,private dataService:DataService) {\n    this.createAccountForm();\n    this.getTowns()\n  }\n  getStates(){\n    this.dataService.getStates(this.selectedTown).subscribe(states=>{\n      this.states = states;\n    })\n  }\n\n  progress(){\n    document.getElementById(\"dialog\").click();\n  }\n\n  getTowns(){\n    this.dataService.getTowns().subscribe(towns=>{\n      this.towns = towns;\n    })\n  }\n  createAccountForm() {\n    this.accountForm = this.formBuilder.group({\n      idNumber: [this.user && this.user.idNumber,Validators.required],\n      vType: [this.user && this.user.vType,Validators.required],\n      name: [this.user && this.user.name,Validators.required],\n      phone: [this.user && this.user.phone,Validators.required],\n      address: [this.user && this.user.address,Validators.required],\n      email: [this.user && this.user.email,Validators.required],\n      passwored: [this.user && this.user.passwored,Validators.required],\n      confirmPwd: [],\n     state: [this.user && this.user.state,Validators.required],\n     town: [this.user && this.user.town,Validators.required],\n     idPhoto1: [this.user && this.user.idPhoto1],\n     idPhoto2: [this.user && this.user.idPhoto2],\n     mLPhoto: [this.user && this.user.mLPhoto],\n     fishPhoto: [this.user && this.user.fishPhoto],\n     dLPhoto: [this.user && this.user.dLPhoto]\n    })\n  }\n \n\n  selectFile(event: any,type:string) {\n    this.progress();\n    var  fileName : any;\n    this.imageType = type;\n    this.file = event.target.files[0];\n    fileName = this.file['name'];\n    if (event.target.files && event.target.files[0]) {\n       var reader = new FileReader();\n       reader.onload = (event: any) => {\n       this.localUrl = event.target.result;\n       this.compressFile(this.localUrl,fileName)\n       }\n       reader.readAsDataURL(event.target.files[0]);\n     }\n    }\n    imgResultBeforeCompress:string;\n    imgResultAfterCompress:string;\n\n\n    compressFile(image,fileName) {\n        var orientation = -1;\n        this.sizeOfOriginalImage = this.imageCompress.byteCount(image)/(1024*1024);\n        console.warn('Size in bytes is now:',  this.sizeOfOriginalImage);\n        this.imageCompress.compressFile(image, orientation, 200, 200).then(\n        result => {\n          this.imgResultAfterCompress = result;\n         this.localCompressedURl = result;\n    \n         this.sizeOFCompressedImage = this.imageCompress.byteCount(result)/(1024*1024)\n          console.warn('Size in bytes after compression:',  this.sizeOFCompressedImage);\n         // create file from byte\n         const imageName = fileName;\n        // call method that creates a blob from dataUri\n        const imageBlob = this.dataURItoBlob(this.imgResultAfterCompress.split(',')[1]);\n        //imageFile created below is the new compressed file which can be send to API in form data\n        const imageFile = new File([result], imageName, { type: 'image/jpeg' });\n        this.onFileSelected(imageBlob)\n      });}\n    dataURItoBlob(dataURI) {\n        const byteString = window.atob(dataURI);\n        const arrayBuffer = new ArrayBuffer(byteString.length);\n        const int8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < byteString.length; i++) {\n        int8Array[i] = byteString.charCodeAt(i);\n    }\n        const blob = new Blob([int8Array], { type: 'image/jpeg' });\n        return blob;\n    }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.queryParams[\"id\"];\n    if(this.id){\n      this.mode='edit';\n      this.authService.getDB(this.id).subscribe(user=>{\n        this.user = user;\n        this.idPhoto1 = this.user.idPhoto1||'assets/images/pro3/1.jpg';\n        this.idPhoto2 = this.user.idPhoto2||'assets/images/pro3/1.jpg';\n        this.mLPhoto = this.user.mLPhoto||'assets/images/pro3/1.jpg';\n        this.dLPhoto = this.user.dLPhoto||'assets/images/pro3/1.jpg';\n        this.fishPhoto = this.user.fishPhoto||'assets/images/pro3/1.jpg';\n        this.selectedTown = this.user.town;\n        this.busy = this.user.busy;\n        this.getStates();\n        console.log(this.user)\n        this.createAccountForm();\n      })\n    }else{\n      this.mode='add';\n    }\n  }\n\n  addUser(){\n    if (!this.accountForm.valid) {\n      this.toastr.error(\"\", \"Please enter mandatory field!\");\n    }else if (this.mode=='add' && this.accountForm.value.passwored !== this.accountForm.value.confirmPwd) {\n      this.registerErrors = 'Passwords don\\'t match!';\n      \n    } else {\n      this.user.name = this.accountForm.value.name;\n      this.user.phone = this.accountForm.value.phone;\n      this.user.idNumber = this.accountForm.value.idNumber;\n      this.user.vType = this.accountForm.value.vType;\n      this.user.aType = this.accountForm.value.aType;\n      this.user.passwored = this.accountForm.value.passwored;\n      this.user.email = this.accountForm.value.email;\n      this.user.address = this.accountForm.value.address;\n      this.user.state = this.accountForm.value.state;\n      this.user.town = this.accountForm.value.town;\n      console.log(this.user)\n      this.authService.updateNewDB(this.user) \n      this.toastr.success(\"User Created \");\n      this.router.navigate(['/delivery/list-delivery-boys'])\n    }\n  }\n\n  private createId(): string {\n    const randomId = Math.floor(Math.random() * new Date().getTime());\n    let id = this.id || randomId+\"\";\n    if (id === \"1\") {\n      id = randomId+\"\";\n    }\n    return id;\n  }\n\n  onFileSelected(url) {\n    var n = Date.now();\n    const file = url;\n    console.log(url)\n    const filePath = `RoomsImages/${n}`;\n    const fileRef = this.storage.ref(filePath);\n    const task = this.storage.upload(`RoomsImages/${n}`, file);\n    task\n      .snapshotChanges()\n      .pipe(\n        finalize(() => {\n          this.downloadURL = fileRef.getDownloadURL();\n          this.downloadURL.subscribe(url => {\n            if (url) {\n              console.log(this.imageType)\n                if(this.imageType == \"idPhoto1\"){\n                  this.idPhoto1=url;\n                  this.user.idPhoto1 = url;\n                }else if(this.imageType == \"idPhoto2\"){\n                  this.idPhoto2=url;\n                  this.user.idPhoto2 = url;\n                  \n                }else if(this.imageType == \"dLPhoto\"){\n                  this.dLPhoto=url;\n                  this.user.dLPhoto = url;\n                  \n                }else if(this.imageType == \"mLPhoto\"){\n                  this.mLPhoto=url;\n                  this.user.mLPhoto = url;\n                  \n                }else {\n                  this.fishPhoto=url;\n                  this.user.fishPhoto = url;\n                  \n                }\n                $(\"#progress\").modal(\"hide\");\n             \n            }\n          });\n        })\n      )\n      .subscribe(url => {\n        if (url) {\n          console.log(url);\n        }\n      });\n  }\n\n  \n\n   \n}\n\n","<!-- Container-fluid starts-->\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <button data-toggle=\"modal\"\n            data-target=\"#progress\" class=\"btn btn-primary\" data-backdrop=\"static\" id=\"dialog\" hidden ></button>\n            <div class=\"card tab2-card\">\n                <div class=\"card-header\">\n                    <h5> {{'Add Delivery Boy'|translate}}</h5>\n                </div>\n                <div class=\"card-body tab2-card col-sm-8\">\n                    <ngb-tabset class=\"tab-coupon\">\n                        <ngb-tab title=\"{{'Account'|translate}}\">\n                            <ng-template ngbTabContent>                                                                                                                                        <div class=\"tab-pane fade active show\" id=\"account\" role=\"tabpanel\"\n                                        aria-labelledby=\"account-tab\">\n                                    <form [formGroup]=\"accountForm\" class=\"needs-validation user-add\" novalida>\n                                        <h4>{{'Account Details'|translate}}</h4>\n                                        <div class=\"form-group row\">\n                                            <label for=\"exampleFormControlSelect2\" class=\"col-xl-3 col-sm-4 mb-0\"><span>*</span>{{'Town :'|translate}}</label>\n                                            <select class=\"form-control digits col-xl-8 col-sm-7\"\n                                                id=\"exampleFormControlSelect2\" [(ngModel)]= \"selectedTown\" formControlName=\"town\"  (change)=\"getStates()\">\n                                                <option *ngFor=\"let town of towns\" [value]=\"town.id\" selected = \"town.id == user.town\">\n                                                    {{town.name}}\n                                                </option>\n                                            </select>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"exampleFormControlSelect2\" class=\"col-xl-3 col-sm-4 mb-0\"><span>*</span>{{'State :'|translate}}</label>\n                                            <select class=\"form-control digits col-xl-8 col-sm-7\"\n                                                id=\"exampleFormControlSelect2\" formControlName=\"state\" >\n                                                <option *ngFor=\"let state of states\" [value]=\"state.id\" selected = \"state.id == user.state\">\n                                                    {{state.name}}\n                                                </option>\n                                            </select>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"exampleFormControlSelect2\" class=\"col-xl-3 col-sm-4 mb-0\"><span>*</span>{{'Type :'|translate}}</label>\n                                            <select class=\"form-control digits col-xl-8 col-sm-7\"\n                                                id=\"exampleFormControlSelect2\"  formControlName=\"vType\">\n                                                <option *ngFor=\"let role of roles\" [value]=\"role.name\">\n                                                    {{role.name|translate}}\n                                                </option>\n                                            </select>\n                                        </div>\n                                      \n                                        \n                                        <div class=\"form-group row\">\n                                            <label for=\"validationCustom0\" class=\"col-xl-3 col-md-4\"><span>*</span>\n                                                {{'Name'|translate}}</label>\n                                            <input class=\"form-control col-xl-8 col-md-7\" id=\"validationCustom0\"\n                                                type=\"text\"  formControlName=\"name\" required=\"\">\n                                        </div>\n                                       \n                                        <div class=\"form-group row\">\n                                            <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"><span>*</span>\n                                                {{'Phone'|translate}}</label>\n                                            <input class=\"form-control col-xl-8 col-md-7\" id=\"validationCustom2\"\n                                                type=\"text\"  formControlName=\"phone\" required=\"\">\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"><span>*</span>\n                                                {{'Email'|translate}}</label>\n                                            <input class=\"form-control col-xl-8 col-md-7\" id=\"validationCustom3\"\n                                                type=\"text\"  formControlName=\"email\" required=\"\">\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"validationCustom2\" class=\"col-xl-3 col-md-4\"><span>*</span>\n                                                {{'Address'|translate}}</label>\n                                            <input class=\"form-control col-xl-8 col-md-7\" id=\"validationCustom3\"\n                                                type=\"text\"  formControlName=\"address\" required=\"\">\n                                        </div>\n                                       \n                                        <div class=\"form-group row\">\n                                            <label for=\"validationCustom1\" class=\"col-xl-3 col-md-4\"><span>*</span>\n                                                {{'ID Number'|translate}}</label>\n                                            <input class=\"form-control col-xl-8 col-md-7\" id=\"validationCustom1\"\n                                                type=\"text\"  formControlName=\"idNumber\" required=\"\">\n                                        </div>\n                                        \n                                        \n                                        <div class=\"form-group row\">\n                                            <label for=\"validationCustom3\" class=\"col-xl-3 col-md-4\"><span>*</span>\n                                                {{'Password'|translate}}</label>\n                                            <input class=\"form-control col-xl-8 col-md-7\" id=\"validationCustom4\"\n                                                type=\"password\"  formControlName=\"passwored\" required=\"\">\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"validationCustom4\" class=\"col-xl-3 col-md-4\"><span>*</span>\n                                                {{'Confirm Password'|translate}}</label>\n                                            <input class=\"form-control col-xl-8 col-md-7\" id=\"validationCustom5\"\n                                                type=\"password\"  formControlName=\"confirmPwd\" >\n                                        </div>\n                                    </form>\n                                </div>\n                            </ng-template>\n                        </ngb-tab>\n                        <ngb-tab>\n                            <ng-template ngbTabTitle>{{'Images'|translate}}\n                                <ng-template ngbTabContent>\n                                        \n                                        <div class=\"permission-block\">\n                                            <div class=\"attribute-blocks\">\n                                                <h4 style=\"margin-bottom: 20px;\">{{'Delivery Boy Papers  Images'|translate}} </h4>\n                                                <div class=\"row\">\n                                                    <div class=\"col-xl-3 col-sm-4\">\n                                                        <label>{{'ID Image 1'|translate}}</label>\n                                                    </div>\n                                                    <div class=\"col-xl-9 col-sm-8\">\n                                                        <div>\n                                                            <img [src]=\"idPhoto1\" alt=\"\" class=\"img-fluid image_zoom_1 col-xl-8 db-image\">\n                                                            <input accept=\".jpg,.png,.jpeg\" class=\"form-control col-xl-8 col-sm-7\" type=\"file\" \n                                             placeholder=\"{{'Enter Image'|translate}}\" id=\"photo1\"  (change)=\"selectFile($event,'idPhoto1')\"   required>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-xl-3 col-sm-4\">\n                                                        <label>{{'ID Image 2'|translate}}</label>\n                                                    </div>\n                                                    <div class=\"col-xl-9 col-sm-8\">\n                                                        <div>\n                                                            <img [src]=\"idPhoto2\" alt=\"\" class=\"img-fluid image_zoom_1 col-xl-8 db-image\">\n                                                            <input class=\"form-control col-xl-8 col-sm-7\" type=\"file\" \n                                             placeholder=\"{{'Enter Image'|translate}}\" accept=\".jpg,.png,.jpeg\" id=\"photo2\"  (change)=\"selectFile($event,'idPhoto2')\"  required>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-xl-3 col-sm-4\">\n                                                        <label>{{'Driving License Image'|translate}}</label>\n                                                    </div>\n                                                    <div class=\"col-xl-9 col-sm-8\">\n                                                        <div>\n                                                            <img [src]=\"dLPhoto\" alt=\"\" class=\"img-fluid image_zoom_1 col-xl-8 db-image\"> \n                                                            <input class=\"form-control col-xl-8 col-sm-7\" type=\"file\" \n                                             placeholder=\"{{'Enter Image'|translate}}\" accept=\".jpg,.png,.jpeg\" id=\"photo3\"  (change)=\"selectFile($event,'dLPhoto')\" required>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-xl-3 col-sm-4\">\n                                                        <label>{{'Vehicle license Image'|translate}}</label>\n                                                    </div>\n                                                    <div class=\"col-xl-9 col-sm-8\">\n                                                        <div>\n                                                            <img [src]=\"mLPhoto\" alt=\"\" class=\"img-fluid image_zoom_1 col-xl-8 db-image\">\n                                                            <input class=\"form-control col-xl-8 col-sm-7\" type=\"file\" \n                                             placeholder=\"{{'Enter Image'|translate}}\" accept=\".jpg,.png,.jpeg\"  id=\"photo4\"  (change)=\" selectFile($event,'mLPhoto')\"  required>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-xl-3 col-sm-4\">\n                                                        <label>{{'Fish Image'|translate}}</label>\n                                                    </div>\n                                                    <div class=\"col-xl-9 col-sm-8\">\n                                                        <div>\n                                                        <img [src]=\"fishPhoto\" alt=\"\" class=\"img-fluid image_zoom_1 col-xl-8 db-image\">\n                                                        <input class=\"form-control col-xl-8 col-sm-7\" type=\"file\" \n                                             placeholder=\"{{'Enter Image'|translate}}\" accept=\".jpg,.png,.jpeg\" id=\"photo5\"  (change)=\"selectFile($event,'fishPhoto')\"  required>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                               \n                                            </div>\n                                           \n                                        </div>\n                                  \n                                </ng-template>\n                            </ng-template>\n                        </ngb-tab>\n                    </ngb-tabset>\n                    <div class=\"pull-right\">\n                        <div class=\"form-group has-danger\">\n                            <div class=\"form-control-feedback\">\n                              {{ registerErrors }}\n                            </div>\n                          </div>\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"addUser()\">{{'Save'|translate}}</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends-->\n<div class=\"modal custom-modal fade\" id=\"progress\" role=\"dialog\">\n    <div class=\"modal-dialog modal-dialog-centered\">\n     <div class=\"progress-content modal-dialog-centered\" >\n\n        <mat-spinner></mat-spinner>\n     \n      </div>\n       </div>\n   </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-zone-hours',\n  templateUrl: './zone-hours.component.html',\n  styleUrls: ['./zone-hours.component.scss']\n})\nexport class ZoneHoursComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>zone-hours works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order } from 'src/app/shared/interfaces/order';\nimport { State } from 'src/app/shared/interfaces/state';\nimport { Town } from 'src/app/shared/interfaces/town';\nimport { User } from 'src/app/shared/interfaces/user';\nimport { DataService } from 'src/app/shared/service/data.service';\nimport { OrderService } from 'src/app/shared/service/order.service';\n\n@Component({\n  selector: 'app-orders-dashboard',\n  templateUrl: './orders-dashboard.component.html',\n  styleUrls: ['./orders-dashboard.component.scss']\n})\nexport class OrdersDashboardComponent implements OnInit {\n \n  selectedTown='';\n  states:State[]=[];\n  selectedState:any;\n  towns:Town[]=[];\n  Allorders:Order[]=[];\n  user:User;\n  allZone:boolean = false;\n  constructor(private dataService:DataService,private orderService:OrderService,private router:Router) {\n    const user = localStorage.getItem('adminUser');\n      if(user){\n      console.log(user) \n      let jsonObj: any = JSON.parse(user); // string to generic object first\n      this.user = <User>jsonObj;\n      console.log(this.user)\n      this.allZone = this.user.allZone;\n\n      if(this.allZone){\n        this.getTowns()\n      }else{\n        this.selectedTown = this.user.town;\n        this.selectedState = this.user.state;\n        this.getAllOrders();\n      }\n      }\n   \n   }\n\n  ngOnInit(): void {\n\n  }\n  \n  getStates(){\n    this.dataService.getStates(this.selectedTown).subscribe(states=>{\n      this.states = states;\n    })\n  }\n\n  progress(){\n    document.getElementById(\"dialog\").click();\n  }\n\n  getTowns(){\n    this.dataService.getTowns().subscribe(towns=>{\n      this.towns = towns;\n    })\n  }\n\n  getAllOrders(){\n    this.Allorders = [];\n  this.orderService.getAllOrdersByState(this.selectedState).subscribe(res=>{\n    this.Allorders = res;\n\n  });\n  }\n\n  reloadComponent() {\n    let currentUrl = this.router.url;\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigate([currentUrl]);\n }\n\n  chat(){\n    \n  }\n \n \n}\n","<!-- Container-fluid starts-->\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div *ngIf=\"allZone\" class=\"row\">\n                <div class=\"col-xl-5 col-sm-4 mb-0\">\n                    <div class=\"form-group row \">\n                        <label for=\"exampleFormControlSelect2\" class=\"col-xl-3 col-sm-4 mb-0\"><span>*</span>{{'Town :'|translate}}</label>\n                     <select class=\"form-control digits col-xl-8 col-sm-7\"\n                    id=\"exampleFormControlSelect2\" [(ngModel)]= \"selectedTown\" (change)=\"getStates()\">\n                    <option *ngFor=\"let town of towns\" [value]=\"town.id\" selected = \"town.id == user.town\">\n                        {{town.name}}\n                    </option>\n                </select>\n                    </div>\n                    \n                </div>\n                <div class=\"col-xl-5 col-sm-4 mb-0\">\n                    <div class=\"form-group row \">\n                        <label for=\"exampleFormControlSelect2\" class=\"col-xl-3 col-sm-4 mb-0\"><span>*</span>{{'State :'|translate}}</label>\n                    <select class=\"form-control digits col-xl-8 col-sm-7\"\n                        id=\"exampleFormControlSelect2\" [(ngModel)]= \"selectedState\" (change)=\"getAllOrders()\">\n                        <option *ngFor=\"let state of states\" [value]=\"state.id\"  selected = \"state.id == user.state\">\n                            {{state.name}}\n                        </option>\n                    </select>  \n                    </div>\n                    \n                </div>\n\n                <div class=\"col-xl-2 col-sm-2 mb-0\">\n                    <button  (click)=\"reloadComponent()\" class=\"btn btn-primary mr-1\"  >\n                        {{'Reset'|translate}}\n                    </button>\n                    \n                </div>\n                \n               \n            </div>\n            <div class=\"form-group row\">\n               \n            </div>\n            <ngb-tabset class=\"tab-coupon\">\n                <ngb-tab title=\"{{'Orders'|translate}}\">\n                    <ng-template ngbTabContent>                                                                                                                                        <div class=\"tab-pane fade active show\" id=\"account\" role=\"tabpanel\"\n                                aria-labelledby=\"account-tab\">\n                                <app-orders-board *ngIf=\"selectedState\" [Allorders] = \"Allorders\"></app-orders-board>\n                        </div>\n                    </ng-template>\n                </ngb-tab>\n                <ngb-tab>\n                    <ng-template ngbTabTitle>{{'Map'|translate}}\n                        <ng-template ngbTabContent>\n                               <app-zone-delivery-boys-tracking *ngIf=\"selectedState\" [stateId]=\"selectedState\"></app-zone-delivery-boys-tracking> \n                                \n                          \n                        </ng-template>\n                    </ng-template>\n                </ngb-tab>\n                <ngb-tab>\n                    <ng-template ngbTabTitle>{{'Chats'|translate}}\n                        <ng-template ngbTabContent>\n                               <app-zone-chat  *ngIf=\"selectedState\" [stateId]=\"selectedState\" ></app-zone-chat> \n                                \n                          \n                        </ng-template>\n                    </ng-template>\n                </ngb-tab>\n            </ngb-tabset>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends-->\n\n","import { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction ContentLoaderComponent__svg_animate_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"animate\", 7);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"keyTimes\", ctx_r0.keyTimes)(\"values\", ctx_r0.animationValues[0])(\"dur\", ctx_r0.duration);\n} }\nfunction ContentLoaderComponent__svg_animate_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"animate\", 7);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"keyTimes\", ctx_r1.keyTimes)(\"values\", ctx_r1.animationValues[1])(\"dur\", ctx_r1.duration);\n} }\nfunction ContentLoaderComponent__svg_animate_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"animate\", 7);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"keyTimes\", ctx_r2.keyTimes)(\"values\", ctx_r2.animationValues[2])(\"dur\", ctx_r2.duration);\n} }\nconst _c0 = [\"*\"];\nfunction uid() {\n    return Math.random().toString(36).substring(2);\n}\nclass ContentLoaderComponent {\n    constructor() {\n        this.fixedId = uid();\n        this.idClip = `${this.fixedId}-diff`;\n        this.idGradient = `${this.fixedId}-animated-diff`;\n        this.idAria = `${this.fixedId}-aria`;\n        this.animate = true;\n        this.baseUrl = '';\n        this.speed = 1.2;\n        this.viewBox = '0 0 400 130';\n        this.gradientRatio = 2;\n        this.backgroundColor = '#f5f6f7';\n        this.backgroundOpacity = 1;\n        this.foregroundColor = '#eee';\n        this.foregroundOpacity = 1;\n        this.rtl = false;\n        this.interval = 0.25;\n        this.style = {};\n        this.animationValues = [];\n    }\n    ngOnInit() {\n        this.clipPath = `url(${this.baseUrl}#${this.idClip})`;\n        this.fillStyle = { fill: `url(${this.baseUrl}#${this.idGradient})` };\n        this.style = this.rtl ? Object.assign(Object.assign({}, this.style), { transform: 'scaleX(-1)' }) : this.style;\n        this.duration = `${this.speed}s`;\n        this.keyTimes = `0; ${this.interval}; 1`;\n        this.animationValues = [\n            `${-this.gradientRatio}; ${-this.gradientRatio}; 1`,\n            `${-this.gradientRatio / 2}; ${-this.gradientRatio / 2}; ${1 + this.gradientRatio / 2}`,\n            `0; 0; ${1 + this.gradientRatio}`\n        ];\n    }\n}\nContentLoaderComponent.ɵfac = function ContentLoaderComponent_Factory(t) { return new (t || ContentLoaderComponent)(); };\nContentLoaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ContentLoaderComponent, selectors: [[\"content-loader\"]], inputs: { animate: \"animate\", baseUrl: \"baseUrl\", speed: \"speed\", viewBox: \"viewBox\", gradientRatio: \"gradientRatio\", backgroundColor: \"backgroundColor\", backgroundOpacity: \"backgroundOpacity\", foregroundColor: \"foregroundColor\", foregroundOpacity: \"foregroundOpacity\", rtl: \"rtl\", interval: \"interval\", style: \"style\" }, ngContentSelectors: _c0, decls: 12, vars: 15, consts: [[3, \"ngStyle\"], [\"role\", \"presentation\", \"x\", \"0\", \"y\", \"0\", \"width\", \"100%\", \"height\", \"100%\", 3, \"ngStyle\"], [\"role\", \"presentation\"], [\"offset\", \"0%\"], [\"attributeName\", \"offset\", \"repeatCount\", \"indefinite\", 4, \"ngIf\"], [\"offset\", \"50%\"], [\"offset\", \"100%\"], [\"attributeName\", \"offset\", \"repeatCount\", \"indefinite\"]], template: function ContentLoaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelement(1, \"rect\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"defs\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"clipPath\");\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"linearGradient\");\n        ɵngcc0.ɵɵelementStart(6, \"stop\", 3);\n        ɵngcc0.ɵɵtemplate(7, ContentLoaderComponent__svg_animate_7_Template, 1, 3, \"animate\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"stop\", 5);\n        ɵngcc0.ɵɵtemplate(9, ContentLoaderComponent__svg_animate_9_Template, 1, 3, \"animate\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"stop\", 6);\n        ɵngcc0.ɵɵtemplate(11, ContentLoaderComponent__svg_animate_11_Template, 1, 3, \"animate\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style);\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx.viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.fillStyle);\n        ɵngcc0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.idClip);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.idGradient);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"stop-color\", ctx.backgroundColor)(\"stop-opacity\", ctx.backgroundOpacity);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.animate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"stop-color\", ctx.foregroundColor)(\"stop-opacity\", ctx.foregroundOpacity);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.animate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"stop-color\", ctx.backgroundColor)(\"stop-opacity\", ctx.backgroundOpacity);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.animate);\n    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgIf], styles: [\"[_nghost-%COMP%] {\\n        display: block;\\n      }\"], changeDetection: 0 });\nContentLoaderComponent.propDecorators = {\n    animate: [{ type: Input }],\n    baseUrl: [{ type: Input }],\n    speed: [{ type: Input }],\n    viewBox: [{ type: Input }],\n    gradientRatio: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    backgroundOpacity: [{ type: Input }],\n    foregroundColor: [{ type: Input }],\n    foregroundOpacity: [{ type: Input }],\n    rtl: [{ type: Input }],\n    interval: [{ type: Input }],\n    style: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentLoaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'content-loader',\n                template: \"<svg [attr.viewBox]=\\\"viewBox\\\" [ngStyle]=\\\"style\\\">\\n  <rect role=\\\"presentation\\\" [attr.clip-path]=\\\"clipPath\\\" [ngStyle]=\\\"fillStyle\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" />\\n\\n  <defs role=\\\"presentation\\\">\\n    <clipPath [attr.id]=\\\"idClip\\\">\\n      <ng-content></ng-content>\\n    </clipPath>\\n\\n    <linearGradient [attr.id]=\\\"idGradient\\\">\\n      <stop offset=\\\"0%\\\" [attr.stop-color]=\\\"backgroundColor\\\" [attr.stop-opacity]=\\\"backgroundOpacity\\\">\\n        <animate\\n          *ngIf=\\\"animate\\\"\\n          [attr.keyTimes]=\\\"keyTimes\\\"\\n          attributeName=\\\"offset\\\"\\n          [attr.values]=\\\"animationValues[0]\\\"\\n          [attr.dur]=\\\"duration\\\"\\n          repeatCount=\\\"indefinite\\\"\\n        />\\n      </stop>\\n\\n      <stop offset=\\\"50%\\\" [attr.stop-color]=\\\"foregroundColor\\\" [attr.stop-opacity]=\\\"foregroundOpacity\\\">\\n        <animate\\n          *ngIf=\\\"animate\\\"\\n          attributeName=\\\"offset\\\"\\n          [attr.keyTimes]=\\\"keyTimes\\\"\\n          [attr.values]=\\\"animationValues[1]\\\"\\n          [attr.dur]=\\\"duration\\\"\\n          repeatCount=\\\"indefinite\\\"\\n        />\\n      </stop>\\n\\n      <stop offset=\\\"100%\\\" [attr.stop-color]=\\\"backgroundColor\\\" [attr.stop-opacity]=\\\"backgroundOpacity\\\">\\n        <animate\\n          *ngIf=\\\"animate\\\"\\n          attributeName=\\\"offset\\\"\\n          [attr.keyTimes]=\\\"keyTimes\\\"\\n          [attr.values]=\\\"animationValues[2]\\\"\\n          [attr.dur]=\\\"duration\\\"\\n          repeatCount=\\\"indefinite\\\"\\n        />\\n      </stop>\\n    </linearGradient>\\n  </defs>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [`\n      :host {\n        display: block;\n      }\n    `]\n            }]\n    }], function () { return []; }, { animate: [{\n            type: Input\n        }], baseUrl: [{\n            type: Input\n        }], speed: [{\n            type: Input\n        }], viewBox: [{\n            type: Input\n        }], gradientRatio: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], backgroundOpacity: [{\n            type: Input\n        }], foregroundColor: [{\n            type: Input\n        }], foregroundOpacity: [{\n            type: Input\n        }], rtl: [{\n            type: Input\n        }], interval: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }] }); })();\n\nclass BulletListContentLoaderComponent extends ContentLoaderComponent {\n}\nBulletListContentLoaderComponent.ɵfac = function BulletListContentLoaderComponent_Factory(t) { return ɵBulletListContentLoaderComponent_BaseFactory(t || BulletListContentLoaderComponent); };\nBulletListContentLoaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BulletListContentLoaderComponent, selectors: [[\"bullet-list-content-loader\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 0, consts: [[\"viewBox\", \"0 0 245 125\"], [\"cx\", \"10\", \"cy\", \"20\", \"r\", \"8\"], [\"x\", \"25\", \"y\", \"15\", \"rx\", \"5\", \"ry\", \"5\", \"width\", \"220\", \"height\", \"10\"], [\"cx\", \"10\", \"cy\", \"50\", \"r\", \"8\"], [\"x\", \"25\", \"y\", \"45\", \"rx\", \"5\", \"ry\", \"5\", \"width\", \"220\", \"height\", \"10\"], [\"cx\", \"10\", \"cy\", \"80\", \"r\", \"8\"], [\"x\", \"25\", \"y\", \"75\", \"rx\", \"5\", \"ry\", \"5\", \"width\", \"220\", \"height\", \"10\"], [\"cx\", \"10\", \"cy\", \"110\", \"r\", \"8\"], [\"x\", \"25\", \"y\", \"105\", \"rx\", \"5\", \"ry\", \"5\", \"width\", \"220\", \"height\", \"10\"]], template: function BulletListContentLoaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"content-loader\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(1, \"circle\", 1);\n        ɵngcc0.ɵɵelement(2, \"rect\", 2);\n        ɵngcc0.ɵɵelement(3, \"circle\", 3);\n        ɵngcc0.ɵɵelement(4, \"rect\", 4);\n        ɵngcc0.ɵɵelement(5, \"circle\", 5);\n        ɵngcc0.ɵɵelement(6, \"rect\", 6);\n        ɵngcc0.ɵɵelement(7, \"circle\", 7);\n        ɵngcc0.ɵɵelement(8, \"rect\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } }, directives: [ContentLoaderComponent], encapsulation: 2, changeDetection: 0 });\nconst ɵBulletListContentLoaderComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(BulletListContentLoaderComponent);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BulletListContentLoaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'bullet-list-content-loader',\n                template: `\n    <content-loader viewBox=\"0 0 245 125\">\n      <svg:circle cx=\"10\" cy=\"20\" r=\"8\" />\n      <svg:rect x=\"25\" y=\"15\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n      <svg:circle cx=\"10\" cy=\"50\" r=\"8\" />\n      <svg:rect x=\"25\" y=\"45\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n      <svg:circle cx=\"10\" cy=\"80\" r=\"8\" />\n      <svg:rect x=\"25\" y=\"75\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n      <svg:circle cx=\"10\" cy=\"110\" r=\"8\" />\n      <svg:rect x=\"25\" y=\"105\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n    </content-loader>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], null, null); })();\n\nclass FacebookContentLoaderComponent extends ContentLoaderComponent {\n}\nFacebookContentLoaderComponent.ɵfac = function FacebookContentLoaderComponent_Factory(t) { return ɵFacebookContentLoaderComponent_BaseFactory(t || FacebookContentLoaderComponent); };\nFacebookContentLoaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FacebookContentLoaderComponent, selectors: [[\"facebook-content-loader\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 0, consts: [[\"viewBox\", \"0 0 476 124\"], [\"x\", \"48\", \"y\", \"8\", \"width\", \"88\", \"height\", \"6\", \"rx\", \"3\"], [\"x\", \"48\", \"y\", \"26\", \"width\", \"52\", \"height\", \"6\", \"rx\", \"3\"], [\"x\", \"0\", \"y\", \"56\", \"width\", \"410\", \"height\", \"6\", \"rx\", \"3\"], [\"x\", \"0\", \"y\", \"72\", \"width\", \"380\", \"height\", \"6\", \"rx\", \"3\"], [\"x\", \"0\", \"y\", \"88\", \"width\", \"178\", \"height\", \"6\", \"rx\", \"3\"], [\"cx\", \"20\", \"cy\", \"20\", \"r\", \"20\"]], template: function FacebookContentLoaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"content-loader\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(1, \"rect\", 1);\n        ɵngcc0.ɵɵelement(2, \"rect\", 2);\n        ɵngcc0.ɵɵelement(3, \"rect\", 3);\n        ɵngcc0.ɵɵelement(4, \"rect\", 4);\n        ɵngcc0.ɵɵelement(5, \"rect\", 5);\n        ɵngcc0.ɵɵelement(6, \"circle\", 6);\n        ɵngcc0.ɵɵelementEnd();\n    } }, directives: [ContentLoaderComponent], encapsulation: 2, changeDetection: 0 });\nconst ɵFacebookContentLoaderComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FacebookContentLoaderComponent);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FacebookContentLoaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'facebook-content-loader',\n                template: `\n    <content-loader viewBox=\"0 0 476 124\">\n      <svg:rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n      <svg:rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n      <svg:rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n      <svg:rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n      <svg:rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n      <svg:circle cx=\"20\" cy=\"20\" r=\"20\" />\n    </content-loader>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], null, null); })();\n\nclass ListContentLoaderComponent extends ContentLoaderComponent {\n}\nListContentLoaderComponent.ɵfac = function ListContentLoaderComponent_Factory(t) { return ɵListContentLoaderComponent_BaseFactory(t || ListContentLoaderComponent); };\nListContentLoaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ListContentLoaderComponent, selectors: [[\"list-content-loader\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 0, consts: [[\"viewBox\", \"0 0 400 110\"], [\"x\", \"0\", \"y\", \"0\", \"rx\", \"3\", \"ry\", \"3\", \"width\", \"250\", \"height\", \"10\"], [\"x\", \"20\", \"y\", \"20\", \"rx\", \"3\", \"ry\", \"3\", \"width\", \"220\", \"height\", \"10\"], [\"x\", \"20\", \"y\", \"40\", \"rx\", \"3\", \"ry\", \"3\", \"width\", \"170\", \"height\", \"10\"], [\"x\", \"0\", \"y\", \"60\", \"rx\", \"3\", \"ry\", \"3\", \"width\", \"250\", \"height\", \"10\"], [\"x\", \"20\", \"y\", \"80\", \"rx\", \"3\", \"ry\", \"3\", \"width\", \"200\", \"height\", \"10\"], [\"x\", \"20\", \"y\", \"100\", \"rx\", \"3\", \"ry\", \"3\", \"width\", \"80\", \"height\", \"10\"]], template: function ListContentLoaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"content-loader\", 0);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelement(1, \"rect\", 1);\n        ɵngcc0.ɵɵelement(2, \"rect\", 2);\n        ɵngcc0.ɵɵelement(3, \"rect\", 3);\n        ɵngcc0.ɵɵelement(4, \"rect\", 4);\n        ɵngcc0.ɵɵelement(5, \"rect\", 5);\n        ɵngcc0.ɵɵelement(6, \"rect\", 6);\n        ɵngcc0.ɵɵelementEnd();\n    } }, directives: [ContentLoaderComponent], encapsulation: 2, changeDetection: 0 });\nconst ɵListContentLoaderComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ListContentLoaderComponent);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ListContentLoaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'list-content-loader',\n                template: `\n    <content-loader viewBox=\"0 0 400 110\">\n      <svg:rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n      <svg:rect x=\"20\" y=\"20\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n      <svg:rect x=\"20\" y=\"40\" rx=\"3\" ry=\"3\" width=\"170\" height=\"10\" />\n      <svg:rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n      <svg:rect x=\"20\" y=\"80\" rx=\"3\" ry=\"3\" width=\"200\" height=\"10\" />\n      <svg:rect x=\"20\" y=\"100\" rx=\"3\" ry=\"3\" width=\"80\" height=\"10\" />\n    </content-loader>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], null, null); })();\n\nclass ContentLoaderModule {\n    static forRoot() {\n        return {\n            ngModule: ContentLoaderModule\n        };\n    }\n}\nContentLoaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ContentLoaderModule });\nContentLoaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ContentLoaderModule_Factory(t) { return new (t || ContentLoaderModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ContentLoaderModule, { declarations: function () { return [ContentLoaderComponent, FacebookContentLoaderComponent, BulletListContentLoaderComponent, ListContentLoaderComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ContentLoaderComponent, FacebookContentLoaderComponent, BulletListContentLoaderComponent, ListContentLoaderComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentLoaderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [\n                    ContentLoaderComponent,\n                    FacebookContentLoaderComponent,\n                    BulletListContentLoaderComponent,\n                    ListContentLoaderComponent\n                ],\n                exports: [\n                    ContentLoaderComponent,\n                    FacebookContentLoaderComponent,\n                    BulletListContentLoaderComponent,\n                    ListContentLoaderComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BulletListContentLoaderComponent, ContentLoaderComponent, ContentLoaderModule, FacebookContentLoaderComponent, ListContentLoaderComponent };\n\n//# sourceMappingURL=ngneat-content-loader.js.map","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport * as moment from 'moment';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { IssuePriorityIcon } from 'src/app/shared/data/issue-priority-icon';\nimport { ProjectQuery } from 'src/app/shared/data/project.query';\nimport { JUser } from 'src/app/shared/data/user';\nimport { IssueUtil } from 'src/app/shared/data/utils/issue';\nimport { Order } from 'src/app/shared/interfaces/order';\nimport { Shop } from 'src/app/shared/interfaces/shop';\nimport { ProductService } from 'src/app/shared/service/product.service';\nimport { IssueModalComponent } from '../issue-modal/issue-modal.component';\n\n@Component({\n  selector: '[issue-card]',\n  templateUrl: './issue-card.component.html',\n  styleUrls: ['./issue-card.component.scss']\n})\n@UntilDestroy()\nexport class IssueCardComponent implements OnInit {\n  @Input() order: Order;\n  assignees: JUser[];\n  issueTypeIcon: string;\n  priorityIcon: IssuePriorityIcon;\n  shops:Shop[]=[];\n  hours:any ;\n  minutes:any ;\n  seconds:any ;\n  days:any;\n  constructor(private _projectQuery: ProjectQuery, private _modalService: NzModalService,private productService:ProductService) {}\n\n  ngOnInit(): void {\n    this.productService.getShops.subscribe(shops=>{\n      this.shops=shops;\n    })\n    this.issueTypeIcon=\"story\";\n    this.startTimer();\n  }\n  timeLeft: any;\n  interval;\n\n  startTimer() {\n    this.interval = setInterval(() => {\n\n      this.timer()\n        \n      \n    },1000)\n  }\n  updtaeClock() {\n  \n\n  }\n  timer(){\n    \n   \n   if(this.order.status ==\"0\"){\n    var now  =  new Date().getTime();\n    var then = this.order.orderTime;\n\n   var ms = moment(now).diff(moment(then));\n   var d = moment.duration(ms);\n   this.timeLeft = Math.floor(d.asHours()) + moment.utc(ms).format(\":mm:ss\");\n   var tp = Math.floor(d.asMinutes());\n    if(tp>=15){\n      this.issueTypeIcon = \"bug\"\n    }\n   }else if(this.order.status ==\"1\"){\n    var now  =  new Date().getTime();\n    var then = this.order.prepareTime;\n\n   var ms = moment(now).diff(moment(then));\n   var d = moment.duration(ms);\n   this.timeLeft = Math.floor(d.asHours()) + moment.utc(ms).format(\":mm:ss\");\n   var tp = Math.floor(d.asMinutes());\n   if(tp>=this.order.pTime){\n    this.issueTypeIcon = \"bug\"\n     }\n  }else if(this.order.status ==\"1\"){\n    var now  =  new Date().getTime();\n    var then = this.order.deliveryTime;\n\n   var ms = moment(now).diff(moment(then));\n   var d = moment.duration(ms);\n   this.timeLeft = Math.floor(d.asHours()) + moment.utc(ms).format(\":mm:ss\");\n   var tp = Math.floor(d.asMinutes());\n   \n  }\n   \n   \n\n // this.startTimer(); \n  }\n \n\n  openIssueModal(issueId: string) {\n    this._modalService.create({\n      nzContent: IssueModalComponent,\n      nzWidth: 990,\n      nzClosable: false,\n      nzFooter: null,\n      nzComponentParams: {\n        orderId: issueId\n      }\n    });\n  }\n}\n","<div class=\"issue-wrap\">\n    <div (click)=\"openIssueModal(order.orderId)\"\n         class=\"issue\">\n         \n        <p class=\"text-textDarkest text-center\">\n            {{ order.type|orderType|translate }}\n        </p>\n       \n        <p class=\"text-textDarkest text-center\">\n            {{ order.orderId}}\n        </p>\n        <p class=\"text-textDarkest text-center\"> {{timeLeft}} </p>\n       \n            <div class=\"row\">\n                <div class=\"col\"><h5 >\n                    {{'Order Time :'|translate}} {{order?.orderTime | date: 'hh:mm a'}}\n                </h5></div>\n                <div class=\"col\"><h5 *ngIf=\"order?.prepareTime>0\">\n                    {{'Accept Time :'|translate}} {{order?.prepareTime | date: 'hh:mm a'}}\n                </h5>\n                <h5 *ngIf=\"order?.prepareTime==0\">\n                {{'Accept Time :'|translate}} --:--\n            </h5></div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\"><h5  *ngIf=\"order?.deliveryTime>0\">\n                    {{'prepare Time :'|translate}} {{order?.deliveryTime | date: 'hh:mm a'}}\n                </h5><h5  *ngIf=\"order?.deliveryTime==0\">\n                    {{'prepare Time :'|translate}} --:--\n                </h5></div>\n                <div class=\"col\"><h5 *ngIf=\"order?.doneTime>0\">\n                    {{'Delivery Time :'|translate}} {{order?.doneTime | date: 'hh:mm a'}}\n                </h5><h5 *ngIf=\"order?.doneTime==0\">\n                    {{'Delivery Time :'|translate}} --:--\n                </h5></div>\n            </div>\n            \n        <div class=\"flex items-center justify-between\">\n           \n            \n            <div class=\"flex items-center\">\n                <svg-icon class=\"mr-1 text-textMedium\"\n                          [name]=\"issueTypeIcon\"\n                          [size]=\"20\">\n                </svg-icon>\n\n           \n            </div>            \n        </div>\n    </div>\n</div>","import { Subject, Subscription } from 'rxjs';\nimport { ɵNG_PIPE_DEF } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\n\nconst NG_PIPE_DEF = ɵNG_PIPE_DEF;\nfunction isPipe(target) {\n    return !!target[NG_PIPE_DEF];\n}\n\n/**\n * Applied to instances and stores `Subject` instance when\n * no custom destroy method is provided.\n */\nconst DESTROY = Symbol('__destroy');\n/**\n * Applied to definitions and informs that class is decorated\n */\nconst DECORATOR_APPLIED = Symbol('__decoratorApplied');\n/**\n * If we use the `untilDestroyed` operator multiple times inside the single\n * instance providing different `destroyMethodName`, then all streams will\n * subscribe to the single subject. If any method is invoked, the subject will\n * emit and all streams will be unsubscribed. We wan't to prevent this behavior,\n * thus we store subjects under different symbols.\n */\nfunction getSymbol(destroyMethodName) {\n    if (typeof destroyMethodName === 'string') {\n        return Symbol(`__destroy__${destroyMethodName}`);\n    }\n    else {\n        return DESTROY;\n    }\n}\nfunction markAsDecorated(type) {\n    // Store this property on the prototype if it's an injectable class, component or directive.\n    // We will be able to handle class extension this way.\n    type.prototype[DECORATOR_APPLIED] = true;\n}\nfunction createSubjectOnTheInstance(instance, symbol) {\n    if (!instance[symbol]) {\n        instance[symbol] = new Subject();\n    }\n}\nfunction completeSubjectOnTheInstance(instance, symbol) {\n    if (instance[symbol]) {\n        instance[symbol].next();\n        instance[symbol].complete();\n        // We also have to re-assign this property thus in the future\n        // we will be able to create new subject on the same instance.\n        instance[symbol] = null;\n    }\n}\n\nfunction unsubscribe(property) {\n    if (property instanceof Subscription) {\n        property.unsubscribe();\n    }\n}\nfunction unsubscribeIfPropertyIsArrayLike(property) {\n    Array.isArray(property) && property.forEach(unsubscribe);\n}\nfunction decorateNgOnDestroy(ngOnDestroy, options) {\n    return function () {\n        var _a;\n        // Invoke the original `ngOnDestroy` if it exists\n        ngOnDestroy && ngOnDestroy.call(this);\n        // It's important to use `this` instead of caching instance\n        // that may lead to memory leaks\n        completeSubjectOnTheInstance(this, getSymbol());\n        // Check if subscriptions are pushed to some array\n        if (options.arrayName) {\n            return unsubscribeIfPropertyIsArrayLike(this[options.arrayName]);\n        }\n        // Loop through the properties and find subscriptions\n        if (options.checkProperties) {\n            for (const property in this) {\n                if ((_a = options.blackList) === null || _a === void 0 ? void 0 : _a.includes(property)) {\n                    continue;\n                }\n                unsubscribe(this[property]);\n            }\n        }\n    };\n}\nfunction decorateProviderDirectiveOrComponent(type, options) {\n    type.prototype.ngOnDestroy = decorateNgOnDestroy(type.prototype.ngOnDestroy, options);\n}\nfunction decoratePipe(type, options) {\n    const def = type.ɵpipe;\n    def.onDestroy = decorateNgOnDestroy(def.onDestroy, options);\n}\nfunction UntilDestroy(options = {}) {\n    return (type) => {\n        if (isPipe(type)) {\n            decoratePipe(type, options);\n        }\n        else {\n            decorateProviderDirectiveOrComponent(type, options);\n        }\n        markAsDecorated(type);\n    };\n}\n\nfunction overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol) {\n    const originalDestroy = instance[destroyMethodName];\n    if (ngDevMode && typeof originalDestroy !== 'function') {\n        throw new Error(`${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`);\n    }\n    createSubjectOnTheInstance(instance, symbol);\n    instance[destroyMethodName] = function () {\n        // eslint-disable-next-line prefer-rest-params\n        originalDestroy.apply(this, arguments);\n        completeSubjectOnTheInstance(this, symbol);\n        // We have to re-assign this property back to the original value.\n        // If the `untilDestroyed` operator is called for the same instance\n        // multiple times, then we will be able to get the original\n        // method again and not the patched one.\n        instance[destroyMethodName] = originalDestroy;\n    };\n}\nfunction untilDestroyed(instance, destroyMethodName) {\n    return (source) => {\n        const symbol = getSymbol(destroyMethodName);\n        // If `destroyMethodName` is passed then the developer applies\n        // this operator to something non-related to Angular DI system\n        if (typeof destroyMethodName === 'string') {\n            overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol);\n        }\n        else {\n            ngDevMode && ensureClassIsDecorated(instance);\n            createSubjectOnTheInstance(instance, symbol);\n        }\n        return source.pipe(takeUntil(instance[symbol]));\n    };\n}\nfunction ensureClassIsDecorated(instance) {\n    const prototype = Object.getPrototypeOf(instance);\n    const missingDecorator = !(DECORATOR_APPLIED in prototype);\n    if (missingDecorator) {\n        throw new Error('untilDestroyed operator cannot be used inside directives or ' +\n            'components or providers that are not decorated with UntilDestroy decorator');\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UntilDestroy, untilDestroyed };\n\n//# sourceMappingURL=ngneat-until-destroy.js.map","\nimport { JComment } from './comment';\n\n/* eslint-disable no-shadow */\nexport enum OrderType {\n  Shop = 'Shop',\n  Shipping = 'Shipping',\n  Pharmacy = 'Pharmacy'\n}\n\nexport enum IssueStatus {\n  NEW= '0',\n  PREPARE = '1',\n  STORED = '2',\n  DISPATCHING = '3',\n  DONE = '4'\n}\n\nexport const IssueStatusDisplay = {\n  [IssueStatus.NEW]: 'New Order',\n  [IssueStatus.PREPARE]: 'Preparing',\n  [IssueStatus.STORED]: 'Stored',\n  [IssueStatus.DISPATCHING]: 'Dispatching',\n  [IssueStatus.DONE]: 'Done'\n};\n\nexport enum IssuePriority {\n  LOWEST = 'Lowest',\n  LOW = 'Low',\n  MEDIUM = 'Medium',\n  HIGH = 'High',\n  HIGHEST = 'Highest'\n}\n\nexport const IssuePriorityColors = {\n  [IssuePriority.HIGHEST]: '#CD1317',\n  [IssuePriority.HIGH]: '#E9494A',\n  [IssuePriority.MEDIUM]: '#E97F33',\n  [IssuePriority.LOW]: '#2D8738',\n  [IssuePriority.LOWEST]: '#57A55A'\n};\n\n/* eslint-enable no-shadow */\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddDeliveryBoyComponent } from './add-delivery-boy/add-delivery-boy.component';\nimport { ListDeliveryBoysComponent } from './list-delivery-boys/list-delivery-boys.component';\nimport { OrdersBoardComponent } from './orders-board/orders-board.component';\nimport { OrdersDashboardComponent } from './orders-dashboard/orders-dashboard.component';\nimport { ViewDeliveryBoyComponent } from './view-delivery-boy/view-delivery-boy.component';\nimport { ZoneDeliveryBoysTrackingComponent } from './zone-delivery-boys-tracking/zone-delivery-boys-tracking.component';\nimport { ZoneOrdersComponent } from './zone-orders/zone-orders.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'list-delivery-boys',\n        component: ListDeliveryBoysComponent,\n        data: {\n          title: \"Drivers List\",\n          breadcrumb: \"drivers-list\"\n        }\n      },\n      {\n        path: 'add-delivery-boy',\n        component: AddDeliveryBoyComponent,\n        data: {\n          title: \"Create Driver\",\n          breadcrumb: \"create-driver\"\n        }\n      },\n      {\n        path: 'orders-board',\n        component: OrdersBoardComponent,\n        data: {\n          title: \"zone orders\",\n          breadcrumb: \"zone-orders\"\n        }\n      },\n      {\n        path: 'track-delivery-boys',\n        component: ZoneDeliveryBoysTrackingComponent,\n        data: {\n          title: \"track delivery boys\",\n          breadcrumb: \"track-delivery-boys\"\n        }\n      },\n      {\n        path: 'orders-dashboard',\n        component: OrdersDashboardComponent,\n        data: {\n          title: \"orders dashboard\",\n          breadcrumb: \"orders-dashboard\"\n        }\n      },\n      {\n        path: 'view-delivery-boy',\n        component: ViewDeliveryBoyComponent,\n        data: {\n          title: \"view delivery boy\",\n          breadcrumb: \"view-delivery-boy\"\n        }\n      }\n      \n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DeliveryRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { arrayRemove, arrayUpsert, setLoading } from '@datorama/akita';\n\n\n\n\nimport { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { JProject } from '../data/project';\nimport { ProjectStore } from '../data/project.store';\nimport { DateUtil } from '../data/utils/date';\nimport { Order } from '../interfaces/order';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n \n  baseUrl: string;\n  constructor(private _http: HttpClient, private _store: ProjectStore) {\n    this.baseUrl ='/assets/data'\n  }\n  getProject() {\n    this._http\n      .get<JProject>(`${this.baseUrl}/project.json`)\n      .pipe(\n        setLoading(this._store),\n        tap((project) => {\n          this._store.update((state) => ({\n              ...state,\n              ...project\n            }));\n        }),\n        catchError((error) => {\n          this._store.setError(error);\n          return of(error);\n        })\n      )\n      .subscribe();\n  }\n\n  setLoading(isLoading: boolean) {\n    this._store.setLoading(isLoading);\n  }\n\n \n\n  \n  deleteIssue(issueId: string) {\n    this._store.update((state) => {\n      const issues = arrayRemove(state.issues, issueId);\n      return {\n        ...state,\n        issues\n      };\n    });\n  }\n\n\n}\n","import { AgmMap } from '@agm/core';\nimport { DatePipe } from '@angular/common';\nimport { Component, Input, Output, EventEmitter, ViewChild, Inject, PLATFORM_ID, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { Customer } from 'src/app/shared/interfaces/customer';\nimport { Notification } from 'src/app/shared/interfaces/notification';\nimport { Order } from 'src/app/shared/interfaces/order';\nimport { State } from 'src/app/shared/interfaces/state';\nimport { Town } from 'src/app/shared/interfaces/town';\nimport { LocationModalComponent } from 'src/app/shared/location-modal/location-modal.component';\nimport { AuthService } from 'src/app/shared/service/auth.service';\nimport { CheckPermisson } from 'src/app/shared/service/check-permisson';\nimport { DataService } from 'src/app/shared/service/data.service';\nimport { MessengerService } from 'src/app/shared/service/messenger.service';\nimport { OrderService } from 'src/app/shared/service/order.service';\nimport { ProductService } from 'src/app/shared/service/product.service';\nimport { SendMailService } from 'src/app/shared/service/send-mail.service';\n\nexport interface ILatLng {\n  latitude: number;\n  longitude: number;\n}\n\n@Component({\n  selector: 'issue-detail',\n  templateUrl: './issue-detail.component.html',\n  styleUrls: ['./issue-detail.component.scss']\n})\nexport class IssueDetailComponent implements OnInit{\n  @Input() orderId: string;\n  order:Order;\n  @Input() isShowFullScreenButton: boolean;\n  @Input() isShowCloseButton: boolean;\n  @Output() onClosed = new EventEmitter();\n  @Output() onOpenIssue = new EventEmitter<string>();\n  ref:string;\n  public id:any;\n  client:Customer;\n  @ViewChild(AgmMap) agmMap: any;\n  public closeResult: string;\n  public modalOpen: boolean = false;\n  // Washington, DC, USA\n   origin: ILatLng ;\n  // New York City, NY, USA\n  destination: ILatLng ;\n  displayDirections = true;\n  \n  zoom = 14;\n  distance:any;\n shopIcon={\n  url:'./assets/images/icons/shop.png',\n  scaledSize: {\n      width: 40,\n      height: 40\n  }\n}\n\nuserIcon={\n  url:'./assets/images/icons/user.png',\n  scaledSize: {\n      width: 40,\n      height: 40\n  }\n}\n  showMap:boolean = false;\n  orderStatus:any;\n  pTime:number;\n  price:number;\n  canUpdate:boolean=false;\n  towns:Town[]=[];\n  states:State[]=[];\n  public pipe = new DatePipe(\"ar-EG\");\n  @ViewChild(\"locationModal\") LocationModal: LocationModalComponent;\n  token:any;\n  Status=[{id:\"0\",name:\"New\"},{id:\"1\",name:\"Prepare\"},{id:\"2\",name:\"Stored\"},{id:\"3\",name:\"Dispatching\"},{id:\"4\",name:\"Delivered\"},{id:\"5\",name:\"Cancelled\"}]\n\n\n  constructor(private _modalService: NzModalService,public productService: ProductService,\n    public route: ActivatedRoute,private router:Router,\n    private orderService: OrderService,private permisson:CheckPermisson,private toastr:ToastrService\n    ,private sendMail:SendMailService,private authService:AuthService,private messengerService:MessengerService,private dataService:DataService) {\n      this.canUpdate = this.permisson.checkPermisson('\"update_order\":true');\n      \n    }\n    ngOnInit(): void {\t\n      this.id = this.orderId;\n      this.getOrder(this.id);\n      this.getFillters();\n      \n    }\n\n    getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\n      var R = 6371; // Radius of the earth in km\n      var dLat = this.deg2rad(lat2-lat1);  // deg2rad below\n      var dLon = this.deg2rad(lon2-lon1); \n      var a = \n        Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \n        Math.sin(dLon/2) * Math.sin(dLon/2)\n        ; \n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n      var d = R * c; // Distance in km\n      return d;\n    }\n    \n    deg2rad(deg) {\n      return deg * (Math.PI/180)\n    }\n    polygonCenter(poly) {\n      const vertices = poly;\n    \n      // put all latitudes and longitudes in arrays\n      const longitudes = vertices.map(i => i.lng);\n      const latitudes = vertices.map( i => i.lat);\n    \n      // sort the arrays low to high\n      latitudes.sort();\n      longitudes.sort();\n    \n      // get the min and max of each\n      const lowX = latitudes[0];\n      console.log(lowX)\n      const highX = latitudes[latitudes.length - 1];\n      const lowy = longitudes[0];\n      const highy = longitudes[latitudes.length - 1];\n    \n      // center of the polygon is the starting point plus the midpoint\n      const centerX = lowX + ((highX - lowX) / 2);\n      const centerY = lowy + ((highy - lowy) / 2);\n    \n      return ({lat:centerX, lng:centerY});\n    }\n    getOrder(id: string) {\n      this.orderService\n      .getOrderById(id)\n      .subscribe((order) => {\n        if (order) {\n          this.order = order;\n          this.destination = {latitude: order.from.lat,longitude: order.from.lng};\n          this.origin = {latitude: order.to.lat,longitude: order.to.lng};\n          if(order.pTime)\n              this.pTime = order.pTime;\n\n          this.price = order.subtotal;\n          this.orderStatus = this.order.status;\n          this.updateS();\n          this.getStates();\n         \n          this.distance = this.getDistanceFromLatLonInKm(this.origin.latitude,this.origin.longitude,this.destination.latitude,this.destination.longitude);\n        }\n      });\n    }\n    getFillters() {\n      this.dataService.getTowns().subscribe(towns=>{\n        this.towns = towns;\n      });\n    }\n  \n    getStates(){\n      this.dataService.getStates(this.order.to.town ).subscribe(states=>{\n        this.states = states;\n      });\n    }\n  updateS() {\n     if(this.orderStatus == \"1\"){\n      this.Status=[{id:\"1\",name:\"Prepare\"},{id:\"2\",name:\"Stored\"},{id:\"3\",name:\"Dispatching\"},{id:\"4\",name:\"Delivered\"},{id:\"5\",name:\"Cancelled\"}];\n\n    }else if(this.orderStatus == \"2\"){\n      this.Status=[{id:\"2\",name:\"Stored\"},{id:\"3\",name:\"Dispatching\"},{id:\"4\",name:\"Delivered\"},{id:\"5\",name:\"Cancelled\"}];\n\n    }else if(this.orderStatus == \"3\"){\n      this.Status=[{id:\"3\",name:\"Dispatching\"},{id:\"4\",name:\"Delivered\"},{id:\"5\",name:\"Cancelled\"}];\n    }else if(this.orderStatus == \"4\"){\n      this.Status=[{id:\"4\",name:\"Delivered\"},{id:\"5\",name:\"Cancelled\"}];\n    }else if(this.orderStatus == \"5\"){\n      this.Status=[{id:\"5\",name:\"Cancelled\"}];\n    }\n  }\n\n  \n\n  closeModal() {\n    this.onClosed.emit();\n  }\n  viewMap(){\n    if(this.showMap){\n      this.showMap=false;\n    }else{\n      this.showMap=true;\n    }\n  }\n  openIssuePage() {\n    this.onOpenIssue.emit(this.order.orderId);\n  }\n\n  \n\n  updteStatus(){\n    console.log(this.orderStatus);\n\n   this.orderService.updateOrderStatus(this.order.orderId,this.orderStatus).subscribe(res=>{\n    let title = \"\";\n    let body = \"\";\n    this.authService.getToken(this.order.userId).subscribe(token=>{\n     this.token = token.token;\n     if(this.orderStatus==\"1\" ){\n      title = \"قيد التجهيز\"\n      console.log(\"pTime = \"+this.pTime)\n      const timestamp = new Date().getTime();\n      this.orderService.updateOrderTimeStatus(this.order.orderId,\"prepareTime\",timestamp).subscribe(res=>{\n\n      });\n      console.log(\"pTime = \"+this.pTime)\n      this.orderService.updateOrderPTime(this.order.orderId,this.pTime).subscribe(res=>{\n\n      });\n      this.orderService.updateOrderPice(this.order.orderId,this.price).subscribe(res=>{\n\n      });\n      body=\" الطلب رقم \"+this.order.orderId+\" قيد التجهيز\"\n     }else if(this.orderStatus==\"2\" ){\n       title = \"تم التخزين \"\n       body=\" الطلب رقم \"+this.order.orderId+\" تم التخزين  \"\n  \n     }else if(this.orderStatus==\"3\" ){\n      title = \"في الطريق\"\n      body=\" الطلب رقم \"+this.order.orderId+\" في الطريق \"\n      const timestamp = new Date().getTime();\n      this.orderService.updateOrderTimeStatus(this.order.orderId,\"deliveryTime\",timestamp).subscribe(res=>{\n\n      });\n    }else if(this.orderStatus==\"4\" ){\n      title = \"تم التسليم \"\n      body=\" الطلب رقم \"+this.order.orderId+\" تم التسليم\"\n      const timestamp = new Date().getTime();\n      this.deliveryRequest()\n       this.orderService.updateOrderTimeStatus(this.order.orderId,\"doneTime\",timestamp).subscribe(res=>{\n \n       });\n     }else if(this.orderStatus==\"5\"){\n      title = \"تم الغاء الطلب \"\n      body=\" الطلب رقم \"+this.order.orderId+\" تم الالغاء \"\n      this.cancelRequest();\n    }else{\n      this.toastr.error(\"Cant/'t update\")\n    }\n     this.sendNotification(title,body,this.token);\n     this.router.navigate(['/sales/orders']);\n    })\n   \n   })\n\n   this.closeModal();\n   \n  }\n\n  chat(){\n    this.messengerService.getChatReciverId('0102',this.order.userId).subscribe(chatMs=>{\n      if(chatMs.length>0){\n        this.ref=chatMs[0].ref\n        const url = this.router.serializeUrl(\n          this.router.createUrlTree(['/chat/chat'], { queryParams: { id: this.ref,user:this.order.userId}})\n        );\n      \n        window.open(url, '_blank');\n        //this.router.navigate(['/chat/chat'], { queryParams: { id: this.ref,user:this.order.userId},replaceUrl: true})\n      }else{\n        this.ref=\"\"+new Date().getTime();\n        const url = this.router.serializeUrl(\n          this.router.createUrlTree(['/chat/chat'], { queryParams: { id: this.ref,user:this.order.userId}})\n        );\n      \n        window.open(url, '_blank');\n      }\n      }\n      );\n  }\n   \n  sendNotification(title:string,body:string,id:string){\n    const content = {notification: {\n      title: title, \n      body: body\n      },\n      to : id\n     }\n    \n  this.sendMail.sendMessage(content);\n  const  myDate = this.pipe.transform(new Date(), 'yyyy-MM-dd hh:mm a');\n  const gid = this.createId();\n  let notification = new Notification(gid,title,body,true,this.order.orderId,this.order.shopId,true,false,this.order.userId,myDate);\n  this.orderService.sendNotification(notification);\n\n  }\n  ngAfterViewInit() {\n    \n  }\n  RequestDelivery(){\n    this.orderService.requestDelivery(this.order.orderId,this.order).subscribe(res=>{\n      this.toastr.success('Resqust send succesfully');\n    })\n\n   \n\n  }\n\n  cancelRequest(){\n    this.authService.getCustomer(this.order.userId).subscribe(customer=>{\n     // var balanceH = customer.balanceH - this.order.subtotal;\n     // this.orderService.updateUserPayments(customer.uid,\"balanceH\",balanceH).subscribe(res=>{\n  \n   //   })\n    })\n   \n  }\n\n  deliveryRequest(){\n    this.authService.getCustomer(this.order.userId).subscribe(customer=>{\n      //var balanceH = customer.balanceH - this.order.subtotal;\n     // var balanceM = customer.balanceM + this.order.subtotal;\n     // this.orderService.updateUserPayments(customer.uid,\"balanceH\",balanceH).subscribe(res=>{\n     //     this.orderService.updateUserPayments(customer.uid,\"balanceM\",balanceM)\n   //   })\n    })\n   \n  }\n  \n  private createId(): string {\n    let t = new Date();\n    const randomId = this.pipe.transform(new Date(), 'yyyyMMdd')+t.getUTCMilliseconds();\n    let id =  \"\"+randomId;\n    if (id === \"1\") {\n      id = \"\"+randomId;\n    }\n    return id;\n  }\n}\n","<div *ngIf=\"order; else loaderTmpl\" class=\"w-full h-full\">\n    <div class=\"row \">   \n        <div class=\"col-lg-12\">\n            <div class=\"row order-success-sec\">\n                <div class=\"col-sm-12\">\n                    <h4>{{'Order Type'|translate}} {{ order.type|orderType|translate }}</h4>\n                    <div class=\"myy-5\"></div>\n                </div>\n                <div class=\"col-sm-4 border-br\">\n                    <h4>{{'Summery'|translate}}</h4>\n                    <div class=\"myy-5\"></div>\n                    <ul class=\"order-detail\">\n                        <li>{{'Order ID :'|translate}} {{ order.orderId }}</li>\n                        <li>{{'Order Date :'|translate}} {{ order.date}}</li>\n                        <li>{{'Order Total :'|translate}} {{ order.totalAmount}} {{'EGP'|translate}}</li>\n                    </ul>\n                    <div class=\"myy-5\"></div>\n                </div>\n                <div *ngIf=\"order.type=='1' || order.type=='3'\" class=\"col-sm-4 border-br\">\n                    <h4>{{'Client Information'|translate}}</h4>\n                    <div class=\"myy-5\"></div>\n                    <ul class=\"order-detail\">\n                        <li><a routerLink = \"/customers/view-customer\" [queryParams]=\"{id: order?.userId}\" target=\"_blank\">{{ order.to.name }}</a></li>\n                        <li>{{'Contact No.'|translate}} {{ order.to.phone }}</li>\n                        <li>  <button (click)=\"chat()\" class=\"btn btn-primary mr-1\" style=\"margin: 5px;\" >\n                            {{'Messege'|translate}}\n                        </button></li>\n                    </ul>\n                    <div class=\"myy-4\"></div>\n                  \n                </div>\n                <div *ngIf=\"order.type=='1'\" class=\"col-sm-4 border-br\">\n                    \n                    <h4>{{'Shop Information'|translate}}</h4>\n                    <div class=\"myy-5\"></div>\n                    <ul class=\"order-detail\">\n                        <li><a routerLink = \"/shops/view-shop\" [queryParams]=\"{id: order?.shopId}\" target=\"_blank\">{{ order.from.name }} </a></li>\n                        <li>{{'Contact No.'|translate}} {{ order.from.phone }}</li>\n                     \n                    </ul>\n                    <div class=\"myy-5\"></div>\n                </div>\n                <div *ngIf=\"order.type=='2'\" class=\"col-sm-4 border-br\">\n                    \n                    <h4>{{'Sender Information'|translate}}</h4>\n                    <div class=\"myy-5\"></div>\n                    <ul class=\"order-detail\">\n                        <li>{{ order.from.name }} </li>\n                        <li>{{'Contact No.'|translate}} : {{ order.from.phone }}</li>\n                    </ul>\n                    <div class=\"myy-5\"></div>\n                </div>\n                <div *ngIf=\"order.type=='2'\" class=\"col-sm-4 border-br\">\n                    <h4>{{'Reciver Information'|translate}}</h4>\n                    <div class=\"myy-5\"></div>\n                    <ul class=\"order-detail\">\n                        <li>{{ order.to.name }}</li>\n                        <li>{{'Contact No.'|translate}} : {{ order.to.phone }}</li>\n                    </ul>\n                    <div class=\"myy-4\"></div>\n                  \n                </div>\n               \n                \n                <div *ngIf=\"order.payment == 'Delivery'\" class=\"col-sm-8 border-br\">\n                    <div *ngIf=\"order.type=='2'\"  class=\"row\">\n                       <div class=\"col-sm-6 \">\n                        <h4>{{'Sender address'|translate}}</h4>\n                        <div class=\"myy-5\"></div>\n                        <ul class=\"order-detail\">\n                        <li>{{ order.from.address }}</li>\n                        <li>{{ order.from.state }} , {{ order.from.town }} ,{{'Building No.'|translate}} ( {{ order.from.building }} )  {{'Appartment No.'|translate}} ( {{ order.from.apartment }} )</li>\n                       \n                       </ul>   \n                       </div>\n                       <div   class=\"col-sm-6\">\n                        <h4>{{'Reciver address'|translate}}</h4>\n                        <div class=\"myy-5\"></div>\n                        <ul class=\"order-detail\">\n                        <li>{{ order.to.address }}</li>\n                        <li>{{states|statePipe: order.to.state }} , {{towns|townPipe: order.to.town }} ,{{'Building No.'|translate}} ( {{ order.to.building }} )  {{'Appartment No.'|translate}} ( {{ order.to.apartment }} )</li>\n                       \n                        </ul>   \n                       </div>\n                    </div>\n                    <div *ngIf=\"order.type=='1' || order.type=='3'\">\n                         <h4>{{'Shipping address'|translate}}</h4>\n                         <div class=\"myy-5\"></div>\n                         <ul class=\"order-detail\">\n                        <li>{{ order.to.address }}</li>\n                        <li>{{ order.to.state }} , {{ order.to.town }} ,{{'Building No.'|translate}} ( {{ order.to.building }} )  {{'Appartment No.'|translate}} ( {{ order.to.apartment }} )</li>\n                       \n                       </ul>\n                       </div>\n                   \n                    <a (click)=\"viewMap()\" style=\"margin: 5px; float: right;\" class=\"btn btn-primary mr-1\" translate><i class=\"fa fa-map-marker\" aria-hidden=\"true\" ></i>Map</a>\n                    <div class=\"myy-5\"></div>\n                </div>\n                \n                \n                <div class=\"col-sm-4 border-br\">\n                    <h4>{{'Order Status'|translate}}</h4>\n                    <div class=\"myy-5\"></div>\n                    <select class=\"form-control digits col-xl-12 col-sm-12\"\n                                id=\"exampleFormControlSelect2\"  [(ngModel)]= \"orderStatus\" [ngModelOptions]=\"{standalone: true}\" [disabled] = \"!canUpdate\">\n                                <option *ngFor=\"let sta of Status\" [value]=\"sta.id\" [selected] = \"sta.id==orderStatus\">\n                                    {{sta.name|translate}}\n                                </option>\n                            </select>\n                            <div class=\"myy-5\"></div>\n                            <div *ngIf=\"orderStatus == '1'\" class=\"form-group\">\n                                <h4>{{'Prepare time in minits'|translate}}</h4>\n                                    \n                                <input class=\"form-control col-xl-12 col-sm-12\" id=\"validationCustom0\"\n                                    type=\"number\" [(ngModel)]= \"pTime\" [value]=\"pTime\"  required=\"\">\n                                <h4 *ngIf=\"order.type == '3'\">{{'Price'|translate}}</h4>\n                                    \n                                <input *ngIf=\"order.type == '3'\" class=\"form-control col-xl-12 col-sm-12\" id=\"validationCustom0\"\n                                    type=\"number\" [(ngModel)]= \"price\" [value]=\"price\"  required=\"\">\n                            </div>\n                        <button (click)=\"updteStatus()\" class=\"btn btn-primary mr-1\" style=\"margin: 5px;\" [disabled] = \"!canUpdate || orderStatus != '5'\"  >\n                            {{'Update'|translate}}\n                        </button>\n                        <button *ngIf=\"order.deliveryBoy == '' && order.type!='2'\" (click)=\"RequestDelivery()\" class=\"btn btn-primary mr-1\" style=\"margin: 5px; float: right;\" [disabled] = \"!canUpdate\" >\n                            {{'Request Delivery'|translate}}\n                        </button>\n                       <h5 *ngIf=\"order.deliveryBoy != ''\" style=\"margin: 5px; float: right;\">{{'Delivery Boy'|translate}}  <a *ngIf=\"order.deliveryBoy != ''\"  target=\"_blank\" routerLink = \"/delivery/view-delivery-boy\" [queryParams]=\"{id: order?.deliveryBoy}\">{{ order?.deliveryBoy }}</a></h5>\n                    <div class=\"myy-5\"></div>\n                </div>\n                \n                \n            </div>\n        </div>\n\n    </div>\n    <div class=\"row\" *ngIf=\"showMap && order.type!='3'\">\n        <div  class=\"col-md-12\">\n            <div class=\"form-group col-md-12 col-sm-12 col-xs-12\">  \n                <div class=\"col-md-12\">\n                    <div class=\"map-icons street\">\n                    \n                        <div  style=\"background-color: #ff5a00; padding: 14px;\">\n                            <h6 class=\"text-white\">{{'Distance :'|translate}} {{distance | number : '1.2-2'}} {{'Km'|translate}}</h6>\n                        </div>\n    \n                        </div>\n                    <agm-map directionsMap \n                    [showDirection]=\"displayDirections\"\n                    [origin]=\"origin\"\n                    [destination]=\"destination\"\n                    [zoom]=\"zoom\"\n                    [disableDefaultUI]=\"false\">\n                    \n                     <agm-marker\n                     [latitude]=\"origin.latitude\"\n                     [longitude]=\"origin.longitude\"\n                     [iconUrl] =\"shopIcon\">\n                    </agm-marker>\n                    <agm-marker\n                    [latitude]=\"destination.latitude\"\n                    [longitude]=\"destination.longitude\"\n                    [iconUrl] =\"userIcon\">\n                   </agm-marker>\n                </agm-map>\n                </div>\n            </div>\n        \n\n            \n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"showMap && order.type=='3'\">\n        <div  class=\"col-md-12\">\n            <div class=\"form-group col-md-12 col-sm-12 col-xs-12\">  \n                <div class=\"col-md-12\">\n                    <div class=\"map-icons street\">\n                    \n                    \n    \n                        </div>\n                    <agm-map \n                    [latitude]=\"origin.latitude\" [longitude]=\"origin.longitude\"\n                    [zoom]=\"zoom\"\n                    [disableDefaultUI]=\"false\">\n                    \n                     <agm-marker\n                     [latitude]=\"origin.latitude\"\n                     [longitude]=\"origin.longitude\"\n                     [iconUrl] =\"userIcon\">\n                    </agm-marker>\n\n                </agm-map>\n                </div>\n            </div>\n        \n\n            \n        </div>\n    </div>\n    <div class=\"row  \">\n        <div class=\"col-lg-12\">\n            <div class=\"product-order\">\n                <div  class=\"col-sm-12\">\n                    <div *ngIf=\"order.type == '2' || order.type=='3'\" style=\"display: flex;\">\n                        <div class=\"col-md-6\">\n                            <h4>{{'Order Details'|translate}}</h4>\n                            <h5>{{order.txt_order}}</h5>\n                        </div>\n                        <div *ngIf=\"order.img_order !=''\" class=\"col-md-6\">\n                           <a [href]=\"order.img_order\" target=\"_blank\"><img [src]=\"order.img_order\" alt=\"\" class=\"img-fluid image_zoom_1\" width=\"200px\"></a> \n                        </div>\n                        \n                    </div>\n                    <table *ngIf=\"order.type == '1'\" class=\"table cart-table table-responsive-xs\">\n                        <thead>\n                            <tr class=\"table-head\">\n                                <th scope=\"col\">{{'product name'|translate}}</th>\n                                <th scope=\"col\">{{'Add-ons'|translate}}</th>\n                                <th scope=\"col\">{{'price'|translate}}</th>\n                                <th scope=\"col\">{{'quantity'|translate}}</th>\n                                <th scope=\"col\">{{'total'|translate}}</th>\n                            </tr>\n                        </thead>\n                        <tbody *ngFor=\"let product of order.product\">\n                            <tr>\n                              \n                                <td>\n                                    {{ product.title | titlecase }} ({{ product.size | titlecase}}) \n                                   \n                                </td>\n                               <td>\n                                <div class=\"col-xs-3\">\n                                    <ul>\n                                        <li *ngFor=\"let side of product.sides\">\n                                    \n                                        {{ side.name}} {{ side.price }} {{'EGP'|translate}}\n                                      \n                                        </li>\n                                    </ul>\n                                    \n                                </div>\n                               </td>\n                                <td>\n                                    <h2>\n                                        {{ product.price }} {{'EGP'|translate}}\n                                    </h2>\n                                </td>\n                                <td>\n                                    <h2>{{product.quantity}}</h2>\n                                </td>\n                                \n                                <td>\n                                    <h2 class=\"td-color\">\n                                        {{ (product.price * product.quantity) * productService?.Currency.price }} {{'EGP'|translate}}\n                                    </h2>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <table class=\"table cart-table table-responsive-md\">\n                        <tfoot>\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                        \n                                <td>{{'Subtotal'|translate}} </td>\n                                <td>\n                                    <h2> {{ order.subtotal | number : '1.2-2' }} {{'EGP'|translate}}</h2>\n                                </td>\n                            </tr>\n                            <tr >\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                        \n                                <td>{{'Tax'|translate}}</td>\n                                <td>\n                                    <h2> {{ order.tax | number : '1.2-2'}} {{'EGP'|translate}}</h2>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"order.shipping > 0\">\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                        \n                                <td>{{'Shipping'|translate}} </td>\n                                <td>\n                                    <h2> {{ order.shipping | number : '1.2-2'}} {{'EGP'|translate}}</h2>\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"order.discount > 0\">\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                        \n                                <td>{{'Discount'|translate}} </td>\n                                <td>\n                                    <h2> {{ order.discount | number : '1.2-2'}} {{'EGP'|translate}}</h2>\n                                </td>\n                            </tr>\n                            <tr >\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                        \n                                <td><h5>{{'Total'|translate}}</h5></td>\n                                <td>\n                                    <h5> {{ order.totalAmount | number : '1.2-2'}} {{'EGP'|translate}}</h5>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n                \n                \n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #loaderTmpl>\n    <issue-loader></issue-loader>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { FilterStore, FilterState } from './filter.store';\n\n@Injectable({ providedIn: 'root' })\nexport class FilterQuery extends Query<FilterState> {\n  any$ = this.select(\n    ({ searchTerm, userIds, onlyMyIssue, ignoreResolved }) =>\n      !!searchTerm || !!userIds?.length || onlyMyIssue || ignoreResolved\n  );\n  all$ = this.select();\n  userIds$ = this.select('userIds');\n  onlyMyIssue$ = this.select('onlyMyIssue');\n  ignoreResolve$ = this.select('ignoreResolved');\n\n  constructor(protected store: FilterStore) {\n    super(store);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DeliveryRoutingModule } from './delivery-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GalleryModule } from '@ks89/angular-modal-gallery';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CountToModule } from 'angular-count-to';\nimport { DataTablesModule } from 'angular-datatables';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { CKEditorModule } from 'ngx-ckeditor';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ListDeliveryBoysComponent } from './list-delivery-boys/list-delivery-boys.component';\nimport { ViewDeliveryBoyComponent } from './view-delivery-boy/view-delivery-boy.component';\nimport { AddDeliveryBoyComponent } from './add-delivery-boy/add-delivery-boy.component';\nimport { ZoneHoursComponent } from './zone-hours/zone-hours.component';\nimport { ZoneDeliveryBoysTrackingComponent } from './zone-delivery-boys-tracking/zone-delivery-boys-tracking.component';\nimport { ZoneOrdersComponent } from './zone-orders/zone-orders.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueModalComponent } from './issue-modal/issue-modal.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { OrdersBoardComponent } from './orders-board/orders-board.component';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { IssueDetailComponent } from './issue-detail/issue-detail.component';\nimport { IssueLoaderComponent } from './issue-loader/issue-loader.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { AgmDrawingModule } from '@agm/drawing';\nimport { mapDirective } from 'src/app/shared/service/map.directive';\nimport { OrdersDashboardComponent } from './orders-dashboard/orders-dashboard.component';\nimport { NgChatModule } from 'ng-chat';\nimport { DeliverySummeryComponent } from './delivery-summery/delivery-summery.component';\nimport { DeliveryOrdersComponent } from './delivery-orders/delivery-orders.component';\nimport { DeliveryAccountsComponent } from './delivery-accounts/delivery-accounts.component';\nimport { ZoneChatComponent } from './zone-chat/zone-chat.component';\nimport { DeliveryHourReportComponent } from './delivery-hour-report/delivery-hour-report.component';\n\n\n\n@NgModule({\n  declarations: [ListDeliveryBoysComponent,IssueLoaderComponent,IssueCardComponent,IssueModalComponent,IssueDetailComponent, ViewDeliveryBoyComponent,\n     AddDeliveryBoyComponent, ZoneHoursComponent, ZoneDeliveryBoysTrackingComponent, ZoneOrdersComponent, OrdersBoardComponent,mapDirective, OrdersDashboardComponent, DeliverySummeryComponent, DeliveryOrdersComponent, DeliveryAccountsComponent, ZoneChatComponent, DeliveryHourReportComponent],\n  imports: [\n    CommonModule,\n    DeliveryRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CKEditorModule,\n    NzModalModule,\n    Ng2SmartTableModule,\n    NgbModule,\n    DropzoneModule,\n    TranslateModule,\n    DragDropModule,\n    ContentLoaderModule,\n    DataTablesModule,\n    CountToModule,\n    SharedModule,\n    MatProgressSpinnerModule,\n    GalleryModule.forRoot(),\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyCzWiF1jqp_BF-jxFHEq53C23NUZ81VwVc',\n      libraries: ['places', 'drawing', 'geometry'],\n      language: localStorage && localStorage.lang || 'ar'\n\n    }),\n    AgmDrawingModule\n  ]\n})\nexport class DeliveryModule { }\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\nimport { NzModalRef } from 'ng-zorro-antd/modal';\nimport { Observable } from 'rxjs';\nimport { DeleteIssueModel } from 'src/app/shared/data/delete-issue-model';\nimport { Order } from 'src/app/shared/interfaces/order';\n\n\nimport { ProjectService } from 'src/app/shared/service/project.service';\n\n@Component({\n  selector: 'issue-modal',\n  templateUrl: './issue-modal.component.html',\n  styleUrls: ['./issue-modal.component.scss']\n})\nexport class IssueModalComponent {\n  @Input() orderId: string;\n\n  constructor(\n    private _modal: NzModalRef,\n    private _router: Router,\n    private _projectService: ProjectService\n  ) {}\n\n  closeModal() {\n    this._modal.close();\n  }\n\n  openIssuePage(issueId: string) {\n    this.closeModal();\n    this._router.navigate(['project', 'issue', issueId]);\n  }\n\n  deleteIssue({ issueId, deleteModalRef }: DeleteIssueModel) {\n    this._projectService.deleteIssue(issueId);\n    deleteModalRef.close();\n    this.closeModal();\n  }\n  \n}\n","<div class=\"px-3\">\n    <issue-detail [orderId]=\"orderId\"\n                  [isShowFullScreenButton]=\"true\"\n                  [isShowCloseButton]=\"true\"\n                  (onClosed)=\"closeModal()\"\n                  (onOpenIssue)=\"openIssuePage($event)\"\n                  (onDelete)=\"deleteIssue($event)\">\n    </issue-detail>\n</div>","import { AgmMap } from '@agm/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Component, Inject, Input, OnInit, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { State } from 'src/app/shared/interfaces/state';\nimport { Town } from 'src/app/shared/interfaces/town';\nimport { AuthService } from 'src/app/shared/service/auth.service';\nimport { ProductService } from 'src/app/shared/service/product.service';\nimport { MapsAPILoader,MouseEvent } from '@agm/core';\nimport { DeliveryService } from 'src/app/shared/service/delivery.service';\nimport { DeliveryBoy } from 'src/app/shared/interfaces/delivery-boy';\nimport { Hour, ZoneUser } from 'src/app/shared/interfaces/hour';\ndeclare const google: any;\nexport interface DBLatLng {\n  id:string;\n  name:string;\n  latitude: number;\n  longitude: number;\n\n}\n@Component({\n  selector: 'app-zone-delivery-boys-tracking',\n  templateUrl: './zone-delivery-boys-tracking.component.html',\n  styleUrls: ['./zone-delivery-boys-tracking.component.scss']\n})\nexport class ZoneDeliveryBoysTrackingComponent implements OnInit {\n\n  @ViewChild(AgmMap) agmMap: any;\n  title: string = 'AGM project';\n  latitude: number=30.033333;\n  longitude: number=31.233334;\n  zoom: number = 17;\n  address: string;\n  private geoCoder;\n  polygon: any;\n  Zone:any = [];\n  state:State;\n  zoneHour:Hour;\n  triangleCoords:any;\n  zoneUsers:ZoneUser[] = [];\n  managerOptions = {\n    drawingControl: true,\n    drawingControlOptions: {\n      drawingModes: ['polygon']\n    },\n    polygonOptions: {\n      draggable: false,\n      editable: true\n    },\n    drawingMode: \"polygon\"\n  };\n\n  options: any = {\n    lat: this.latitude,\n    lng: this.longitude,\n    zoom: 14,\n    fillColor: '#DC143C',\n    draggable: true,\n    editable: true,\n    visible: true\n  };\n  public closeResult: string;\n  public modalOpen: boolean = false;\n  public products: any[] = [];\n  public towns:Town[] = [];\n  public states:State[] = [];\n  public dBoyes:DeliveryBoy[]=[];\n  public locations:string[]=[];\n  public dbL:DBLatLng[] = [];\n  @Input() stateId = \"\";\n  townId = \"\";\n  lang:any;\n  dbIcon={\n    url:'./assets/images/icons/db.png',\n    scaledSize: {\n        width: 40,\n        height: 40\n    },\n    labelOrigin: { x: 16, y: 48 }\n  }\n  constructor(private deliveryService: DeliveryService,@Inject(PLATFORM_ID) private platformId: Object,\n    private modalService: NgbModal,\n    private toastr:ToastrService,\n    private productService: ProductService,\n    private router:Router) {\n      this.lang=localStorage.getItem('language');\n      \n    \n  }\n  onMapReady(map){\n    this.geoCoder = new google.maps.Geocoder;\n    this.agmMap = map;\n  }\n  mapClicked($event: MouseEvent) {\n   if(this.isWithinPoly($event,this.polygon)){\n    this.latitude = $event.coords.lat;\n    this.longitude = $event.coords.lng;\n    //this.getMAddress(this.latitude, this.longitude);\n   }else{\n     this.toastr.error(\"لا يمكن التوصيل خارج المنطقة المظللة\")\n   }\n    \n    \n  }\n  \n  getLocation() {\n\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((response) => {\n            //this.setPosition(response);\n            this.latitude = response.coords.latitude;\n            this.longitude = response.coords.longitude;\n            this.options.lat = response.coords.latitude;\n            this.options.lng = response.coords.longitude;\n        }, function () {\n            alert(\"Unable to get the GPS location\");\n        }, { maximumAge: 60000, timeout: 5000, enableHighAccuracy: true });\n    };\n}\n\n\n  addPolygon(){\n    this.polygon = new google.maps.Polygon({\n      paths: this.triangleCoords,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n      editable: false,\n      draggable: false,\n    });\n\n   \n\n   var cn =  this.polygonCenter(this.triangleCoords);\n   this.longitude = cn.lng;\n   this.latitude = cn.lat;\n   this.options.lat = this.latitude\n   this.options.lng = this.longitude\n    \n\n  }\n  showDb(db:DeliveryBoy){\n    this.options.lat = db.location.lat;\n    this.options.lng = db.location.lng;\n    this.options.zoom = 15;\n  }\n  \n  ngOnInit(): void {\n    this.getZone();\n    let date = new Date();\n    var hours = date.getHours();\n    let h = this.selectedHour(hours);\n    var day = date.getDay();\n    let d = this.selectedDay(day);\n    console.log(h,d);\n\n        this.deliveryService.getOnlineDeliveryBoysByZone(this.stateId).subscribe(res=>{\n          this.dBoyes = [];\n          this.dBoyes = res ;\n          console.log(this.dBoyes)\n        \n         })\n      \n   \n  }\n  selectedHour(hours: number) {\n    if(hours>10){\n      return \"\"+hours\n    }else{\n      return \"0\"+hours;\n    }\n  }\n  selectedDay(day:number) {\n    if(day==0){\n      return '2'\n    }else if(day==1){\n      return '3'\n    }else if(day==2){\n      return '4'\n    }else if(day==3){\n      return '5'\n    }else if(day==4){\n      return '6'\n    }else if(day==5){\n      return '0'\n    }else if(day==6){\n      return '1'\n    }\n  }\n\n  \n\n  getZone(){\n    this.deliveryService.getState(this.stateId).subscribe(state=>{\n      this.state = state;\n      this.triangleCoords = this.state.map;\n      google.maps.Polygon.prototype.my_getBounds=function(){\n        var bounds = new google.maps.LatLngBounds()\n        this.getPath().forEach(function(element,index){bounds.extend(element)})\n        return bounds\n    }\n      \n      this.addPolygon()\n    })\n  }\n\n \n  \n  getMAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      if (status === 'OK') {\n        if (results[0]) {\n          this.zoom = 17;\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n  \n    });\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  \n\n  \n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnDestroy() {\n    if(this.modalOpen){\n      this.modalService.dismissAll();\n    }\n  }\n\n  isWithinPoly(event,polgon){\n    var isWithinPolygon = google.maps.geometry.poly.containsLocation(new google.maps.LatLng(event.coords.lat, event.coords.lng), polgon);\n    return isWithinPolygon;\n  }\n\n  polygonCenter(poly) {\n    const vertices = poly;\n  \n    // put all latitudes and longitudes in arrays\n    const longitudes = vertices.map(i => i.lng);\n    const latitudes = vertices.map( i => i.lat);\n  \n    // sort the arrays low to high\n    latitudes.sort();\n    longitudes.sort();\n  \n    // get the min and max of each\n    const lowX = latitudes[0];\n    const highX = latitudes[latitudes.length - 1];\n    const lowy = longitudes[0];\n    const highy = longitudes[latitudes.length - 1];\n  \n    // center of the polygon is the starting point plus the midpoint\n    const centerX = lowX + ((highX - lowX) / 2);\n    const centerY = lowy + ((highy - lowy) / 2);\n  \n    return ({lat:centerX, lng:centerY});\n  }\n  }\n","<div class=\"container-fluid\" >\n  <div class=\"row\">\n    <div class=\"col-xl-2\" style=\"padding-right: 0;padding-left: 0;\" >  \n    <div  style=\"background-color: #ff5a00; padding: 5px;\" class=\"text-center\">\n        <h6 class=\"text-white\">{{'Delivery Boys'|translate}} </h6>\n        \n    </div>\n    <ul class=\"order-detail\">\n      <li style=\"display: flex;\" *ngFor=\"let db of dBoyes\"><div class=\"col-md-8\"><a (click)=\"showDb(db)\">{{ db.name }} </a></div><div class=\"col-md-4\"><a *ngIf=\"db.online && db.busy\">{{ 'Busy'|translate }} </a><a style=\"color: rgb(84, 167, 2);\" *ngIf=\"db.online &&!db.busy\">{{ 'Online'|translate }} </a><a style=\"color: rgb(74, 75, 73);\" *ngIf=\"!db.online \">{{ 'Offline'|translate }} </a></div></li>\n  </ul>\n    </div>\n    <div  class=\"col-xl-10\" style=\"padding-right: 0;padding-left: 0;\" fxLayout=\"column\">\n       <div class=\"map\" fxFlex=\"1 1 100%\" #map>\n         \n            <agm-map [latitude]=\"options.lat\" [longitude]=\"options.lng\" [zoom]=\"options.zoom\" (mapReady)=\"onMapReady($event)\" (mapClick)=\"mapClicked($event)\" #agmMap>\n                                            \n            <agm-marker *ngFor=\"let db of dBoyes \" [latitude]=\"db.location.lat\" [longitude]=\"db.location.lng\" [markerDraggable]=\"false\"  [iconUrl] =\"dbIcon\" [label]=\"db.name\"\n            ></agm-marker>\n            <agm-polygon [paths]=\"triangleCoords\" [clickable]=\"false\">\n            </agm-polygon>\n\n          </agm-map>\n        </div>\n    </div>\n  </div>\n  \n       \n        \n    \n</div>\n","import { ProjectState, ProjectStore } from './project.store';\nimport { Injectable, Input } from '@angular/core';\nimport { Query } from '@datorama/akita';\n\nimport { map, delay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { IssueStatus } from './issue';\nimport { Order } from '../interfaces/order';\nimport { OrderService } from '../service/order.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectQuery extends Query<ProjectState> {\n  \n\n  orders:Order[] =[] \n \n\n  constructor(protected store: ProjectStore,private orderService:OrderService) {\n    super(store);\n    \n  }\n\n  \n  lastIssuePosition = (status: IssueStatus): number => {\n    const raw = this.orders;\n    console.log(\"raw:\"+raw)\n    const issuesByStatus = raw.filter(x => x.status === status);\n    return issuesByStatus.length;\n  };\n\n  issueByStatusSorted$ = (status: IssueStatus,orders:Order[] ): Order[] => orders\n          .filter((x) => x.status === status)\n          .sort((a, b) => a.orderId - b.orderId);\n\n  //issueById$(issueId: string){\n ////   return this.issues$.pipe(\n  //    delay(500),\n  //    map((issues) => issues.find(x => x.id === issueId))\n //   );\n // }\n}\n","import {Directive, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {GoogleMapsAPIWrapper} from '@agm/core';\n\n// You can use any other interface for origin and destination, but it must contain latlng data\nexport interface ILatLng {\n  latitude: number;\n  longitude: number;\n}\n\n// the will keep typescript from throwing errors w.r.t the google object\ndeclare var google: any;\n\n@Directive({\n  selector: '[directionsMap]'\n})\nexport class mapDirective implements OnInit, OnChanges {\n  @Input() origin: ILatLng;\n  @Input() destination: ILatLng;\n  @Input() showDirection: boolean;\n\n  // We'll keep a single google maps directions renderer instance so we get to reuse it.\n  // using a new renderer instance every time will leave the previous one still active and visible on the page\n  private directionsRenderer: any;\n\n  // We inject AGM's google maps api wrapper that handles the communication with the Google Maps Javascript\n  constructor(private gmapsApi: GoogleMapsAPIWrapper) {}\n\n  ngOnInit() {\n    this.drawDirectionsRoute();\n  }\n\n  drawDirectionsRoute() {\n      this.gmapsApi.getNativeMap().then(map => {\n        if (!this.directionsRenderer) {\n          // if you already have a marker at the coordinate location on the map, use suppressMarkers option\n          // suppressMarkers prevents google maps from automatically adding a marker for you\n          this.directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true});\n        }\n        const directionsRenderer = this.directionsRenderer;\n\n        if ( this.showDirection && this.destination ) {\n            const directionsService = new google.maps.DirectionsService;\n            directionsRenderer.setMap(map);\n            directionsService.route({\n                origin: {lat: this.origin.latitude, lng: this.origin.longitude},\n                destination: {lat: this.destination.latitude, lng: this.destination.longitude},\n                waypoints: [],\n                optimizeWaypoints: true,\n                travelMode: 'DRIVING'\n            }, (response, status) => {\n                if (status === 'OK') {\n                    directionsRenderer.setDirections(response);\n                    // If you'll like to display an info window along the route\n                    // middleStep is used to estimate the midpoint on the route where the info window will appear\n                    // const middleStep = (response.routes[0].legs[0].steps.length / 2).toFixed();\n                    // const infowindow2 = new google.maps.InfoWindow();\n                    // infowindow2.setContent(`${response.routes[0].legs[0].distance.text} <br> ${response.routes[0].legs[0].duration.text}  `);\n                    // infowindow2.setPosition(response.routes[0].legs[0].steps[middleStep].end_location);\n                    // infowindow2.open(map);\n                } else {\n                    console.log('Directions request failed due to ' + status);\n                }\n            });\n        }\n\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n      if (changes.destination || changes.showDirection) {\n          // this checks if the show directions input changed, if so the directions are removed\n          // else we redraw the directions\n          if (changes.showDirection && !changes.showDirection.currentValue) {\n              if (this.directionsRenderer !== undefined) { // check this value is not undefined\n                  this.directionsRenderer.setDirections({routes: []});\n                  return;\n              }\n          } else {\n              this.drawDirectionsRoute();\n          }\n      }\n  }\n\n}","import { IssuePriority, IssuePriorityColors } from './issue';\n\nexport class IssuePriorityIcon {\n  icon: string;\n  value: string;\n  color: string;\n\n  constructor(issuePriority: IssuePriority) {\n    const lowerPriorities = [IssuePriority.LOW, IssuePriority.LOWEST];\n    this.value = issuePriority;\n    this.icon = lowerPriorities.includes(issuePriority) ? 'arrow-down' : 'arrow-up';\n    this.color = IssuePriorityColors[issuePriority];\n  }\n}\n"],"sourceRoot":"webpack:///"}